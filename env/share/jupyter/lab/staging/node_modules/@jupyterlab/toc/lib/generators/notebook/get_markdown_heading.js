// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
import { generateNumbering } from '../../utils/generate_numbering';
import { parseHeading } from '../../utils/parse_heading';
/**
 * Parses a Markdown string and returns a notebook heading.
 *
 * @private
 * @param text - Markdown string
 * @param onClick - callback which returns a "click" handler
 * @param dict - numbering dictionary
 * @param lastLevel - last level
 * @param cellRef - cell reference
 * @returns notebook heading
 */
function getMarkdownHeadings(text, onClick, dict, lastLevel, cellRef) {
    const clbk = onClick(0);
    let headings = [];
    for (const line of text.split('\n')) {
        const heading = parseHeading(line);
        if (heading) {
            headings.push({
                text: heading.text,
                level: heading.level,
                numbering: generateNumbering(dict, heading.level),
                onClick: clbk,
                type: 'header',
                cellRef: cellRef,
                hasChild: false
            });
        }
        else {
            headings.push({
                text: text,
                level: lastLevel + 1,
                onClick: clbk,
                type: 'markdown',
                cellRef: cellRef,
                hasChild: false
            });
        }
    }
    return headings;
}
/**
 * Exports.
 */
export { getMarkdownHeadings };
//# sourceMappingURL=get_markdown_heading.js.map