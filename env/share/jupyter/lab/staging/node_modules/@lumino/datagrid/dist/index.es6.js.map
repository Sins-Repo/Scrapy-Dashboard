{"version":3,"file":"index.es6.js","sources":["../src/basickeyhandler.ts","../src/basicmousehandler.ts","../../../node_modules/tslib/tslib.es6.js","../src/selectionmodel.ts","../src/basicselectionmodel.ts","../src/cellrenderer.ts","../src/notification.ts","../src/celleditor.ts","../src/datamodel.ts","../src/graphicscontext.ts","../src/textrenderer.ts","../src/renderermap.ts","../src/sectionlist.ts","../src/celleditorcontroller.ts","../src/datagrid.ts","../src/jsonmodel.ts"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  Platform\n} from '@lumino/domutils';\n\nimport {\n  getKeyboardLayout\n} from '@lumino/keyboard';\n\nimport {\n  DataGrid\n} from './datagrid';\n\nimport {\n  SelectionModel\n} from './selectionmodel';\n\nimport {\n  CellEditor\n} from './celleditor';\n\nimport {\n  MutableDataModel\n} from './datamodel';\n\n\n/**\n * A basic implementation of a data grid key handler.\n *\n * #### Notes\n * This class may be subclassed and customized as needed.\n */\nexport\nclass BasicKeyHandler implements DataGrid.IKeyHandler {\n  /**\n   * Whether the key handler is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._disposed;\n  }\n\n  /**\n   * Dispose of the resources held by the key handler.\n   */\n  dispose(): void {\n    this._disposed = true;\n  }\n\n  /**\n   * Handle the key down event for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The keydown event of interest.\n   *\n   * #### Notes\n   * This will not be called if the mouse button is pressed.\n   */\n  onKeyDown(grid: DataGrid, event: KeyboardEvent): void {\n    // if grid is editable and cell selection available, start cell editing\n    // on key press (letters, numbers and space only)\n    if (grid.editable && \n      grid.selectionModel!.cursorRow !== -1 &&\n      grid.selectionModel!.cursorColumn !== -1) {\n      const input = String.fromCharCode(event.keyCode);\n      if (/[a-zA-Z0-9-_ ]/.test(input)) {\n        const row = grid.selectionModel!.cursorRow;\n        const column = grid.selectionModel!.cursorColumn;\n        const cell: CellEditor.CellConfig = {\n          grid: grid,\n          row: row,\n          column: column\n        };\n        grid.editorController!.edit(cell);\n        if (getKeyboardLayout().keyForKeydownEvent(event) === 'Space') {\n          event.stopPropagation();\n          event.preventDefault();\n        }\n        return;\n      }\n    }\n\n    switch (getKeyboardLayout().keyForKeydownEvent(event)) {\n    case 'ArrowLeft':\n      this.onArrowLeft(grid, event);\n      break;\n    case 'ArrowRight':\n      this.onArrowRight(grid, event);\n      break;\n    case 'ArrowUp':\n      this.onArrowUp(grid, event);\n      break;\n    case 'ArrowDown':\n      this.onArrowDown(grid, event);\n      break;\n    case 'PageUp':\n      this.onPageUp(grid, event);\n      break;\n    case 'PageDown':\n      this.onPageDown(grid, event);\n      break;\n    case 'Escape':\n      this.onEscape(grid, event);\n      break;\n    case 'Delete':\n      this.onDelete(grid, event);\n      break;\n    case 'C':\n      this.onKeyC(grid, event);\n      break;\n    case 'Enter':\n      if (grid.selectionModel) {\n        grid.moveCursor(event.shiftKey ? 'up' : 'down');\n        grid.scrollToCursor();\n      }\n      break;\n    case 'Tab':\n      if (grid.selectionModel) {\n        grid.moveCursor(event.shiftKey ? 'left' : 'right');\n        grid.scrollToCursor();\n        event.stopPropagation();\n        event.preventDefault();\n      }\n      break;\n    }\n  }\n\n  /**\n   * Handle the `'ArrowLeft'` key press for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The keyboard event of interest.\n   */\n  protected onArrowLeft(grid: DataGrid, event: KeyboardEvent): void {\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Fetch the selection model.\n    let model = grid.selectionModel;\n\n    // Fetch the modifier flags.\n    let shift = event.shiftKey;\n    let accel = Platform.accelKey(event);\n\n    // Handle no model with the accel modifier.\n    if (!model && accel) {\n      grid.scrollTo(0, grid.scrollY);\n      return;\n    }\n\n    // Handle no model and no modifier. (ignore shift)\n    if (!model) {\n      grid.scrollByStep('left');\n      return;\n    }\n\n    // Fetch the selection mode.\n    let mode = model.selectionMode;\n\n    // Handle the row selection mode with accel key.\n    if (mode === 'row' && accel) {\n      grid.scrollTo(0, grid.scrollY);\n      return;\n    }\n\n    // Handle the row selection mode with no modifier. (ignore shift)\n    if (mode === 'row') {\n      grid.scrollByStep('left');\n      return;\n    }\n\n    // Fetch the cursor and selection.\n    let r = model.cursorRow;\n    let c = model.cursorColumn;\n    let cs = model.currentSelection();\n\n    // Set up the selection variables.\n    let r1: number;\n    let r2: number;\n    let c1: number;\n    let c2: number;\n    let cr: number;\n    let cc: number;\n    let clear: SelectionModel.ClearMode;\n\n    // Dispatch based on the modifier keys.\n    if (accel && shift) {\n      r1 = cs ? cs.r1 : 0;\n      r2 = cs ? cs.r2 : 0;\n      c1 = cs ? cs.c1 : 0;\n      c2 = 0;\n      cr = r;\n      cc = c;\n      clear = 'current';\n    } else if (shift) {\n      r1 = cs ? cs.r1 : 0;\n      r2 = cs ? cs.r2 : 0;\n      c1 = cs ? cs.c1 : 0;\n      c2 = cs ? cs.c2 - 1 : 0;\n      cr = r;\n      cc = c;\n      clear = 'current';\n    } else if (accel) {\n      r1 = r;\n      r2 = r;\n      c1 = 0;\n      c2 = 0;\n      cr = r1;\n      cc = c1;\n      clear = 'all';\n    } else {\n      r1 = r;\n      r2 = r;\n      c1 = c - 1;\n      c2 = c - 1;\n      cr = r1;\n      cc = c1;\n      clear = 'all';\n    }\n\n    // Create the new selection.\n    model.select({ r1, c1, r2, c2, cursorRow: cr, cursorColumn: cc, clear });\n\n    // Re-fetch the current selection.\n    cs = model.currentSelection();\n\n    // Bail if there is no selection.\n    if (!cs) {\n      return;\n    }\n\n    // Scroll the grid appropriately.\n    if (shift || mode === 'column') {\n      grid.scrollToColumn(cs.c2);\n    } else {\n      grid.scrollToCursor();\n    }\n  }\n\n  /**\n   * Handle the `'ArrowRight'` key press for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The keyboard event of interest.\n   */\n  protected onArrowRight(grid: DataGrid, event: KeyboardEvent): void {\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Fetch the selection model.\n    let model = grid.selectionModel;\n\n    // Fetch the modifier flags.\n    let shift = event.shiftKey;\n    let accel = Platform.accelKey(event);\n\n    // Handle no model with the accel modifier.\n    if (!model && accel) {\n      grid.scrollTo(grid.maxScrollX, grid.scrollY);\n      return;\n    }\n\n    // Handle no model and no modifier. (ignore shift)\n    if (!model) {\n      grid.scrollByStep('right');\n      return;\n    }\n\n    // Fetch the selection mode.\n    let mode = model.selectionMode;\n\n    // Handle the row selection model with accel key.\n    if (mode === 'row' && accel) {\n      grid.scrollTo(grid.maxScrollX, grid.scrollY);\n      return;\n    }\n\n    // Handle the row selection mode with no modifier. (ignore shift)\n    if (mode === 'row') {\n      grid.scrollByStep('right');\n      return;\n    }\n\n    // Fetch the cursor and selection.\n    let r = model.cursorRow;\n    let c = model.cursorColumn;\n    let cs = model.currentSelection();\n\n    // Set up the selection variables.\n    let r1: number;\n    let r2: number;\n    let c1: number;\n    let c2: number;\n    let cr: number;\n    let cc: number;\n    let clear: SelectionModel.ClearMode;\n\n    // Dispatch based on the modifier keys.\n    if (accel && shift) {\n      r1 = cs ? cs.r1 : 0;\n      r2 = cs ? cs.r2 : 0;\n      c1 = cs ? cs.c1 : 0;\n      c2 = Infinity;\n      cr = r;\n      cc = c;\n      clear = 'current';\n    } else if (shift) {\n      r1 = cs ? cs.r1 : 0;\n      r2 = cs ? cs.r2 : 0;\n      c1 = cs ? cs.c1 : 0;\n      c2 = cs ? cs.c2 + 1 : 0;\n      cr = r;\n      cc = c;\n      clear = 'current';\n    } else if (accel) {\n      r1 = r;\n      r2 = r;\n      c1 = Infinity;\n      c2 = Infinity;\n      cr = r1;\n      cc = c1;\n      clear = 'all';\n    } else {\n      r1 = r;\n      r2 = r;\n      c1 = c + 1;\n      c2 = c + 1;\n      cr = r1;\n      cc = c1;\n      clear = 'all';\n    }\n\n    // Create the new selection.\n    model.select({ r1, c1, r2, c2, cursorRow: cr, cursorColumn: cc, clear });\n\n    // Re-fetch the current selection.\n    cs = model.currentSelection();\n\n    // Bail if there is no selection.\n    if (!cs) {\n      return;\n    }\n\n    // Scroll the grid appropriately.\n    if (shift || mode === 'column') {\n      grid.scrollToColumn(cs.c2);\n    } else {\n      grid.scrollToCursor();\n    }\n  }\n\n  /**\n   * Handle the `'ArrowUp'` key press for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The keyboard event of interest.\n   */\n  protected onArrowUp(grid: DataGrid, event: KeyboardEvent): void {\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Fetch the selection model.\n    let model = grid.selectionModel;\n\n    // Fetch the modifier flags.\n    let shift = event.shiftKey;\n    let accel = Platform.accelKey(event);\n\n    // Handle no model with the accel modifier.\n    if (!model && accel) {\n      grid.scrollTo(grid.scrollX, 0);\n      return;\n    }\n\n    // Handle no model and no modifier. (ignore shift)\n    if (!model) {\n      grid.scrollByStep('up');\n      return;\n    }\n\n    // Fetch the selection mode.\n    let mode = model.selectionMode;\n\n    // Handle the column selection mode with accel key.\n    if (mode === 'column' && accel) {\n      grid.scrollTo(grid.scrollX, 0);\n      return;\n    }\n\n    // Handle the column selection mode with no modifier. (ignore shift)\n    if (mode === 'column') {\n      grid.scrollByStep('up');\n      return;\n    }\n\n    // Fetch the cursor and selection.\n    let r = model.cursorRow;\n    let c = model.cursorColumn;\n    let cs = model.currentSelection();\n\n    // Set up the selection variables.\n    let r1: number;\n    let r2: number;\n    let c1: number;\n    let c2: number;\n    let cr: number;\n    let cc: number;\n    let clear: SelectionModel.ClearMode;\n\n    // Dispatch based on the modifier keys.\n    if (accel && shift) {\n      r1 = cs ? cs.r1 : 0;\n      r2 = 0;\n      c1 = cs ? cs.c1 : 0;\n      c2 = cs ? cs.c2 : 0;\n      cr = r;\n      cc = c;\n      clear = 'current';\n    } else if (shift) {\n      r1 = cs ? cs.r1 : 0;\n      r2 = cs ? cs.r2 - 1 : 0;\n      c1 = cs ? cs.c1 : 0;\n      c2 = cs ? cs.c2 : 0;\n      cr = r;\n      cc = c;\n      clear = 'current';\n    } else if (accel) {\n      r1 = 0;\n      r2 = 0;\n      c1 = c;\n      c2 = c;\n      cr = r1;\n      cc = c1;\n      clear = 'all';\n    } else {\n      r1 = r - 1;\n      r2 = r - 1;\n      c1 = c;\n      c2 = c;\n      cr = r1;\n      cc = c1;\n      clear = 'all';\n    }\n\n    // Create the new selection.\n    model.select({ r1, c1, r2, c2, cursorRow: cr, cursorColumn: cc, clear });\n\n    // Re-fetch the current selection.\n    cs = model.currentSelection();\n\n    // Bail if there is no selection.\n    if (!cs) {\n      return;\n    }\n\n    // Scroll the grid appropriately.\n    if (shift || mode === 'row') {\n      grid.scrollToRow(cs.r2);\n    } else {\n      grid.scrollToCursor();\n    }\n  }\n\n  /**\n   * Handle the `'ArrowDown'` key press for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The keyboard event of interest.\n   */\n  protected onArrowDown(grid: DataGrid, event: KeyboardEvent): void {\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Fetch the selection model.\n    let model = grid.selectionModel;\n\n    // Fetch the modifier flags.\n    let shift = event.shiftKey;\n    let accel = Platform.accelKey(event);\n\n    // Handle no model with the accel modifier.\n    if (!model && accel) {\n      grid.scrollTo(grid.scrollX, grid.maxScrollY);\n      return;\n    }\n\n    // Handle no model and no modifier. (ignore shift)\n    if (!model) {\n      grid.scrollByStep('down');\n      return;\n    }\n\n    // Fetch the selection mode.\n    let mode = model.selectionMode;\n\n    // Handle the column selection mode with accel key.\n    if (mode === 'column' && accel) {\n      grid.scrollTo(grid.scrollX, grid.maxScrollY);\n      return;\n    }\n\n    // Handle the column selection mode with no modifier. (ignore shift)\n    if (mode === 'column') {\n      grid.scrollByStep('down');\n      return;\n    }\n\n    // Fetch the cursor and selection.\n    let r = model.cursorRow;\n    let c = model.cursorColumn;\n    let cs = model.currentSelection();\n\n    // Set up the selection variables.\n    let r1: number;\n    let r2: number;\n    let c1: number;\n    let c2: number;\n    let cr: number;\n    let cc: number;\n    let clear: SelectionModel.ClearMode;\n\n    // Dispatch based on the modifier keys.\n    if (accel && shift) {\n      r1 = cs ? cs.r1 : 0;\n      r2 = Infinity;\n      c1 = cs ? cs.c1 : 0;\n      c2 = cs ? cs.c2 : 0;\n      cr = r;\n      cc = c;\n      clear = 'current';\n    } else if (shift) {\n      r1 = cs ? cs.r1 : 0;\n      r2 = cs ? cs.r2 + 1 : 0;\n      c1 = cs ? cs.c1 : 0;\n      c2 = cs ? cs.c2 : 0;\n      cr = r;\n      cc = c;\n      clear = 'current';\n    } else if (accel) {\n      r1 = Infinity;\n      r2 = Infinity;\n      c1 = c;\n      c2 = c;\n      cr = r1;\n      cc = c1;\n      clear = 'all';\n    } else {\n      r1 = r + 1;\n      r2 = r + 1;\n      c1 = c;\n      c2 = c;\n      cr = r1;\n      cc = c1;\n      clear = 'all';\n    }\n\n    // Create the new selection.\n    model.select({ r1, c1, r2, c2, cursorRow: cr, cursorColumn: cc, clear });\n\n    // Re-fetch the current selection.\n    cs = model.currentSelection();\n\n    // Bail if there is no selection.\n    if (!cs) {\n      return;\n    }\n\n    // Scroll the grid appropriately.\n    if (shift || mode === 'row') {\n      grid.scrollToRow(cs.r2);\n    } else {\n      grid.scrollToCursor();\n    }\n  }\n\n  /**\n   * Handle the `'PageUp'` key press for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The keyboard event of interest.\n   */\n  protected onPageUp(grid: DataGrid, event: KeyboardEvent): void {\n    // Ignore the event if the accel key is pressed.\n    if (Platform.accelKey(event)) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Fetch the selection model.\n    let model = grid.selectionModel;\n\n    // Scroll by page if there is no selection model.\n    if (!model || model.selectionMode === 'column') {\n      grid.scrollByPage('up');\n      return;\n    }\n\n    // Get the normal number of cells in the page height.\n    let n =  Math.floor(grid.pageHeight / grid.defaultSizes.rowHeight);\n\n    // Fetch the cursor and selection.\n    let r = model.cursorRow;\n    let c = model.cursorColumn;\n    let cs = model.currentSelection();\n\n    // Set up the selection variables.\n    let r1: number;\n    let r2: number;\n    let c1: number;\n    let c2: number;\n    let cr: number;\n    let cc: number;\n    let clear: SelectionModel.ClearMode;\n\n    // Select or resize as needed.\n    if (event.shiftKey) {\n      r1 = cs ? cs.r1 : 0;\n      r2 = cs ? cs.r2 - n : 0;\n      c1 = cs ? cs.c1 : 0;\n      c2 = cs ? cs.c2 : 0;\n      cr = r;\n      cc = c;\n      clear = 'current';\n    } else {\n      r1 = cs ? cs.r1 - n : 0;\n      r2 = r1;\n      c1 = c;\n      c2 = c;\n      cr = r1;\n      cc = c;\n      clear = 'all';\n    }\n\n    // Create the new selection.\n    model.select({ r1, c1, r2, c2, cursorRow: cr, cursorColumn: cc, clear });\n\n    // Re-fetch the current selection.\n    cs = model.currentSelection();\n\n    // Bail if there is no selection.\n    if (!cs) {\n      return;\n    }\n\n    // Scroll the grid appropriately.\n    grid.scrollToRow(cs.r2);\n  }\n\n  /**\n   * Handle the `'PageDown'` key press for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The keyboard event of interest.\n   */\n  protected onPageDown(grid: DataGrid, event: KeyboardEvent): void {\n    // Ignore the event if the accel key is pressed.\n    if (Platform.accelKey(event)) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Fetch the selection model.\n    let model = grid.selectionModel;\n\n    // Scroll by page if there is no selection model.\n    if (!model || model.selectionMode === 'column') {\n      grid.scrollByPage('down');\n      return;\n    }\n\n    // Get the normal number of cells in the page height.\n    let n =  Math.floor(grid.pageHeight / grid.defaultSizes.rowHeight);\n\n    // Fetch the cursor and selection.\n    let r = model.cursorRow;\n    let c = model.cursorColumn;\n    let cs = model.currentSelection();\n\n    // Set up the selection variables.\n    let r1: number;\n    let r2: number;\n    let c1: number;\n    let c2: number;\n    let cr: number;\n    let cc: number;\n    let clear: SelectionModel.ClearMode;\n\n    // Select or resize as needed.\n    if (event.shiftKey) {\n      r1 = cs ? cs.r1 : 0;\n      r2 = cs ? cs.r2 + n : 0;\n      c1 = cs ? cs.c1 : 0;\n      c2 = cs ? cs.c2 : 0;\n      cr = r;\n      cc = c;\n      clear = 'current';\n    } else {\n      r1 = cs ? cs.r1 + n : 0;\n      r2 = r1;\n      c1 = c;\n      c2 = c;\n      cr = r1;\n      cc = c;\n      clear = 'all';\n    }\n\n    // Create the new selection.\n    model.select({ r1, c1, r2, c2, cursorRow: cr, cursorColumn: cc, clear });\n\n    // Re-fetch the current selection.\n    cs = model.currentSelection();\n\n    // Bail if there is no selection.\n    if (!cs) {\n      return;\n    }\n\n    // Scroll the grid appropriately.\n    grid.scrollToRow(cs.r2);\n  }\n\n  /**\n   * Handle the `'Escape'` key press for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The keyboard event of interest.\n   */\n  protected onEscape(grid: DataGrid, event: KeyboardEvent): void {\n    if (grid.selectionModel) {\n      grid.selectionModel.clear();\n    }\n  }\n\n  /**\n   * Handle the `'Delete'` key press for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The keyboard event of interest.\n   */\n  protected onDelete(grid: DataGrid, event: KeyboardEvent): void {\n    if (grid.editable &&\n      !grid.selectionModel!.isEmpty) {\n      const dataModel = grid.dataModel as MutableDataModel;\n      // Fetch the max row and column.\n      let maxRow = dataModel.rowCount('body') - 1;\n      let maxColumn = dataModel.columnCount('body') - 1;\n\n      const it = grid.selectionModel!.selections();\n      let s: SelectionModel.Selection | undefined;\n      while ((s = it.next()) !== undefined) {\n        // Clamp the cell to the model bounds.\n        let sr1 = Math.max(0, Math.min(s.r1, maxRow));\n        let sc1 = Math.max(0, Math.min(s.c1, maxColumn));\n        let sr2 = Math.max(0, Math.min(s.r2, maxRow));\n        let sc2 = Math.max(0, Math.min(s.c2, maxColumn));\n\n        for (let r = sr1; r <= sr2; ++r) {\n          for (let c = sc1; c <= sc2; ++c) {\n            dataModel.setData('body', r, c, null);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle the `'C'` key press for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The keyboard event of interest.\n   */\n  protected onKeyC(grid: DataGrid, event: KeyboardEvent): void {\n    // Bail early if the modifiers aren't correct for copy.\n    if (event.shiftKey || !Platform.accelKey(event)) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Copy the current selection to the clipboard.\n    grid.copyToClipboard();\n  }\n\n  private _disposed = false;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  IDisposable\n} from '@lumino/disposable';\n\nimport {\n  Platform\n} from '@lumino/domutils';\n\nimport {\n  Drag\n} from '@lumino/dragdrop';\n\nimport {\n  DataGrid\n} from './datagrid';\n\nimport {\n  DataModel\n} from './datamodel';\n\nimport {\n  SelectionModel\n} from './selectionmodel';\n\nimport {\n  CellEditor\n} from './celleditor';\n\n/**\n * A basic implementation of a data grid mouse handler.\n *\n * #### Notes\n * This class may be subclassed and customized as needed.\n */\nexport\nclass BasicMouseHandler implements DataGrid.IMouseHandler {\n  /**\n   * Dispose of the resources held by the mouse handler.\n   */\n  dispose(): void {\n    // Bail early if the handler is already disposed.\n    if (this._disposed) {\n      return;\n    }\n\n    // Release any held resources.\n    this.release();\n\n    // Mark the handler as disposed.\n    this._disposed = true;\n  }\n\n  /**\n   * Whether the mouse handler is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._disposed;\n  }\n\n  /**\n   * Release the resources held by the handler.\n   */\n  release(): void {\n    // Bail early if the is no press data.\n    if (!this._pressData) {\n      return;\n    }\n\n    // Clear the autoselect timeout.\n    if (this._pressData.type === 'select') {\n      this._pressData.timeout = -1;\n    }\n\n    // Clear the press data.\n    this._pressData.override.dispose();\n    this._pressData = null;\n  }\n\n  /**\n   * Handle the mouse hover event for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The mouse hover event of interest.\n   */\n  onMouseHover(grid: DataGrid, event: MouseEvent): void {\n    // Hit test the grid.\n    let hit = grid.hitTest(event.clientX, event.clientY);\n\n    // Get the resize handle for the hit test.\n    let handle = Private.resizeHandleForHitTest(hit);\n\n    // Fetch the cursor for the handle.\n    let cursor = this.cursorForHandle(handle);\n\n    // Update the viewport cursor based on the part.\n    grid.viewport.node.style.cursor = cursor;\n\n    // TODO support user-defined hover items\n  }\n\n  /**\n   * Handle the mouse leave event for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The mouse hover event of interest.\n   */\n  onMouseLeave(grid: DataGrid, event: MouseEvent): void {\n    // TODO support user-defined hover popups.\n\n    // Clear the viewport cursor.\n    grid.viewport.node.style.cursor = '';\n  }\n\n  /**\n   * Handle the mouse down event for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The mouse down event of interest.\n   */\n  onMouseDown(grid: DataGrid, event: MouseEvent): void {\n    // Unpack the event.\n    let { clientX, clientY } = event;\n\n    // Hit test the grid.\n    let hit = grid.hitTest(clientX, clientY);\n\n    // Unpack the hit test.\n    let { region, row, column } = hit;\n\n    // Bail if the hit test is on an uninteresting region.\n    if (region === 'void') {\n      return;\n    }\n\n    // Fetch the modifier flags.\n    let shift = event.shiftKey;\n    let accel = Platform.accelKey(event);\n\n    // If the hit test is the body region, the only option is select.\n    if (region === 'body') {\n      // Fetch the selection model.\n      let model = grid.selectionModel;\n\n      // Bail early if there is no selection model.\n      if (!model) {\n        return;\n      }\n\n      // Override the document cursor.\n      let override = Drag.overrideCursor('default');\n\n      // Set up the press data.\n      this._pressData = {\n        type: 'select', region, row, column, override,\n        localX: -1, localY: -1, timeout: -1\n      };\n\n      // Set up the selection variables.\n      let r1: number;\n      let c1: number;\n      let r2: number;\n      let c2: number;\n      let cursorRow: number;\n      let cursorColumn: number;\n      let clear: SelectionModel.ClearMode;\n\n      // Accel == new selection, keep old selections.\n      if (accel) {\n        r1 = row;\n        r2 = row;\n        c1 = column;\n        c2 = column;\n        cursorRow = row;\n        cursorColumn = column;\n        clear = 'none';\n      } else if (shift) {\n        r1 = model.cursorRow;\n        r2 = row;\n        c1 = model.cursorColumn;\n        c2 = column;\n        cursorRow = model.cursorRow;\n        cursorColumn = model.cursorColumn;\n        clear = 'current';\n      } else {\n        r1 = row;\n        r2 = row;\n        c1 = column;\n        c2 = column;\n        cursorRow = row;\n        cursorColumn = column;\n        clear = 'all';\n      }\n\n      // Use selection mode 'cell'\n      model.selectionMode = 'cell';\n\n      // Make the selection.\n      model.select({ r1, c1, r2, c2, cursorRow, cursorColumn, clear });\n\n      // Done.\n      return;\n    }\n\n    // Otherwise, the hit test is on a header region.\n\n    // Convert the hit test into a part.\n    let handle = Private.resizeHandleForHitTest(hit);\n\n    // Fetch the cursor for the handle.\n    let cursor = this.cursorForHandle(handle);\n\n    // Handle horizontal resize.\n    if (handle === 'left' || handle === 'right' ) {\n      // Set up the resize data type.\n      let type: 'column-resize' = 'column-resize';\n\n      // Determine the column region.\n      let rgn: DataModel.ColumnRegion = (\n        region === 'column-header' ? 'body' : 'row-header'\n      );\n\n      // Determine the section index.\n      let index = handle === 'left' ? column - 1 : column;\n\n      // Fetch the section size.\n      let size = grid.columnSize(rgn, index);\n\n      // Override the document cursor.\n      let override = Drag.overrideCursor(cursor);\n\n      // Create the temporary press data.\n      this._pressData = { type, region: rgn, index, size, clientX, override };\n\n      // Done.\n      return;\n    }\n\n    // Handle vertical resize\n    if (handle === 'top' || handle === 'bottom') {\n      // Set up the resize data type.\n      let type: 'row-resize' = 'row-resize';\n\n      // Determine the row region.\n      let rgn: DataModel.RowRegion = (\n        region === 'row-header' ? 'body' : 'column-header'\n      );\n\n      // Determine the section index.\n      let index = handle === 'top' ? row - 1 : row;\n\n      // Fetch the section size.\n      let size = grid.rowSize(rgn, index);\n\n      // Override the document cursor.\n      let override = Drag.overrideCursor(cursor);\n\n      // Create the temporary press data.\n      this._pressData = { type, region: rgn, index, size, clientY, override };\n\n      // Done.\n      return;\n    }\n\n    // Otherwise, the only option is select.\n\n    // Fetch the selection model.\n    let model = grid.selectionModel;\n\n    // Bail if there is no selection model.\n    if (!model) {\n      return;\n    }\n\n    // Override the document cursor.\n    let override = Drag.overrideCursor('default');\n\n    // Set up the press data.\n    this._pressData = {\n      type: 'select', region, row, column, override,\n      localX: -1, localY: -1, timeout: -1\n    };\n\n    // Set up the selection variables.\n    let r1: number;\n    let c1: number;\n    let r2: number;\n    let c2: number;\n    let cursorRow: number;\n    let cursorColumn: number;\n    let clear: SelectionModel.ClearMode;\n\n    // Compute the selection based on the pressed region.\n    if (region === 'corner-header') {\n      r1 = 0;\n      r2 = Infinity;\n      c1 = 0;\n      c2 = Infinity;\n      cursorRow = accel ? 0 : shift ? model.cursorRow : 0;\n      cursorColumn = accel ? 0 : shift ? model.cursorColumn : 0;\n      clear = accel ? 'none' : shift ? 'current' : 'all';\n    } else if (region === 'row-header') {\n      r1 = accel ? row : shift ? model.cursorRow : row;\n      r2 = row;\n      c1 = 0;\n      c2 = Infinity;\n      cursorRow = accel ? row : shift ? model.cursorRow : row;\n      cursorColumn = accel ? 0 : shift ? model.cursorColumn : 0;\n      clear = accel ? 'none' : shift ? 'current' : 'all';\n    } else if (region === 'column-header') {\n      r1 = 0;\n      r2 = Infinity;\n      c1 = accel ? column : shift ? model.cursorColumn : column;\n      c2 = column;\n      cursorRow = accel ? 0 : shift ? model.cursorRow : 0;\n      cursorColumn = accel ? column : shift ? model.cursorColumn : column;\n      clear = accel ? 'none' : shift ? 'current' : 'all';\n    } else {\n      r1 = accel ? row : shift ? model.cursorRow : row;\n      r2 = row;\n      c1 = accel ? column : shift ? model.cursorColumn : column;\n      c2 = column;\n      cursorRow = accel ? row : shift ? model.cursorRow : row;\n      cursorColumn = accel ? column : shift ? model.cursorColumn : column;\n      clear = accel ? 'none' : shift ? 'current' : 'all';\n    }\n\n    // Set selection mode based on region\n    switch (region) {\n      case 'column-header':\n        model.selectionMode = 'column';\n        break;\n      case 'row-header':\n        model.selectionMode = 'row';\n        break;\n      default:\n        model.selectionMode = 'cell';\n        break;\n    }\n\n    // Make the selection.\n    model.select({ r1, c1, r2, c2, cursorRow, cursorColumn, clear });\n  }\n\n  /**\n   * Handle the mouse move event for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The mouse move event of interest.\n   */\n  onMouseMove(grid: DataGrid, event: MouseEvent): void {\n    // Fetch the press data.\n    const data = this._pressData;\n\n    // Bail early if there is no press data.\n    if (!data) {\n      return;\n    }\n\n    // Handle a row resize.\n    if (data.type === 'row-resize') {\n      let dy = event.clientY - data.clientY;\n      grid.resizeRow(data.region, data.index, data.size + dy);\n      return;\n    }\n\n    // Handle a column resize.\n    if (data.type === 'column-resize') {\n      let dx = event.clientX - data.clientX;\n      grid.resizeColumn(data.region, data.index, data.size + dx);\n      return;\n    }\n\n    // Otherwise, it's a select.\n\n    // Mouse moves during a corner header press are a no-op.\n    if (data.region === 'corner-header') {\n      return;\n    }\n\n    // Fetch the selection model.\n    let model = grid.selectionModel;\n\n    // Bail early if the selection model was removed.\n    if (!model) {\n      return;\n    }\n\n    // Map to local coordinates.\n    let { lx, ly } = grid.mapToLocal(event.clientX, event.clientY);\n\n    // Update the local mouse coordinates in the press data.\n    data.localX = lx;\n    data.localY = ly;\n\n    // Fetch the grid geometry.\n    let hw = grid.headerWidth;\n    let hh = grid.headerHeight;\n    let vpw = grid.viewportWidth;\n    let vph = grid.viewportHeight;\n    let sx = grid.scrollX;\n    let sy = grid.scrollY;\n    let msx = grid.maxScrollY;\n    let msy = grid.maxScrollY;\n\n    // Fetch the selection mode.\n    let mode = model.selectionMode;\n\n    // Set up the timeout variable.\n    let timeout = -1;\n\n    // Compute the timemout based on hit region and mouse position.\n    if (data.region === 'row-header' || mode === 'row') {\n      if (ly < hh && sy > 0) {\n        timeout = Private.computeTimeout(hh - ly);\n      } else if (ly >= vph && sy < msy) {\n        timeout = Private.computeTimeout(ly - vph);\n      }\n    } else if (data.region === 'column-header' || mode === 'column') {\n      if (lx < hw && sx > 0) {\n        timeout = Private.computeTimeout(hw - lx);\n      } else if (lx >= vpw && sx < msx) {\n        timeout = Private.computeTimeout(lx - vpw);\n      }\n    } else {\n      if (lx < hw && sx > 0) {\n        timeout = Private.computeTimeout(hw - lx);\n      } else if (lx >= vpw && sx < msx) {\n        timeout = Private.computeTimeout(lx - vpw);\n      } else if (ly < hh && sy > 0) {\n        timeout = Private.computeTimeout(hh - ly);\n      } else if (ly >= vph && sy < msy) {\n        timeout = Private.computeTimeout(ly - vph);\n      }\n    }\n\n    // Update or initiate the autoselect if needed.\n    if (timeout >= 0) {\n      if (data.timeout < 0) {\n        data.timeout = timeout;\n        setTimeout(() => { Private.autoselect(grid, data); }, timeout);\n      } else {\n        data.timeout = timeout;\n      }\n      return;\n    }\n\n    // Otherwise, clear the autoselect timeout.\n    data.timeout = -1;\n\n    // Map the position to virtual coordinates.\n    let { vx, vy } = grid.mapToVirtual(event.clientX, event.clientY);\n\n    // Clamp the coordinates to the limits.\n    vx = Math.max(0, Math.min(vx, grid.bodyWidth -1));\n    vy = Math.max(0, Math.min(vy, grid.bodyHeight - 1));\n\n    // Set up the selection variables.\n    let r1: number;\n    let c1: number;\n    let r2: number;\n    let c2: number;\n    let cursorRow = model.cursorRow;\n    let cursorColumn = model.cursorColumn;\n    let clear: SelectionModel.ClearMode = 'current';\n\n    // Compute the selection based pressed region.\n    if (data.region === 'row-header' || mode === 'row') {\n      r1 = data.row;\n      r2 = grid.rowAt('body', vy);\n      c1 = 0;\n      c2 = Infinity;\n    } else if (data.region === 'column-header' || mode === 'column') {\n      r1 = 0;\n      r2 = Infinity;\n      c1 = data.column;\n      c2 = grid.columnAt('body', vx);\n    } else {\n      r1 = cursorRow;\n      r2 = grid.rowAt('body', vy);\n      c1 = cursorColumn;\n      c2 = grid.columnAt('body', vx);\n    }\n\n    // Make the selection.\n    model.select({ r1, c1, r2, c2, cursorRow, cursorColumn, clear });\n  }\n\n  /**\n   * Handle the mouse up event for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The mouse up event of interest.\n   */\n  onMouseUp(grid: DataGrid, event: MouseEvent): void {\n    this.release();\n  }\n\n  /**\n   * Handle the mouse double click event for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The mouse up event of interest.\n   */\n  onMouseDoubleClick(grid: DataGrid, event: MouseEvent): void {\n    if (!grid.dataModel) {\n      this.release();\n      return;\n    }\n\n    // Unpack the event.\n    let { clientX, clientY } = event;\n\n    // Hit test the grid.\n    let hit = grid.hitTest(clientX, clientY);\n\n    // Unpack the hit test.\n    let { region, row, column } = hit;\n\n    if (region === 'void') {\n      this.release();\n      return;\n    }\n\n    if (region === 'body') {\n      if (grid.editable) {\n        const cell: CellEditor.CellConfig = {\n          grid: grid,\n          row: row,\n          column: column\n        };\n        grid.editorController!.edit(cell);\n      }\n    }\n\n    this.release();\n  }\n\n  /**\n   * Handle the context menu event for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The context menu event of interest.\n   */\n  onContextMenu(grid: DataGrid, event: MouseEvent): void {\n    // TODO support user-defined context menus\n  }\n\n  /**\n   * Handle the wheel event for the data grid.\n   *\n   * @param grid - The data grid of interest.\n   *\n   * @param event - The wheel event of interest.\n   */\n  onWheel(grid: DataGrid, event: WheelEvent): void {\n    // Bail if a mouse press is in progress.\n    if (this._pressData) {\n      return;\n    }\n\n    // Extract the delta X and Y movement.\n    let dx = event.deltaX;\n    let dy = event.deltaY;\n\n    // Convert the delta values to pixel values.\n    switch (event.deltaMode) {\n    case 0:  // DOM_DELTA_PIXEL\n      break;\n    case 1:  // DOM_DELTA_LINE\n      let ds = grid.defaultSizes;\n      dx *= ds.columnWidth;\n      dy *= ds.rowHeight;\n      break;\n    case 2:  // DOM_DELTA_PAGE\n      dx *= grid.pageWidth;\n      dy *= grid.pageHeight;\n      break;\n    default:\n      throw 'unreachable';\n    }\n\n    // Scroll by the desired amount.\n    grid.scrollBy(dx, dy);\n  }\n\n/**\n* Convert a resize handle into a cursor.\n*/\ncursorForHandle(handle: ResizeHandle): string {\n  return Private.cursorMap[handle];\n}\n\n  private _disposed = false;\n  private _pressData: Private.PressData | null;\n}\n\n/**\n* A type alias for the resize handle types.\n*/\n  export\n  type ResizeHandle = 'top' | 'left' | 'right' | 'bottom' | 'none';\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A type alias for the row resize data.\n   */\n  export\n  type RowResizeData = {\n    /**\n     * The descriminated type for the data.\n     */\n    readonly type: 'row-resize';\n\n    /**\n     * The row region which holds the section being resized.\n     */\n    readonly region: DataModel.RowRegion;\n\n    /**\n     * The index of the section being resized.\n     */\n    readonly index: number;\n\n    /**\n     * The original size of the section.\n     */\n    readonly size: number;\n\n    /**\n     * The original client Y position of the mouse.\n     */\n    readonly clientY: number;\n\n    /**\n     * The disposable to clear the cursor override.\n     */\n    readonly override: IDisposable;\n  };\n\n  /**\n   * A type alias for the column resize data.\n   */\n  export\n  type ColumnResizeData = {\n    /**\n     * The descriminated type for the data.\n     */\n    readonly type: 'column-resize';\n\n    /**\n     * The column region which holds the section being resized.\n     */\n    readonly region: DataModel.ColumnRegion;\n\n    /**\n     * The index of the section being resized.\n     */\n    readonly index: number;\n\n    /**\n     * The original size of the section.\n     */\n    readonly size: number;\n\n    /**\n     * The original client X position of the mouse.\n     */\n    readonly clientX: number;\n\n    /**\n     * The disposable to clear the cursor override.\n     */\n    readonly override: IDisposable;\n  };\n\n  /**\n   * A type alias for the select data.\n   */\n  export\n  type SelectData = {\n    /**\n     * The descriminated type for the data.\n     */\n    readonly type: 'select';\n\n    /**\n     * The original region for the mouse press.\n     */\n    readonly region: DataModel.CellRegion;\n\n    /**\n     * The original row that was selected.\n     */\n    readonly row: number;\n\n    /**\n     * The original column that was selected.\n     */\n    readonly column: number;\n\n    /**\n     * The disposable to clear the cursor override.\n     */\n    readonly override: IDisposable;\n\n    /**\n     * The current local X position of the mouse.\n     */\n    localX: number;\n\n    /**\n     * The current local Y position of the mouse.\n     */\n    localY: number;\n\n    /**\n     * The timeout delay for the autoselect loop.\n     */\n    timeout: number;\n  };\n\n  /**\n   * A type alias for the resize handler press data.\n   */\n  export\n  type PressData = RowResizeData | ColumnResizeData | SelectData ;\n\n  /**\n   * Get the resize handle for a grid hit test.\n   */\n  export\n  function resizeHandleForHitTest(hit: DataGrid.HitTestResult): ResizeHandle {\n    // Fetch the row and column.\n    let r = hit.row;\n    let c = hit.column;\n\n    // Fetch the leading and trailing sizes.\n    let lw = hit.x;\n    let lh = hit.y;\n    let tw = hit.width - hit.x;\n    let th = hit.height - hit.y;\n\n    // Set up the result variable.\n    let result: ResizeHandle;\n\n    // Dispatch based on hit test region.\n    switch (hit.region) {\n    case 'corner-header':\n      if (c > 0 && lw <= 5) {\n        result = 'left';\n      } else if (tw <= 6) {\n        result = 'right';\n      } else if (r > 0 && lh <= 5) {\n        result = 'top';\n      } else if (th <= 6) {\n        result = 'bottom';\n      } else {\n        result = 'none';\n      }\n      break;\n    case 'column-header':\n      if (c > 0 && lw <= 5) {\n        result = 'left';\n      } else if (tw <= 6) {\n        result = 'right';\n      } else if (r > 0 && lh <= 5) {\n        result = 'top';\n      } else if (th <= 6) {\n        result = 'bottom';\n      } else {\n        result = 'none';\n      }\n      break;\n    case 'row-header':\n      if (c > 0 && lw <= 5) {\n        result = 'left';\n      } else if (tw <= 6) {\n        result = 'right';\n      } else if (r > 0 && lh <= 5) {\n        result = 'top';\n      } else if (th <= 6) {\n        result = 'bottom';\n      } else {\n        result = 'none';\n      }\n      break;\n    case 'body':\n      result = 'none';\n      break;\n    case 'void':\n      result = 'none';\n      break;\n    default:\n      throw 'unreachable';\n    }\n\n    // Return the result.\n    return result;\n  }\n\n  /**\n   * A timer callback for the autoselect loop.\n   *\n   * @param grid - The datagrid of interest.\n   *\n   * @param data - The select data of interest.\n   */\n  export\n  function autoselect(grid: DataGrid, data: SelectData): void {\n    // Bail early if the timeout has been reset.\n    if (data.timeout < 0) {\n      return;\n    }\n\n    // Fetch the selection model.\n    let model = grid.selectionModel;\n\n    // Bail early if the selection model has been removed.\n    if (!model) {\n      return;\n    }\n\n    // Fetch the current selection.\n    let cs = model.currentSelection();\n\n    // Bail early if there is no current selection.\n    if (!cs) {\n      return;\n    }\n\n    // Fetch local X and Y coordinates of the mouse.\n    let lx = data.localX;\n    let ly = data.localY;\n\n    // Set up the selection variables.\n    let r1 = cs.r1;\n    let c1 = cs.c1;\n    let r2 = cs.r2;\n    let c2 = cs.c2;\n    let cursorRow = model.cursorRow;\n    let cursorColumn = model.cursorColumn;\n    let clear: SelectionModel.ClearMode = 'current';\n\n    // Fetch the grid geometry.\n    let hw = grid.headerWidth;\n    let hh = grid.headerHeight;\n    let vpw = grid.viewportWidth;\n    let vph = grid.viewportHeight;\n\n    // Fetch the selection mode.\n    let mode = model.selectionMode;\n\n    // Update the selection based on the hit region.\n    if (data.region === 'row-header' || mode === 'row') {\n      r2 += ly <= hh ? -1 : ly >= vph ? 1 : 0;\n    } else if (data.region === 'column-header' || mode === 'column') {\n      c2 += lx <= hw ? -1 : lx >= vpw ? 1 : 0;\n    } else {\n      r2 += ly <= hh ? -1 : ly >= vph ? 1 : 0;\n      c2 += lx <= hw ? -1 : lx >= vpw ? 1 : 0;\n    }\n\n    // Update the current selection.\n    model.select({ r1, c1, r2, c2, cursorRow, cursorColumn, clear });\n\n    // Re-fetch the current selection.\n    cs = model.currentSelection();\n\n    // Bail if there is no selection.\n    if (!cs) {\n      return\n    }\n\n    // Scroll the grid based on the hit region.\n    if (data.region === 'row-header' || mode === 'row') {\n      grid.scrollToRow(cs.r2);\n    } else if (data.region === 'column-header' || mode == 'column') {\n      grid.scrollToColumn(cs.c2);\n    } else if (mode === 'cell') {\n      grid.scrollToCell(cs.r2, cs.c2);\n    }\n\n    // Schedule the next call with the current timeout.\n    setTimeout(() => { autoselect(grid, data); }, data.timeout);\n  }\n\n  /**\n   * Compute the scroll timeout for the given delta distance.\n   *\n   * @param delta - The delta pixels from the origin.\n   *\n   * @returns The scaled timeout in milliseconds.\n   */\n  export\n  function computeTimeout(delta: number): number {\n    return 5 + 120 * (1 - Math.min(128, Math.abs(delta)) / 128);\n  }\n\n  /**\n   * A mapping of resize handle to cursor.\n   */\n  export\n  const cursorMap = {\n    top: 'ns-resize',\n    left: 'ew-resize',\n    right: 'ew-resize',\n    bottom: 'ns-resize',\n    none: 'default'\n  };\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  IIterator, some\n} from '@lumino/algorithm';\n\nimport {\n  ISignal, Signal\n} from '@lumino/signaling';\n\nimport {\n  DataModel\n} from './datamodel';\n\n\n/**\n * A base class for creating data grid selection models.\n *\n * #### Notes\n * If the predefined selection models are insufficient for a particular\n * use case, a custom model can be defined which derives from this class.\n */\nexport\nabstract class SelectionModel {\n  /**\n   * Construct a new selection model.\n   *\n   * @param options - The options for initializing the model.\n   */\n  constructor(options: SelectionModel.IOptions) {\n    this.dataModel = options.dataModel;\n    this._selectionMode = options.selectionMode || 'cell';\n    this.dataModel.changed.connect(this.onDataModelChanged, this);\n  }\n\n  /**\n   * Whether the selection model is empty.\n   *\n   * #### Notes\n   * An empty selection model will yield an empty `selections` iterator.\n   */\n  abstract readonly isEmpty: boolean;\n\n  /**\n   * The row index of the cursor.\n   *\n   * This is `-1` if the selection model is empty.\n   */\n  abstract readonly cursorRow: number;\n\n  /**\n   * The column index of the cursor.\n   *\n   * This is `-1` if the selection model is empty.\n   */\n  abstract readonly cursorColumn: number;\n\n  /**\n   * Move cursor down/up/left/right while making sure it remains\n   * within the bounds of selected rectangles\n   * \n   * @param direction - The direction of the movement.\n   */\n  abstract moveCursorWithinSelections(direction: SelectionModel.CursorMoveDirection): void;\n\n  /**\n   * Get the current selection in the selection model.\n   *\n   * @returns The current selection or `null`.\n   *\n   * #### Notes\n   * This is the selection which holds the cursor.\n   */\n  abstract currentSelection(): SelectionModel.Selection | null;\n\n  /**\n   * Get an iterator of the selections in the model.\n   *\n   * @returns A new iterator of the selections in the model.\n   *\n   * #### Notes\n   * The data grid will render the selections in order.\n   */\n  abstract selections(): IIterator<SelectionModel.Selection>;\n\n  /**\n   * Select the specified cells.\n   *\n   * @param args - The arguments for the selection.\n   */\n  abstract select(args: SelectionModel.SelectArgs): void;\n\n  /**\n   * Clear all selections in the selection model.\n   */\n  abstract clear(): void;\n\n  /**\n   * A signal emitted when the selection model has changed.\n   */\n  get changed(): ISignal<this, void> {\n    return this._changed;\n  }\n\n  /**\n   * The data model associated with the selection model.\n   */\n  readonly dataModel: DataModel;\n\n  /**\n   * Get the selection mode for the model.\n   */\n  get selectionMode(): SelectionModel.SelectionMode {\n    return this._selectionMode;\n  }\n\n  /**\n   * Set the selection mode for the model.\n   *\n   * #### Notes\n   * This will clear the selection model.\n   */\n  set selectionMode(value: SelectionModel.SelectionMode) {\n    // Bail early if the mode does not change.\n    if (this._selectionMode === value) {\n      return;\n    }\n\n    // Update the internal mode.\n    this._selectionMode = value;\n\n    // Clear the current selections.\n    this.clear();\n  }\n\n  /**\n   * Test whether any selection intersects a row.\n   *\n   * @param index - The row index of interest.\n   *\n   * @returns Whether any selection intersects the row.\n   *\n   * #### Notes\n   * This method may be reimplemented in a subclass.\n   */\n  isRowSelected(index: number): boolean {\n    return some(this.selections(), s => Private.containsRow(s, index));\n  }\n\n  /**\n   * Test whether any selection intersects a column.\n   *\n   * @param index - The column index of interest.\n   *\n   * @returns Whether any selection intersects the column.\n   *\n   * #### Notes\n   * This method may be reimplemented in a subclass.\n   */\n  isColumnSelected(index: number): boolean {\n    return some(this.selections(), s => Private.containsColumn(s, index));\n  }\n\n  /**\n   * Test whether any selection intersects a cell.\n   *\n   * @param row - The row index of interest.\n   *\n   * @param column - The column index of interest.\n   *\n   * @returns Whether any selection intersects the cell.\n   *\n   * #### Notes\n   * This method may be reimplemented in a subclass.\n   */\n  isCellSelected(row: number, column: number): boolean {\n    return some(this.selections(), s => Private.containsCell(s, row, column));\n  }\n\n  /**\n   * A signal handler for the data model `changed` signal.\n   *\n   * @param args - The arguments for the signal.\n   *\n   * #### Notes\n   * Selection model implementations should update their selections\n   * in a manner that is relevant for the changes to the data model.\n   *\n   * The default implementation of this method is a no-op.\n   */\n  protected onDataModelChanged(sender: DataModel, args: DataModel.ChangedArgs): void { }\n\n  /**\n   * Emit the `changed` signal for the selection model.\n   *\n   * #### Notes\n   * Subclasses should call this method whenever the selection model\n   * has changed so that attached data grids can update themselves.\n   */\n  protected emitChanged(): void {\n    this._changed.emit(undefined);\n  }\n\n  private _changed = new Signal<this, void>(this);\n  private _selectionMode: SelectionModel.SelectionMode = 'cell';\n}\n\n\n/**\n * The namespace for the `SelectionModel` class statics.\n */\nexport\nnamespace SelectionModel {\n  /**\n   * A type alias for the selection mode.\n   */\n  export\n  type SelectionMode = 'row' | 'column' | 'cell';\n  \n  /**\n   * A type alias for the cursor move direction.\n   */\n  export type CursorMoveDirection = 'up' | 'down' | 'left' | 'right' | 'none';\n\n  /**\n   * A type alias for the clear mode.\n   */\n  export\n  type ClearMode = 'all' | 'current' | 'none';\n\n  /**\n   * A type alias for the select args.\n   */\n  export\n  type SelectArgs = {\n    /**\n     * The first row of the selection.\n     *\n     * This may be greater than `r2`.\n     */\n    r1: number;\n\n    /**\n     * The first column of the selection.\n     *\n     * This may be greater than `c2`.\n     */\n    c1: number;\n\n    /**\n     * The last row of the selection.\n     *\n     * This may be less than `r1`.\n     */\n    r2: number;\n\n    /**\n     * The last column of the selection.\n     *\n     * This may be less than `c1`.\n     */\n    c2: number;\n\n    /**\n     * The row index for the cursor.\n     *\n     * This should be contained within the selection.\n     */\n    cursorRow: number;\n\n    /**\n     * The column index for the cursor.\n     *\n     * This should be contained within the selection.\n     */\n    cursorColumn: number;\n\n    /**\n     * Which of the existing selections to clear.\n     */\n    clear: ClearMode;\n  };\n\n  /**\n   * A type alias for a selection in a selection model.\n   */\n  export\n  type Selection = {\n    /**\n     * The first row of the selection.\n     *\n     * This may be greater than `r2`.\n     */\n    readonly r1: number;\n\n    /**\n     * The first column of the selection.\n     *\n     * This may be greater than `c2`.\n     */\n    readonly c1: number;\n\n    /**\n     * The last row of the selection.\n     *\n     * This may be less than `r1`.\n     */\n    readonly r2: number;\n\n    /**\n     * The last column of the selection.\n     *\n     * This may be less than `c1`.\n     */\n    readonly c2: number;\n  };\n\n  /**\n   * An options object for initializing a selection model.\n   */\n  export\n  interface IOptions {\n    /**\n     * The data model for the selection model.\n     */\n    dataModel: DataModel;\n\n    /**\n     * The selection mode for the model.\n     *\n     * The default is `'cell'`.\n     */\n    selectionMode?: SelectionMode;\n  }\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Test whether a selection contains a given row.\n   */\n  export\n  function containsRow(selection: SelectionModel.Selection, row: number): boolean {\n    let { r1, r2 } = selection;\n    return (row >= r1 && row <= r2) || (row >= r2 && row <= r1);\n  }\n\n  /**\n   * Test whether a selection contains a given column.\n   */\n  export\n  function containsColumn(selection: SelectionModel.Selection, column: number): boolean {\n    let { c1, c2 } = selection;\n    return (column >= c1 && column <= c2) || (column >= c2 && column <= c1);\n  }\n\n  /**\n   * Test whether a selection contains a given cell.\n   */\n  export\n  function containsCell(selection: SelectionModel.Selection, row: number, column: number): boolean {\n    return containsRow(selection, row) && containsColumn(selection, column);\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  IIterator, iter\n} from '@lumino/algorithm';\n\nimport {\n  DataModel\n} from './datamodel';\n\nimport {\n  SelectionModel\n} from './selectionmodel';\n\n\n/**\n * A basic selection model implementation.\n *\n * #### Notes\n * This selection model is sufficient for most use cases where\n * structural knowledge of the data source is *not* required.\n */\nexport\nclass BasicSelectionModel extends SelectionModel {\n  /**\n   * Wether the selection model is empty.\n   */\n  get isEmpty(): boolean {\n    return this._selections.length === 0;\n  }\n\n  /**\n   * The row index of the cursor.\n   */\n  get cursorRow(): number {\n    return this._cursorRow;\n  }\n\n  /**\n   * The column index of the cursor.\n   */\n  get cursorColumn(): number {\n    return this._cursorColumn;\n  }\n\n  /**\n   * Move cursor down/up/left/right while making sure it remains\n   * within the bounds of selected rectangles\n   * \n   * @param direction - The direction of the movement.\n   */\n  moveCursorWithinSelections(direction: SelectionModel.CursorMoveDirection): void {\n    // Bail early if there are no selections or no existing cursor\n    if (this.isEmpty || this.cursorRow === -1 || this._cursorColumn === -1) {\n      return;\n    }\n\n    // Bail early if only single cell is selected\n    const firstSelection = this._selections[0];\n    if (this._selections.length === 1 &&\n      firstSelection.r1 === firstSelection.r2 &&\n      firstSelection.c1 === firstSelection.c2) {\n      return;\n    }\n\n    // start from last selection rectangle\n    if (this._cursorRectIndex === -1) {\n      this._cursorRectIndex = this._selections.length - 1;\n    }\n\n    let cursorRect = this._selections[this._cursorRectIndex];\n    const dr = direction === 'down' ? 1 : direction === 'up' ? -1 : 0;\n    const dc = direction === 'right' ? 1 : direction === 'left' ? -1 : 0;\n    let newRow = this._cursorRow + dr;\n    let newColumn = this._cursorColumn + dc;\n    const r1 = Math.min(cursorRect.r1, cursorRect.r2);\n    const r2 = Math.max(cursorRect.r1, cursorRect.r2);\n    const c1 = Math.min(cursorRect.c1, cursorRect.c2);\n    const c2 = Math.max(cursorRect.c1, cursorRect.c2);\n\n    const moveToNextRect = () => {\n      this._cursorRectIndex = (this._cursorRectIndex + 1) % this._selections.length;\n      cursorRect = this._selections[this._cursorRectIndex];\n      newRow = Math.min(cursorRect.r1, cursorRect.r2);\n      newColumn = Math.min(cursorRect.c1, cursorRect.c2);\n    };\n    \n    const moveToPreviousRect = () => {\n      this._cursorRectIndex = this._cursorRectIndex === 0 ? this._selections.length - 1 : this._cursorRectIndex - 1;\n      cursorRect = this._selections[this._cursorRectIndex];\n      newRow = Math.max(cursorRect.r1, cursorRect.r2);\n      newColumn = Math.max(cursorRect.c1, cursorRect.c2);\n    };\n\n    if (newRow > r2) {\n      newRow = r1;\n      newColumn += 1;\n      if (newColumn > c2) {\n        moveToNextRect();\n      }\n    } else if (newRow < r1) {\n      newRow = r2;\n      newColumn -= 1;\n      if (newColumn < c1) {\n        moveToPreviousRect();\n      }\n    } else if (newColumn > c2) {\n      newColumn = c1;\n      newRow += 1;\n      if (newRow > r2) {\n        moveToNextRect();\n      }\n    } else if (newColumn < c1) {\n      newColumn = c2;\n      newRow -= 1;\n      if (newRow < r1) {\n        moveToPreviousRect();\n      }\n    }\n\n    this._cursorRow = newRow;\n    this._cursorColumn = newColumn;\n\n    // Emit the changed signal.\n    this.emitChanged();\n  }\n\n  /**\n   * Get the current selection in the selection model.\n   *\n   * @returns The current selection or `null`.\n   *\n   * #### Notes\n   * This is the selection which holds the cursor.\n   */\n  currentSelection(): SelectionModel.Selection | null {\n    return this._selections[this._selections.length - 1] || null;\n  }\n\n  /**\n   * Get an iterator of the selections in the model.\n   *\n   * @returns A new iterator of the current selections.\n   *\n   * #### Notes\n   * The data grid will render the selections in order.\n   */\n  selections(): IIterator<SelectionModel.Selection> {\n    return iter(this._selections);\n  }\n\n  /**\n   * Select the specified cells.\n   *\n   * @param args - The arguments for the selection.\n   */\n  select(args: SelectionModel.SelectArgs): void {\n    // Fetch the current row and column counts;\n    let rowCount = this.dataModel.rowCount('body');\n    let columnCount = this.dataModel.columnCount('body');\n\n    // Bail early if there is no content.\n    if (rowCount <= 0 || columnCount <= 0) {\n      return;\n    }\n\n    // Unpack the arguments.\n    let { r1, c1, r2, c2, cursorRow, cursorColumn, clear } = args;\n\n    // Clear the necessary selections.\n    if (clear === 'all') {\n      this._selections.length = 0;\n    } else if (clear === 'current') {\n      this._selections.pop();\n    }\n\n    // Clamp to the data model bounds.\n    r1 = Math.max(0, Math.min(r1, rowCount - 1));\n    r2 = Math.max(0, Math.min(r2, rowCount - 1));\n    c1 = Math.max(0, Math.min(c1, columnCount - 1));\n    c2 = Math.max(0, Math.min(c2, columnCount - 1));\n\n    // Handle the selection mode.\n    if (this.selectionMode === 'row') {\n      c1 = 0;\n      c2 = columnCount - 1;\n    } else if (this.selectionMode === 'column') {\n      r1 = 0;\n      r2 = rowCount - 1;\n    }\n\n    // Alias the cursor row and column.\n    let cr = cursorRow;\n    let cc = cursorColumn;\n\n    // Compute the new cursor location.\n    if (cr < 0 || (cr < r1 && cr < r2) || (cr > r1 && cr > r2)) {\n      cr = r1;\n    }\n    if (cc < 0 || (cc < c1 && cc < c2) || (cc > c1 && cc > c2)) {\n      cc = c1;\n    }\n\n    // Update the cursor.\n    this._cursorRow = cr;\n    this._cursorColumn = cc;\n    this._cursorRectIndex = this._selections.length;\n\n    // Add the new selection.\n    this._selections.push({ r1, c1, r2, c2 });\n\n    // Emit the changed signal.\n    this.emitChanged();\n  }\n\n  /**\n   * Clear all selections in the selection model.\n   */\n  clear(): void {\n    // Bail early if there are no selections.\n    if (this._selections.length === 0) {\n      return;\n    }\n\n    // Reset the internal state.\n    this._cursorRow = -1;\n    this._cursorColumn = -1;\n    this._cursorRectIndex = -1;\n    this._selections.length = 0;\n\n    // Emit the changed signal.\n    this.emitChanged();\n  }\n\n  /**\n   * A signal handler for the data model `changed` signal.\n   *\n   * @param args - The arguments for the signal.\n   */\n  protected onDataModelChanged(sender: DataModel, args: DataModel.ChangedArgs): void {\n    // Bail early if the model has no current selections.\n    if (this._selections.length === 0) {\n      return;\n    }\n\n    // Bail early if the cells have changed in place.\n    if (args.type === 'cells-changed') {\n      return;\n    }\n\n    // Bail early if there is no change to the row or column count.\n    if (args.type === 'rows-moved' || args.type === 'columns-moved') {\n      return;\n    }\n\n    // Fetch the last row and column index.\n    let lr = sender.rowCount('body') - 1;\n    let lc = sender.columnCount('body') - 1;\n\n    // Bail early if the data model is empty.\n    if (lr < 0 || lc < 0) {\n      this._selections.length = 0;\n      this.emitChanged();\n      return;\n    }\n\n    // Fetch the selection mode.\n    let mode = this.selectionMode;\n\n    // Set up the assignment index variable.\n    let j = 0;\n\n    // Iterate over the current selections.\n    for (let i = 0, n = this._selections.length; i < n; ++i) {\n      // Unpack the selection.\n      let { r1, c1, r2, c2 } = this._selections[i];\n\n      // Skip the selection if it will disappear.\n      if ((lr < r1 && lr < r2) || (lc < c1 && lc < c2)) {\n        continue;\n      }\n\n      // Modify the bounds based on the selection mode.\n      if (mode === 'row') {\n        r1 = Math.max(0, Math.min(r1, lr));\n        r2 = Math.max(0, Math.min(r2, lr));\n        c1 = 0;\n        c2 = lc;\n      } else if (mode === 'column') {\n        r1 = 0;\n        r2 = lr;\n        c1 = Math.max(0, Math.min(c1, lc));\n        c2 = Math.max(0, Math.min(c2, lc));\n      } else {\n        r1 = Math.max(0, Math.min(r1, lr));\n        r2 = Math.max(0, Math.min(r2, lr));\n        c1 = Math.max(0, Math.min(c1, lc));\n        c2 = Math.max(0, Math.min(c2, lc));\n      }\n\n      // Assign the modified selection to the array.\n      this._selections[j++] = { r1, c1, r2, c2 };\n    }\n\n    // Remove the stale selections.\n    this._selections.length = j;\n\n    // Emit the changed signal.\n    this.emitChanged();\n  }\n\n  private _cursorRow = -1;\n  private _cursorColumn = -1;\n  private _cursorRectIndex = -1;\n  private _selections: SelectionModel.Selection[] = [];\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  DataModel\n} from './datamodel';\n\nimport {\n  GraphicsContext\n} from './graphicscontext';\n\n\n/**\n * An object which renders the cells of a data grid.\n *\n * #### Notes\n * If the predefined cell renderers are insufficient for a particular\n * use case, a custom cell renderer can be defined which derives from\n * this class.\n *\n * The data grid renders cells in column-major order, by region. The\n * region order is: body, row header, column header, corner header.\n */\nexport\nabstract class CellRenderer {\n  /**\n   * Paint the content for a cell.\n   *\n   * @param gc - The graphics context to use for drawing.\n   *\n   * @param config - The configuration data for the cell.\n   *\n   * #### Notes\n   * The grid will save/restore the `gc` state before/after invoking\n   * the renderer.\n   *\n   * For performance, the cell content is efficiently clipped to the\n   * width of the column, but *the height is not clipped*. If height\n   * clipping is needed, the renderer must set up its own clip rect.\n   *\n   * The renderer **must not** draw outside the cell bounding height.\n   */\n  abstract paint(gc: GraphicsContext, config: CellRenderer.CellConfig): void;\n}\n\n\n/**\n * The namespace for the `CellRenderer` class statics.\n */\nexport\nnamespace CellRenderer {\n  /**\n   * An object which holds the configuration data for a cell.\n   */\n  export\n  type CellConfig = {\n    /**\n     * The X position of the cell rectangle, in viewport coordinates.\n     */\n    readonly x: number;\n\n    /**\n     * The Y position of the cell rectangle, in viewport coordinates.\n     */\n    readonly y: number;\n\n    /**\n     * The height of the cell rectangle, in viewport pixels.\n     */\n    readonly height: number;\n\n    /**\n     * The width of the cell rectangle, in viewport pixels.\n     */\n    readonly width: number;\n\n    /**\n     * The region for the cell.\n     */\n    readonly region: DataModel.CellRegion;\n\n    /**\n     * The row index of the cell.\n     */\n    readonly row: number;\n\n    /**\n     * The column index of the cell.\n     */\n    readonly column: number;\n\n    /**\n     * The value for the cell.\n     */\n    readonly value: any;\n\n    /**\n     * The metadata for the cell.\n     */\n    readonly metadata: DataModel.Metadata;\n  };\n\n  /**\n   * A type alias for a cell renderer config function.\n   *\n   * This type is used to compute a value from a cell config object.\n   */\n  export\n  type ConfigFunc<T> = (config: CellConfig) => T;\n\n  /**\n   * A type alias for a cell renderer config option.\n   *\n   * A config option can be a static value or a config function.\n   */\n  export\n  type ConfigOption<T> = T | ConfigFunc<T>;\n\n  /**\n   * Resolve a config option for a cell renderer.\n   *\n   * @param option - The config option to resolve.\n   *\n   * @param config - The cell config object.\n   *\n   * @returns The resolved value for the option.\n   */\n  export\n  function resolveOption<T>(option: ConfigOption<T>, config: CellConfig): T {\n    return typeof option === 'function' ? (option as ConfigFunc<T>)(config) : option;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\nimport {\n  Message\n} from '@lumino/messaging';\n\nimport {\n  Widget\n} from '@lumino/widgets';\n\n\n/**\n * A widget which implements a notification popup.\n */\nexport\nclass Notification extends Widget {\n  /**\n   * Construct a new notification.\n   *\n   * @param options - The options for initializing the notification.\n   */\n  constructor(options: Notification.IOptions) {\n    super({ node: Private.createNode() });\n    this.addClass('lm-DataGrid-notification');\n    this.setFlag(Widget.Flag.DisallowLayout);\n\n    this._target = options.target;\n    this._message = options.message || '';\n    this._placement = options.placement || 'bottom';\n\n    Widget.attach(this, document.body);\n\n    if (options.timeout && options.timeout > 0) {\n      setTimeout(() => {\n        this.close();\n      }, options.timeout);\n    }\n  }\n\n  /**\n   * Handle the DOM events for the notification.\n   *\n   * @param event - The DOM event sent to the notification.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the notification's DOM node.\n   *\n   * This should not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n    case 'mousedown':\n      this._evtMouseDown(event as MouseEvent);\n      break;\n    case 'contextmenu':\n      event.preventDefault();\n      event.stopPropagation();\n      break;\n    }\n  }\n\n  /**\n   * Get the placement of the notification.\n   */\n  get placement(): Notification.Placement {\n    return this._placement;\n  }\n\n  /**\n   * Set the placement of the notification.\n   */\n  set placement(value: Notification.Placement) {\n    // Do nothing if the placement does not change.\n    if (this._placement === value) {\n      return;\n    }\n\n    // Update the internal placement.\n    this._placement = value;\n\n    // Schedule an update for notification.\n    this.update();\n  }\n\n  /**\n   * Get the current value of the message.\n   */\n  get message(): string {\n    return this._message;\n  }\n\n  /**\n   * Set the current value of the message.\n   *\n   */\n  set message(value: string) {\n    // Do nothing if the value does not change.\n    if (this._message === value) {\n      return;\n    }\n\n    // Update the internal value.\n    this._message = value;\n\n    // Schedule an update for notification.\n    this.update();\n  }\n\n  /**\n   * Get the node presenting the message.\n   */\n  get messageNode(): HTMLSpanElement {\n    return this.node.getElementsByClassName('lm-DataGrid-notificationMessage')[0] as HTMLSpanElement;\n  }\n\n  /**\n   * A method invoked on a 'before-attach' message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('mousedown', this);\n    this.update();\n  }\n\n  /**\n   * A method invoked on an 'after-detach' message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('mousedown', this);\n  }\n\n  /**\n   * A method invoked on an 'update-request' message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    const targetRect = this._target.getBoundingClientRect();\n    const style = this.node.style;\n\n    switch (this._placement) {\n      case 'bottom':\n        style.left = targetRect.left + 'px';\n        style.top = targetRect.bottom + 'px';\n        break;\n      case 'top':\n        style.left = targetRect.left + 'px';\n        style.height = targetRect.top + 'px';\n        style.top = '0';\n        style.alignItems = 'flex-end';\n        style.justifyContent = 'flex-end';\n        break;\n      case 'left':\n        style.left = '0';\n        style.width = targetRect.left + 'px';\n        style.top = targetRect.top + 'px';\n        style.alignItems = 'flex-end';\n        style.justifyContent = 'flex-end';\n        break;\n      case 'right':\n        style.left = targetRect.right + 'px';\n        style.top = targetRect.top + 'px';\n        break;\n    }\n\n    this.messageNode.innerHTML = this._message;\n  }\n\n  /**\n   * Handle the `'mousedown'` event for the notification.\n   */\n  private _evtMouseDown(event: MouseEvent): void {\n    // Do nothing if it's not a left mouse press.\n    if (event.button !== 0) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    this.close();\n  }\n\n  private _target: HTMLElement;\n  private _message: string = '';\n  private _placement: Notification.Placement;\n}\n\n\n/**\n * The namespace for the `Notification` class statics.\n */\nexport\nnamespace Notification {\n  /**\n   * A type alias for a notification placement.\n   */\n  export\n  type Placement = 'top' | 'bottom' | 'left' | 'right';\n\n  /**\n   * An options object for creating a notification.\n   */\n  export\n  interface IOptions {\n    /**\n     * Target element to attach notification to.\n     *\n     */\n    target: HTMLElement;\n\n    /**\n     * The message to show on notification.\n     */\n    message?: string;\n\n    /**\n     * The placement of the notification.\n     *\n     * The default is `'bottom'`.\n     */\n    placement?: Placement;\n\n    /**\n     * Duration in ms after which to close notification popup.\n     *\n     * The default is undefined, and notification is kept visible\n     * Timeout value needs to be greater than zero\n     */\n    timeout?: number;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Create the DOM node for notification.\n   */\n  export\n  function createNode(): HTMLElement {\n    const node = document.createElement('div');\n    const container = document.createElement('div');\n    container.className = 'lm-DataGrid-notificationContainer';\n    const message = document.createElement('span');\n    message.className = 'lm-DataGrid-notificationMessage';\n    container.appendChild(message);\n    node.appendChild(container);\n\n    return node;\n  }\n}\n","/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  IDisposable\n} from '@lumino/disposable';\n\nimport {\n  DataGrid\n} from './datagrid';\n\nimport {\n  SelectionModel\n} from './selectionmodel';\n\nimport {\n  getKeyboardLayout\n} from '@lumino/keyboard';\n\nimport {\n  Signal\n} from '@lumino/signaling';\n\nimport {\n  Notification\n} from './notification';\n\n/**\n * A response object returned from cell input validator\n */\nexport\ninterface ICellInputValidatorResponse {\n  /**\n   * Flag indicating cell input is valid or not\n   */\n  valid: boolean;\n  /**\n   * Validation error message. Set only when input is invalid\n   */\n  message?: string;\n}\n\n/**\n * An object which validates cell input values.\n */\nexport\ninterface ICellInputValidator {\n  /**\n   * Validate cell input.\n   *\n   * @param cell - The object holding cell configuration data.\n   *\n   * @param value - The cell value input.\n   *\n   * @returns An object with validation result.\n   */\n  validate(cell: CellEditor.CellConfig, value: any): ICellInputValidatorResponse;\n}\n\n/**\n * An object returned from cell editor after a successful edit.\n */\nexport\ninterface ICellEditResponse {\n  /**\n   * An object which holds the configuration data for a cell.\n   */\n  cell: CellEditor.CellConfig;\n  /**\n   * Value input.\n   */\n  value: any;\n  /**\n   * Cursor move direction based on keys pressed to end the edit.\n   */\n  cursorMovement: SelectionModel.CursorMoveDirection;\n}\n\n/**\n * An object implementing cell editing.\n */\nexport\ninterface ICellEditor {\n  /**\n   * Start editing the cell.\n   *\n   * @param cell - The object holding cell configuration data.\n   *\n   * @param options - The cell editing options.\n   */\n  edit(cell: CellEditor.CellConfig, options?: ICellEditOptions): void;\n  /**\n   * Cancel editing the cell.\n   */\n  cancel(): void;\n}\n\n// default validation error message\nconst DEFAULT_INVALID_INPUT_MESSAGE = \"Invalid input!\";\n\n// A type alias for available cell data types\nexport\ntype CellDataType = 'string' | 'number' | 'integer' | 'boolean' | 'date' |\n                    'string:option' | 'number:option' | 'integer:option'| 'date:option'|\n                    'string:dynamic-option' | 'number:dynamic-option' | 'integer:dynamic-option' | 'date:dynamic-option';\n\n/**\n * An object containing cell editing options.\n */\nexport\ninterface ICellEditOptions {\n  /**\n   * Cell editor to use for editing.\n   * \n   * #### Notes\n   * This object is only used by cell editor controller.\n   * If not set, controller picks the most suitable editor\n   * for the particular cell configuration.\n   */\n  editor?: ICellEditor;\n  /**\n   * Cell input validator to use for value validation.\n   */\n  validator?: ICellInputValidator;\n  /**\n   * Callback method to call on cell edit commit.\n   */\n  onCommit?: (response: ICellEditResponse) => void;\n  /**\n   * Callback method to call on cell edit cancel.\n   */\n  onCancel?: () => void;\n}\n\n/**\n * A cell input validator object which always returns valid.\n */\nexport\nclass PassInputValidator implements ICellInputValidator {\n  /**\n   * Validate cell input.\n   *\n   * @param cell - The object holding cell configuration data.\n   *\n   * @param value - The cell value input.\n   *\n   * @returns An object with validation result.\n   */\n  validate(cell: CellEditor.CellConfig, value: any): ICellInputValidatorResponse {\n    return { valid: true };\n  }\n}\n\n/**\n * Text cell input validator.\n */\nexport\nclass TextInputValidator implements ICellInputValidator {\n  /**\n   * Validate cell input.\n   *\n   * @param cell - The object holding cell configuration data.\n   *\n   * @param value - The cell value input.\n   *\n   * @returns An object with validation result.\n   */\n  validate(cell: CellEditor.CellConfig, value: string): ICellInputValidatorResponse {\n    if (value === null) {\n      return { valid: true };\n    }\n\n    if (typeof value !== 'string') {\n      return {\n        valid: false,\n        message: 'Input must be valid text'\n      };\n    }\n\n    if (!isNaN(this.minLength) && value.length < this.minLength) {\n      return {\n        valid: false,\n        message: `Text length must be greater than ${this.minLength}`\n      };\n    }\n\n    if (!isNaN(this.maxLength) && value.length > this.maxLength) {\n      return {\n        valid: false,\n        message: `Text length must be less than ${this.maxLength}`\n      };\n    }\n\n    if (this.pattern && !this.pattern.test(value)) {\n      return {\n        valid: false,\n        message: `Text doesn't match the required pattern`\n      };\n    }\n\n    return { valid: true };\n  }\n\n  /**\n   * Minimum text length\n   * \n   * The default is Number.NaN, meaning no minimum constraint\n   */\n  minLength: number = Number.NaN;\n  /**\n   * Maximum text length\n   * \n   * The default is Number.NaN, meaning no maximum constraint\n   */\n  maxLength: number = Number.NaN;\n  /**\n   * Required text pattern as regular expression\n   * \n   * The default is null, meaning no pattern constraint\n   */\n  pattern: RegExp | null = null;\n}\n\n/**\n * Integer cell input validator.\n */\nexport\nclass IntegerInputValidator implements ICellInputValidator {\n  /**\n   * Validate cell input.\n   *\n   * @param cell - The object holding cell configuration data.\n   *\n   * @param value - The cell value input.\n   *\n   * @returns An object with validation result.\n   */\n  validate(cell: CellEditor.CellConfig, value: number): ICellInputValidatorResponse {\n    if (value === null) {\n      return { valid: true };\n    }\n\n    if (isNaN(value) || (value % 1 !== 0)) {\n      return {\n        valid: false,\n        message: 'Input must be valid integer'\n      };\n    }\n\n    if (!isNaN(this.min) && value < this.min) {\n      return {\n        valid: false,\n        message: `Input must be greater than ${this.min}`\n      };\n    }\n\n    if (!isNaN(this.max) && value > this.max) {\n      return {\n        valid: false,\n        message: `Input must be less than ${this.max}`\n      };\n    }\n\n    return { valid: true };\n  }\n\n  /**\n   * Minimum value\n   * \n   * The default is Number.NaN, meaning no minimum constraint\n   */\n  min: number = Number.NaN;\n  /**\n   * Maximum value\n   * \n   * The default is Number.NaN, meaning no maximum constraint\n   */\n  max: number = Number.NaN;\n}\n\n/**\n * Real number cell input validator.\n */\nexport\nclass NumberInputValidator implements ICellInputValidator {\n  /**\n   * Validate cell input.\n   *\n   * @param cell - The object holding cell configuration data.\n   *\n   * @param value - The cell value input.\n   *\n   * @returns An object with validation result.\n   */\n  validate(cell: CellEditor.CellConfig, value: number): ICellInputValidatorResponse {\n    if (value === null) {\n      return { valid: true };\n    }\n\n    if (isNaN(value)) {\n      return {\n        valid: false,\n        message: 'Input must be valid number'\n      };\n    }\n\n    if (!isNaN(this.min) && value < this.min) {\n      return {\n        valid: false,\n        message: `Input must be greater than ${this.min}`\n      };\n    }\n\n    if (!isNaN(this.max) && value > this.max) {\n      return {\n        valid: false,\n        message: `Input must be less than ${this.max}`\n      };\n    }\n\n    return { valid: true };\n  }\n\n  /**\n   * Minimum value\n   * \n   * The default is Number.NaN, meaning no minimum constraint\n   */\n  min: number = Number.NaN;\n  /**\n   * Maximum value\n   * \n   * The default is Number.NaN, meaning no maximum constraint\n   */\n  max: number = Number.NaN;\n}\n\n\n/**\n * An abstract base class that provides the most of the functionality\n * needed by a cell editor. All of the built-in cell editors\n * for various cell types are derived from this base class. Custom cell editors\n * can be easily implemented by extending this class.\n */\nexport\nabstract class CellEditor implements ICellEditor, IDisposable {\n  /**\n   * Construct a new cell editor.\n   */\n  constructor() {\n    this.inputChanged.connect(() => {\n      this.validate();\n    });\n  }\n\n  /**\n   * Whether the cell editor is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._disposed;\n  }\n\n  /**\n   * Dispose of the resources held by cell editor.\n   */\n  dispose(): void {\n    if (this._disposed) {\n      return;\n    }\n\n    if (this._gridWheelEventHandler) {\n      this.cell.grid.node.removeEventListener('wheel', this._gridWheelEventHandler);\n      this._gridWheelEventHandler = null;\n    }\n\n    this._closeValidityNotification();\n\n    this._disposed = true;\n    this.cell.grid.node.removeChild(this.viewportOccluder);\n  }\n\n  /**\n   * Start editing the cell.\n   *\n   * @param cell - The object holding cell configuration data.\n   *\n   * @param options - The cell editing options.\n   */\n  edit(cell: CellEditor.CellConfig, options?: ICellEditOptions): void {\n    this.cell = cell;\n    this.onCommit = options && options.onCommit;\n    this.onCancel = options && options.onCancel;\n\n    this.validator = (options && options.validator) ? options.validator : this.createValidatorBasedOnType();\n\n    this._gridWheelEventHandler = () => {\n      this._closeValidityNotification();\n      this.updatePosition();\n    };\n\n    cell.grid.node.addEventListener('wheel', this._gridWheelEventHandler);\n\n    this._addContainer();\n\n    this.updatePosition();\n    this.startEditing();\n  }\n\n  /**\n   * Cancel editing the cell.\n   */\n  cancel() {\n    if (this._disposed) {\n      return;\n    }\n\n    this.dispose();\n    if (this.onCancel) {\n      this.onCancel();\n    }\n  }\n\n  /**\n   * Start editing the cell. Usually an editor widget is created and\n   *  added to `editorContainer`\n   */\n  protected abstract startEditing(): void;\n  /**\n   * Return the current input entered. This method throws exceptions\n   * if input is invalid. Error message in exception is shown as notification.\n   */\n  protected abstract getInput(): any;\n\n  /**\n   * Whether the value input is valid.\n   */\n  protected get validInput(): boolean {\n    return this._validInput;\n  }\n\n  /**\n   * Validate the cell input. Shows validation error notification when input is invalid.\n   */\n  protected validate() {\n    let value;\n    try {\n      value = this.getInput();\n    } catch (error) {\n      console.log(`Input error: ${error.message}`);\n      this.setValidity(false, error.message || DEFAULT_INVALID_INPUT_MESSAGE);\n      return;\n    }\n\n    if (this.validator) {\n      const result = this.validator.validate(this.cell, value);\n      if (result.valid) {\n        this.setValidity(true);\n      } else {\n        this.setValidity(false, result.message || DEFAULT_INVALID_INPUT_MESSAGE);\n      }\n    } else {\n      this.setValidity(true);\n    }\n  }\n\n  /**\n   * Set validity flag.\n   *\n   * @param valid - Whether the input is valid.\n   *\n   * @param message - Notification message to show.\n   * \n   * If message is set to empty string (which is the default)\n   * existing notification popup is removed if any.\n   */\n  protected setValidity(valid: boolean, message: string = \"\") {\n    this._validInput = valid;\n\n    this._closeValidityNotification();\n\n    if (valid) {\n      this.editorContainer.classList.remove('lm-mod-invalid');\n    } else {\n      this.editorContainer.classList.add('lm-mod-invalid');\n\n      // show a notification popup\n      if (message !== \"\") {\n        this.validityNotification = new Notification({\n          target: this.editorContainer,\n          message: message,\n          placement: 'bottom',\n          timeout: 5000\n        });\n        this.validityNotification.show();\n      }\n    }\n  }\n\n  /**\n   * Create and return a cell input validator based on configuration of the\n   * cell being edited. If no suitable validator can be found, it returns undefined.\n   */\n  protected createValidatorBasedOnType(): ICellInputValidator | undefined {\n    const cell = this.cell;\n    const metadata = cell.grid.dataModel!.metadata('body', cell.row, cell.column);\n\n    switch (metadata && metadata.type) {\n      case 'string':\n        {\n          const validator = new TextInputValidator();\n          if (typeof(metadata!.format) === 'string') {\n            const format = metadata!.format;\n            switch (format) {\n              case 'email':\n                validator.pattern = new RegExp(\"^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$\");\n                break;\n              case 'uuid':\n                validator.pattern = new RegExp(\"[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}\");\n                break;\n              case 'uri':\n                // TODO\n                break;\n              case 'binary':\n                // TODO\n                break;\n            }\n          }\n\n          if (metadata!.constraint) {\n            if (metadata!.constraint.minLength !== undefined) {\n              validator.minLength = metadata!.constraint.minLength;\n            }\n            if (metadata!.constraint.maxLength !== undefined) {\n              validator.maxLength = metadata!.constraint.maxLength;\n            }\n            if (typeof(metadata!.constraint.pattern) === 'string') {\n              validator.pattern = new RegExp(metadata!.constraint.pattern);\n            }\n          }\n          return validator;\n        }\n        break;\n      case 'number':\n        {\n          const validator = new NumberInputValidator();\n          if (metadata!.constraint) {\n            if (metadata!.constraint.minimum !== undefined) {\n              validator.min = metadata!.constraint.minimum;\n            }\n            if (metadata!.constraint.maximum !== undefined) {\n              validator.max = metadata!.constraint.maximum;\n            }\n          }\n          return validator;\n        }\n        break;\n      case 'integer':\n        {\n          const validator = new IntegerInputValidator();\n          if (metadata!.constraint) {\n            if (metadata!.constraint.minimum !== undefined) {\n              validator.min = metadata!.constraint.minimum;\n            }\n            if (metadata!.constraint.maximum !== undefined) {\n              validator.max = metadata!.constraint.maximum;\n            }\n          }\n          return validator;\n        }\n        break;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Compute cell rectangle and return with other cell properties.\n   */\n  protected getCellInfo(cell: CellEditor.CellConfig): Private.ICellInfo {\n    const { grid, row, column } = cell;\n    const data = grid.dataModel!.data('body', row, column);\n\n    const columnX = grid.headerWidth - grid.scrollX + grid.columnOffset('body', column);\n    const rowY = grid.headerHeight - grid.scrollY + grid.rowOffset('body', row);\n    const width = grid.columnSize('body', column);\n    const height = grid.rowSize('body', row);\n\n    return {\n      grid: grid,\n      row: row,\n      column: column,\n      data: data,\n      x: columnX,\n      y: rowY,\n      width: width,\n      height: height\n    };\n  }\n\n  /**\n   * Reposition cell editor by moving viewport occluder and cell editor container.\n   */\n  protected updatePosition(): void {\n    const grid = this.cell.grid;\n    const cellInfo = this.getCellInfo(this.cell);\n    const headerHeight = grid.headerHeight;\n    const headerWidth = grid.headerWidth;\n\n    this.viewportOccluder.style.top = headerHeight + 'px';\n    this.viewportOccluder.style.left = headerWidth + 'px';\n    this.viewportOccluder.style.width = (grid.viewportWidth - headerWidth) + 'px';\n    this.viewportOccluder.style.height = (grid.viewportHeight - headerHeight) + 'px';\n    this.viewportOccluder.style.position = 'absolute';\n\n    this.editorContainer.style.left = (cellInfo.x - 1 - headerWidth) + 'px';\n    this.editorContainer.style.top = (cellInfo.y - 1 - headerHeight) + 'px';\n    this.editorContainer.style.width = (cellInfo.width + 1) + 'px';\n    this.editorContainer.style.height = (cellInfo.height + 1) + 'px';\n    this.editorContainer.style.visibility = 'visible';\n    this.editorContainer.style.position = 'absolute';\n  }\n\n  /**\n   * Commit the edited value.\n   * \n   * @param cursorMovement - Cursor move direction based on keys pressed to end the edit.\n   * \n   * @returns true on valid input, false otherwise.\n   */\n  protected commit(cursorMovement: SelectionModel.CursorMoveDirection = 'none'): boolean {\n    this.validate();\n\n    if (!this._validInput) {\n      return false;\n    }\n\n    let value;\n    try {\n      value = this.getInput();\n    } catch (error) {\n      console.log(`Input error: ${error.message}`);\n      return false;\n    }\n\n    this.dispose();\n\n    if (this.onCommit) {\n      this.onCommit({\n        cell: this.cell,\n        value: value,\n        cursorMovement: cursorMovement\n      });\n    }\n\n    return true;\n  }\n\n  /**\n   * Create container elements needed to prevent editor widget overflow\n   * beyond viewport and to position cell editor widget.\n   */\n  private _addContainer() {\n    this.viewportOccluder = document.createElement('div');\n    this.viewportOccluder.className = 'lm-DataGrid-cellEditorOccluder';\n    this.cell.grid.node.appendChild(this.viewportOccluder);\n\n    this.editorContainer = document.createElement('div');\n    this.editorContainer.className = 'lm-DataGrid-cellEditorContainer';\n    this.viewportOccluder.appendChild(this.editorContainer);\n\n    // update mouse event pass-through state based on input validity\n    this.editorContainer.addEventListener('mouseleave', (event: MouseEvent) => {\n      this.viewportOccluder.style.pointerEvents = this._validInput ? 'none' : 'auto';\n    });\n    this.editorContainer.addEventListener('mouseenter', (event: MouseEvent) => {\n      this.viewportOccluder.style.pointerEvents = 'none';\n    });\n  }\n\n  /**\n   * Remove validity notification popup.\n   */\n  private _closeValidityNotification() {\n    if (this.validityNotification) {\n      this.validityNotification.close();\n      this.validityNotification = null;\n    }\n  }\n\n  /**\n   * A signal emitted when input changes.\n   */\n  protected inputChanged = new Signal<this, void>(this);\n  /**\n   * Callback method to call on cell edit commit.\n   */\n  protected onCommit?: (response: ICellEditResponse) => void;\n  /**\n   * Callback method to call on cell edit cancel.\n   */\n  protected onCancel?: () => void;\n  /**\n   * Cell configuration data for the cell being edited.\n   */\n  protected cell: CellEditor.CellConfig;\n  /**\n   * Cell input validator to use for the cell being edited.\n   */\n  protected validator: ICellInputValidator | undefined;\n  /**\n   * The div element used to prevent editor widget overflow beyond grid viewport.\n   */\n  protected viewportOccluder: HTMLDivElement;\n  /**\n   * The div element used to contain and position editor widget.\n   */\n  protected editorContainer: HTMLDivElement;\n  /**\n   * Notification popup used to show validation error messages.\n   */\n  protected validityNotification: Notification | null = null;\n  /**\n   * Whether the cell editor is disposed.\n   */\n  private _disposed = false;\n  /**\n   * Whether the value input is valid.\n   */\n  private _validInput: boolean = true;\n  /**\n   * Grid wheel event handler.\n   */\n  private _gridWheelEventHandler: ((this: HTMLElement, ev: WheelEvent) => any) | null = null;\n}\n\n/**\n * Abstract base class with shared functionality\n * for cell editors which use HTML Input widget as editor.\n */\nexport\nabstract class InputCellEditor extends CellEditor {\n  /**\n   * Handle the DOM events for the editor.\n   *\n   * @param event - The DOM event sent to the editor.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'keydown':\n        this._onKeyDown(event as KeyboardEvent);\n        break;\n      case 'blur':\n        this._onBlur(event as FocusEvent);\n        break;\n      case 'input':\n        this._onInput(event);\n        break;\n    }\n  }\n\n  /**\n   * Dispose of the resources held by cell editor.\n   */\n  dispose() {\n    if (this.isDisposed) {\n      return;\n    }\n\n    this._unbindEvents();\n\n    super.dispose();\n  }\n\n  /**\n   * Start editing the cell.\n   */\n  protected startEditing() {\n    this.createWidget();\n\n    const cell = this.cell;\n    const cellInfo = this.getCellInfo(cell);\n    this.input.value = this.deserialize(cellInfo.data);\n    this.editorContainer.appendChild(this.input);\n    this.input.focus();\n    this.input.select();\n\n    this.bindEvents();\n  }\n\n  protected deserialize(value: any): any {\n    if (value === null || value === undefined) {\n      return '';\n    }\n\n    return value.toString();\n  }\n\n  protected createWidget() {\n    const input = document.createElement('input');\n    input.classList.add('lm-DataGrid-cellEditorWidget');\n    input.classList.add('lm-DataGrid-cellEditorInput');\n    input.spellcheck = false;\n    input.type = this.inputType;\n\n    this.input = input;\n  }\n\n  protected bindEvents() {\n    this.input.addEventListener('keydown', this);\n    this.input.addEventListener('blur', this);\n    this.input.addEventListener('input', this);\n  }\n\n  private _unbindEvents() {\n    this.input.removeEventListener('keydown', this);\n    this.input.removeEventListener('blur', this);\n    this.input.removeEventListener('input', this);\n  }\n\n  private _onKeyDown(event: KeyboardEvent) {\n    switch (getKeyboardLayout().keyForKeydownEvent(event)) {\n      case 'Enter':\n        this.commit(event.shiftKey ? 'up' : 'down');\n        break;\n      case 'Tab':\n        this.commit(event.shiftKey ? 'left' : 'right');\n        event.stopPropagation();\n        event.preventDefault();\n        break;\n      case 'Escape':\n        this.cancel();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private _onBlur(event: FocusEvent) {\n    if (this.isDisposed) {\n      return;\n    }\n\n    if (!this.commit()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.input.focus();\n    }\n  }\n\n  private _onInput(event: Event) {\n    this.inputChanged.emit(void 0);\n  }\n\n  protected input: HTMLInputElement;\n  protected abstract inputType: string;\n}\n\n/**\n * Cell editor for text cells.\n */\nexport\nclass TextCellEditor extends InputCellEditor {\n  /**\n   * Return the current text input entered.\n   */\n  protected getInput(): string | null {\n    return this.input.value;\n  }\n\n  protected inputType: string = 'text';\n}\n\n/**\n * Cell editor for real number cells.\n */\nexport\nclass NumberCellEditor extends InputCellEditor {\n  /**\n   * Start editing the cell.\n   */\n  protected startEditing() {\n    super.startEditing();\n\n    this.input.step = 'any';\n\n    const cell = this.cell;\n\n    const metadata = cell.grid.dataModel!.metadata('body', cell.row, cell.column);\n    const constraint = metadata.constraint;\n    if (constraint) {\n      if (constraint.minimum) {\n        this.input.min = constraint.minimum;\n      }\n      if (constraint.maximum) {\n        this.input.max = constraint.maximum;\n      }\n    }\n  }\n\n  /**\n   * Return the current number input entered. This method throws exception\n   * if input is invalid.\n   */\n  protected getInput(): number | null {\n    let value = this.input.value;\n    if (value.trim() === '') {\n      return null;\n    }\n\n    const floatValue = parseFloat(value);\n    if (isNaN(floatValue)) {\n      throw new Error('Invalid input');\n    }\n\n    return floatValue;\n  }\n\n  protected inputType: string = 'number';\n}\n\n/**\n * Cell editor for integer cells.\n */\nexport\nclass IntegerCellEditor extends InputCellEditor {\n  /**\n   * Start editing the cell.\n   */\n  protected startEditing() {\n    super.startEditing();\n\n    this.input.step = '1';\n\n    const cell = this.cell;\n\n    const metadata = cell.grid.dataModel!.metadata('body', cell.row, cell.column);\n    const constraint = metadata.constraint;\n    if (constraint) {\n      if (constraint.minimum) {\n        this.input.min = constraint.minimum;\n      }\n      if (constraint.maximum) {\n        this.input.max = constraint.maximum;\n      }\n    }\n  }\n\n  /**\n   * Return the current integer input entered. This method throws exception\n   * if input is invalid.\n   */\n  protected getInput(): number | null {\n    let value = this.input.value;\n    if (value.trim() === '') {\n      return null;\n    }\n\n    let intValue = parseInt(value);\n    if (isNaN(intValue)) {\n      throw new Error('Invalid input');\n    }\n\n    return intValue;\n  }\n\n  protected inputType: string = 'number';\n}\n\n/**\n * Cell editor for date cells.\n */\nexport\nclass DateCellEditor extends CellEditor {\n  /**\n   * Handle the DOM events for the editor.\n   *\n   * @param event - The DOM event sent to the editor.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'keydown':\n        this._onKeyDown(event as KeyboardEvent);\n        break;\n      case 'blur':\n        this._onBlur(event as FocusEvent);\n        break;\n    }\n  }\n\n  /**\n   * Dispose of the resources held by cell editor.\n   */\n  dispose() {\n    if (this.isDisposed) {\n      return;\n    }\n\n    this._unbindEvents();\n\n    super.dispose();\n  }\n\n  /**\n   * Start editing the cell.\n   */\n  protected startEditing() {\n    this._createWidget();\n\n    const cell = this.cell;\n    const cellInfo = this.getCellInfo(cell);\n    this._input.value = this._deserialize(cellInfo.data);\n    this.editorContainer.appendChild(this._input);\n    this._input.focus();\n\n    this._bindEvents();\n  }\n\n  /**\n   * Return the current date input entered.\n   */\n  protected getInput(): string | null {\n    return this._input.value;\n  }\n\n  private _deserialize(value: any): any {\n    if (value === null || value === undefined) {\n      return '';\n    }\n\n    return value.toString();\n  }\n\n  private _createWidget() {\n    const input = document.createElement('input');\n    input.type = 'date';\n    input.pattern = \"\\d{4}-\\d{2}-\\d{2}\";\n    input.classList.add('lm-DataGrid-cellEditorWidget');\n    input.classList.add('lm-DataGrid-cellEditorInput');\n\n    this._input = input;\n  }\n\n  private _bindEvents() {\n    this._input.addEventListener('keydown', this);\n    this._input.addEventListener('blur', this);\n  }\n\n  private _unbindEvents() {\n    this._input.removeEventListener('keydown', this);\n    this._input.removeEventListener('blur', this);\n  }\n\n  private _onKeyDown(event: KeyboardEvent) {\n    switch (getKeyboardLayout().keyForKeydownEvent(event)) {\n      case 'Enter':\n        this.commit(event.shiftKey ? 'up' : 'down');\n        break;\n      case 'Tab':\n        this.commit(event.shiftKey ? 'left' : 'right');\n        event.stopPropagation();\n        event.preventDefault();\n        break;\n      case 'Escape':\n        this.cancel();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private _onBlur(event: FocusEvent) {\n    if (this.isDisposed) {\n      return;\n    }\n\n    if (!this.commit()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this._input.focus();\n    }\n  }\n\n  private _input: HTMLInputElement;\n}\n\n/**\n * Cell editor for boolean cells.\n */\nexport\nclass BooleanCellEditor extends CellEditor {\n  /**\n   * Handle the DOM events for the editor.\n   *\n   * @param event - The DOM event sent to the editor.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'keydown':\n        this._onKeyDown(event as KeyboardEvent);\n        break;\n      case 'mousedown':\n        // fix focus loss problem in Safari and Firefox\n        this._input.focus();\n        event.stopPropagation();\n        event.preventDefault();\n        break;\n      case 'blur':\n        this._onBlur(event as FocusEvent);\n        break;\n    }\n  }\n\n  /**\n   * Dispose of the resources held by cell editor.\n   */\n  dispose() {\n    if (this.isDisposed) {\n      return;\n    }\n\n    this._unbindEvents();\n\n    super.dispose();\n  }\n\n  /**\n   * Start editing the cell.\n   */\n  protected startEditing() {\n    this._createWidget();\n\n    const cell = this.cell;\n    const cellInfo = this.getCellInfo(cell);\n    this._input.checked = this._deserialize(cellInfo.data);\n    this.editorContainer.appendChild(this._input);\n    this._input.focus();\n\n    this._bindEvents();\n  }\n\n  /**\n   * Return the current boolean input entered.\n   */\n  protected getInput(): boolean | null {\n    return this._input.checked;\n  }\n\n  private _deserialize(value: any): any {\n    if (value === null || value === undefined) {\n      return false;\n    }\n\n    return value == true;\n  }\n\n  private _createWidget() {\n    const input = document.createElement('input');\n    input.classList.add('lm-DataGrid-cellEditorWidget');\n    input.classList.add('lm-DataGrid-cellEditorCheckbox');\n    input.type = 'checkbox';\n    input.spellcheck = false;\n\n    this._input = input;\n  }\n\n  private _bindEvents() {\n    this._input.addEventListener('keydown', this);\n    this._input.addEventListener('mousedown', this);\n    this._input.addEventListener('blur', this);\n  }\n\n  private _unbindEvents() {\n    this._input.removeEventListener('keydown', this);\n    this._input.removeEventListener('mousedown', this);\n    this._input.removeEventListener('blur', this);\n  }\n\n  private _onKeyDown(event: KeyboardEvent) {\n    switch (getKeyboardLayout().keyForKeydownEvent(event)) {\n      case 'Enter':\n        this.commit(event.shiftKey ? 'up' : 'down');\n        break;\n      case 'Tab':\n        this.commit(event.shiftKey ? 'left' : 'right');\n        event.stopPropagation();\n        event.preventDefault();\n        break;\n      case 'Escape':\n        this.cancel();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private _onBlur(event: FocusEvent) {\n    if (this.isDisposed) {\n      return;\n    }\n\n    if (!this.commit()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this._input.focus();\n    }\n  }\n\n  private _input: HTMLInputElement;\n}\n\n\n/**\n * Cell editor for option cells.\n * \n * It supports multiple option selection. If cell metadata contains\n * type attribute 'array', then it behaves as a multi select.\n * In that case cell data is expected to be list of string values.\n */\nexport\nclass OptionCellEditor extends CellEditor {\n  /**\n   * Dispose of the resources held by cell editor.\n   */\n  dispose() {\n    if (this.isDisposed) {\n      return;\n    }\n\n    super.dispose();\n\n    if (this._isMultiSelect) {\n      document.body.removeChild(this._select);\n    }\n  }\n\n  /**\n   * Start editing the cell.\n   */\n  protected startEditing() {\n    const cell = this.cell;\n    const cellInfo = this.getCellInfo(cell);\n    const metadata = cell.grid.dataModel!.metadata('body', cell.row, cell.column);\n    this._isMultiSelect = metadata.type === 'array';\n    this._createWidget();\n\n    if (this._isMultiSelect) {\n      this._select.multiple = true;\n      const values = this._deserialize(cellInfo.data) as string[];\n      for (let i = 0; i < this._select.options.length; ++i) {\n        const option = this._select.options.item(i);\n        option!.selected = values.indexOf(option!.value) !== -1;\n      }\n      document.body.appendChild(this._select);\n    } else {\n      this._select.value = this._deserialize(cellInfo.data) as string;\n      this.editorContainer.appendChild(this._select);\n    }\n\n    this._select.focus();\n\n    this._bindEvents();\n\n    this.updatePosition();\n  }\n\n  /**\n   * Return the current option input.\n   */\n  protected getInput(): string | string[] | null {\n    if (this._isMultiSelect) {\n      const input: string[] = [];\n      for (let i = 0; i < this._select.selectedOptions.length; ++i) {\n        input.push(this._select.selectedOptions.item(i)!.value);\n      }\n      return input;\n    } else {\n      return this._select.value;\n    }\n  }\n\n  /**\n   * Reposition cell editor.\n   */\n  protected updatePosition(): void {\n    super.updatePosition();\n\n    if (!this._isMultiSelect) {\n      return;\n    }\n\n    const cellInfo = this.getCellInfo(this.cell);\n\n    this._select.style.position = 'absolute';\n    const editorContainerRect = this.editorContainer.getBoundingClientRect();\n\n    this._select.style.left = editorContainerRect.left + 'px';\n    this._select.style.top = (editorContainerRect.top + cellInfo.height) + 'px';\n    this._select.style.width = editorContainerRect.width + 'px';\n    this._select.style.maxHeight = '60px';\n\n    this.editorContainer.style.visibility = 'hidden';\n  }\n\n  private _deserialize(value: any): string | string[] {\n    if (value === null || value === undefined) {\n      return '';\n    }\n\n    if (this._isMultiSelect) {\n      const values: string[] = [];\n      if (Array.isArray(value)) {\n        for (let item of value) {\n          values.push(item.toString());\n        }\n      }\n      return values;\n    } else {\n      return value.toString();\n    }\n  }\n\n  private _createWidget() {\n    const cell = this.cell;\n    const metadata = cell.grid.dataModel!.metadata('body', cell.row, cell.column);\n    const items = metadata.constraint.enum;\n\n    const select = document.createElement('select');\n    select.classList.add('lm-DataGrid-cellEditorWidget');\n    for (let item of items) {\n      const option = document.createElement(\"option\");\n      option.value = item;\n      option.text = item;\n      select.appendChild(option);\n    }\n\n    this._select = select;\n  }\n\n  private _bindEvents() {\n    this._select.addEventListener('keydown', this._onKeyDown.bind(this));\n    this._select.addEventListener('blur', this._onBlur.bind(this));\n  }\n\n  private _onKeyDown(event: KeyboardEvent) {\n    switch (getKeyboardLayout().keyForKeydownEvent(event)) {\n      case 'Enter':\n        this.commit(event.shiftKey ? 'up' : 'down');\n        break;\n      case 'Tab':\n        this.commit(event.shiftKey ? 'left' : 'right');\n        event.stopPropagation();\n        event.preventDefault();\n        break;\n      case 'Escape':\n        this.cancel();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private _onBlur(event: FocusEvent) {\n    if (this.isDisposed) {\n      return;\n    }\n\n    if (!this.commit()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this._select.focus();\n    }\n  }\n\n  private _select: HTMLSelectElement;\n  private _isMultiSelect: boolean = false;\n}\n\n/**\n * Cell editor for option cells whose value can be any value\n * from set of pre-defined options or values that can be input by user.\n */\nexport\nclass DynamicOptionCellEditor extends CellEditor {\n  /**\n   * Handle the DOM events for the editor.\n   *\n   * @param event - The DOM event sent to the editor.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'keydown':\n        this._onKeyDown(event as KeyboardEvent);\n        break;\n      case 'blur':\n        this._onBlur(event as FocusEvent);\n        break;\n    }\n  }\n\n  /**\n   * Dispose of the resources held by cell editor.\n   */\n  dispose() {\n    if (this.isDisposed) {\n      return;\n    }\n\n    this._unbindEvents();\n\n    super.dispose();\n  }\n\n  /**\n   * Start editing the cell.\n   */\n  protected startEditing() {\n    this._createWidget();\n\n    const cell = this.cell;\n    const cellInfo = this.getCellInfo(cell);\n    this._input.value = this._deserialize(cellInfo.data);\n    this.editorContainer.appendChild(this._input);\n    this._input.focus();\n    this._input.select();\n\n    this._bindEvents();\n  }\n\n  /**\n   * Return the current option input.\n   */\n  protected getInput(): string | null {\n    return this._input.value;\n  }\n\n  private _deserialize(value: any): any {\n    if (value === null || value === undefined) {\n      return '';\n    }\n\n    return value.toString();\n  }\n\n  private _createWidget() {\n    const cell = this.cell;\n    const grid = cell.grid;\n    const dataModel = grid.dataModel!;\n    const rowCount = dataModel.rowCount('body');\n\n    const listId = 'cell-editor-list';\n    const list = document.createElement('datalist');\n    list.id = listId;\n    const input = document.createElement('input');\n    input.classList.add('lm-DataGrid-cellEditorWidget');\n    input.classList.add('lm-DataGrid-cellEditorInput');\n    const valueSet = new Set<string>();\n    for (let r = 0; r < rowCount; ++r) {\n      const data = dataModel.data('body', r, cell.column);\n      if (data) {\n        valueSet.add(data);\n      }\n    }\n    valueSet.forEach((value: string) => {\n      const option = document.createElement(\"option\");\n      option.value = value;\n      option.text = value;\n      list.appendChild(option);\n    });\n    this.editorContainer.appendChild(list);\n    input.setAttribute('list', listId);\n\n    this._input = input;\n  }\n\n  private _bindEvents() {\n    this._input.addEventListener('keydown', this);\n    this._input.addEventListener('blur', this);\n  }\n\n  private _unbindEvents() {\n    this._input.removeEventListener('keydown', this);\n    this._input.removeEventListener('blur', this);\n  }\n\n  private _onKeyDown(event: KeyboardEvent) {\n    switch (getKeyboardLayout().keyForKeydownEvent(event)) {\n      case 'Enter':\n        this.commit(event.shiftKey ? 'up' : 'down');\n        break;\n      case 'Tab':\n        this.commit(event.shiftKey ? 'left' : 'right');\n        event.stopPropagation();\n        event.preventDefault();\n        break;\n      case 'Escape':\n        this.cancel();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private _onBlur(event: FocusEvent) {\n    if (this.isDisposed) {\n      return;\n    }\n\n    if (!this.commit()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this._input.focus();\n    }\n  }\n\n  private _input: HTMLInputElement;\n}\n\n\n/**\n * The namespace for the `CellEditor` class statics.\n */\nexport\nnamespace CellEditor {\n  /**\n   * An object which holds the configuration data for a cell.\n   */\n  export\n  type CellConfig = {\n    /**\n     * The grid containing the cell.\n     */\n    readonly grid: DataGrid;\n    /**\n     * The row index of the cell.\n     */\n    readonly row: number;\n\n    /**\n     * The column index of the cell.\n     */\n    readonly column: number;\n  };\n}\n\n/**\n * A namespace for module-private functionality.\n */\nnamespace Private {\n  /**\n   * A type alias for cell properties.\n   */\n  export type ICellInfo = {\n    grid: DataGrid,\n    row: number,\n    column: number,\n    data: any,\n    x: number,\n    y: number,\n    width: number,\n    height: number\n  };\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ISignal, Signal\n} from '@lumino/signaling';\n\n\n/**\n * An object which provides the data for a data grid.\n *\n * #### Notes\n * If the predefined data models are insufficient for a particular use\n * case, a custom model can be defined which derives from this class.\n */\nexport\nabstract class DataModel {\n  /**\n   * A signal emitted when the data model has changed.\n   */\n  get changed(): ISignal<this, DataModel.ChangedArgs> {\n    return this._changed;\n  }\n\n  /**\n   * Get the row count for a region in the data model.\n   *\n   * @param region - The row region of interest.\n   *\n   * @returns - The row count for the region.\n   *\n   * #### Notes\n   * This method is called often, and so should be efficient.\n   */\n  abstract rowCount(region: DataModel.RowRegion): number;\n\n  /**\n   * Get the column count for a region in the data model.\n   *\n   * @param region - The column region of interest.\n   *\n   * @returns - The column count for the region.\n   *\n   * #### Notes\n   * This method is called often, and so should be efficient.\n   */\n  abstract columnCount(region: DataModel.ColumnRegion): number;\n\n  /**\n   * Get the data value for a cell in the data model.\n   *\n   * @param region - The cell region of interest.\n   *\n   * @param row - The row index of the cell of interest.\n   *\n   * @param column - The column index of the cell of interest.\n   *\n   * @returns The data value for the specified cell.\n   *\n   * #### Notes\n   * The returned data should be treated as immutable.\n   *\n   * This method is called often, and so should be efficient.\n   */\n  abstract data(region: DataModel.CellRegion, row: number, column: number): any;\n\n  /**\n   * Get the metadata for a cell in the data model.\n   *\n   * @param region - The cell region of interest.\n   *\n   * @param row - The row index of the cell of interest.\n   *\n   * @param column - The column index of the cell of interest.\n   *\n   * @returns The metadata for the specified cell.\n   *\n   * #### Notes\n   * The returned metadata should be treated as immutable.\n   *\n   * This method is called often, and so should be efficient.\n   *\n   * The default implementation returns `{}`.\n   */\n  metadata(region: DataModel.CellRegion, row: number, column: number): DataModel.Metadata {\n    return DataModel.emptyMetadata;\n  }\n\n  /**\n   * Emit the `changed` signal for the data model.\n   *\n   * #### Notes\n   * Subclasses should call this method whenever the data model has\n   * changed so that attached data grids can update themselves.\n   */\n  protected emitChanged(args: DataModel.ChangedArgs): void {\n    this._changed.emit(args);\n  }\n\n  private _changed = new Signal<this, DataModel.ChangedArgs>(this);\n}\n\n/**\n * An object which provides the mutable data for a data grid.\n *\n * #### Notes\n * This object is an extension to `DataModel` and it only adds ability to\n * change data for cells.\n */\nexport\nabstract class MutableDataModel extends DataModel {\n  /**\n   * Set the data value for a cell in the data model.\n   *\n   * @param region - The cell region of interest.\n   *\n   * @param row - The row index of the cell of interest.\n   *\n   * @param column - The column index of the cell of interest.\n   *\n   * @returns true if succeeds, false otherwise.\n   *\n   */\n  abstract setData(region: DataModel.CellRegion, row: number, column: number, value: any): boolean;\n}\n\n\n/**\n * The namespace for the `DataModel` class statics.\n */\nexport\nnamespace DataModel {\n  /**\n   * A type alias for the data model row regions.\n   */\n  export\n  type RowRegion = 'body' | 'column-header';\n\n  /**\n   * A type alias for the data model column regions.\n   */\n  export\n  type ColumnRegion = 'body' | 'row-header';\n\n  /**\n   * A type alias for the data model cell regions.\n   */\n  export\n  type CellRegion = 'body' | 'row-header' | 'column-header' | 'corner-header';\n\n  /**\n   * The metadata for a column in a data model.\n   */\n  export\n  type Metadata = { [key: string]: any };\n\n  /**\n   * A singleton empty metadata object.\n   */\n  export\n  const emptyMetadata: Metadata = Object.freeze({});\n\n  /**\n   * An arguments object for the `changed` signal.\n   *\n   * #### Notes\n   * Data models should emit the `changed` signal with this args object\n   * type when rows are inserted or removed.\n   */\n  export\n  type RowsChangedArgs = {\n    /**\n     * The discriminated type of the args object.\n     */\n    readonly type: 'rows-inserted' | 'rows-removed';\n\n    /**\n     * The region which contains the modified rows.\n     */\n    readonly region: RowRegion;\n\n    /**\n     * The index of the first modified row.\n     */\n    readonly index: number;\n\n    /**\n     * The number of modified rows.\n     */\n    readonly span: number;\n  };\n\n  /**\n   * An arguments object for the `changed` signal.\n   *\n   * #### Notes\n   * Data models should emit the `changed` signal with this args object\n   * type when columns are inserted or removed.\n   */\n  export\n  type ColumnsChangedArgs = {\n    /**\n     * The discriminated type of the args object.\n     */\n    readonly type: 'columns-inserted' | 'columns-removed';\n\n    /**\n     * The region which contains the modified columns.\n     */\n    readonly region: ColumnRegion;\n\n    /**\n     * The index of the first modified column.\n     */\n    readonly index: number;\n\n    /**\n     * The number of modified columns.\n     */\n    readonly span: number;\n  };\n\n  /**\n   * An arguments object for the `changed` signal.\n   *\n   * #### Notes\n   * Data models should emit the `changed` signal with this args object\n   * type when rows are moved.\n   */\n  export\n  type RowsMovedArgs = {\n    /**\n     * The discriminated type of the args object.\n     */\n    readonly type: 'rows-moved';\n\n    /**\n     * The region which contains the modified rows.\n     */\n    readonly region: RowRegion;\n\n    /**\n     * The starting index of the first modified row.\n     */\n    readonly index: number;\n\n    /**\n     * The number of modified rows.\n     */\n    readonly span: number;\n\n    /**\n     * The ending index of the first modified row.\n     */\n    readonly destination: number;\n  };\n\n  /**\n   * An arguments object for the `changed` signal.\n   *\n   * #### Notes\n   * Data models should emit the `changed` signal with this args object\n   * type when columns are moved.\n   */\n  export\n  type ColumnsMovedArgs = {\n    /**\n     * The discriminated type of the args object.\n     */\n    readonly type: 'columns-moved';\n\n    /**\n     * The region which contains the modified columns.\n     */\n    readonly region: ColumnRegion;\n\n    /**\n     * The starting index of the first modified column.\n     */\n    readonly index: number;\n\n    /**\n     * The number of modified columns.\n     */\n    readonly span: number;\n\n    /**\n     * The ending index of the first modified column.\n     */\n    readonly destination: number;\n  };\n\n  /**\n   * An arguments object for the `changed` signal.\n   *\n   * #### Notes\n   * Data models should emit the `changed` signal with this args object\n   * type when cells are changed in-place.\n   */\n  export\n  type CellsChangedArgs = {\n    /**\n     * The discriminated type of the args object.\n     */\n    readonly type: 'cells-changed';\n\n    /**\n     * The region which contains the modified cells.\n     */\n    readonly region: CellRegion;\n\n    /**\n     * The row index of the first modified cell.\n     */\n    readonly row: number;\n\n    /**\n     * The column index of the first modified cell.\n     */\n    readonly column: number;\n\n    /**\n     * The number of rows in the modified cell range.\n     */\n    readonly rowSpan: number;\n\n    /**\n     * The number of columns in the modified cell range.\n     */\n    readonly columnSpan: number;\n  };\n\n  /**\n   * An arguments object for the `changed` signal.\n   *\n   * #### Notes\n   * Data models should emit the `changed` signal with this args object\n   * type when the model has changed in a fashion that cannot be easily\n   * expressed by the other args object types.\n   *\n   * This is the \"big hammer\" approach, and will cause any associated\n   * data grid to perform a full reset. The other changed args types\n   * should be used whenever possible.\n   */\n  export\n  type ModelResetArgs = {\n    /**\n     * The discriminated type of the args object.\n     */\n    readonly type: 'model-reset';\n  };\n\n  /**\n   * A type alias for the args objects of the `changed` signal.\n   */\n  export\n  type ChangedArgs = (\n    RowsChangedArgs |\n    ColumnsChangedArgs |\n    RowsMovedArgs |\n    ColumnsMovedArgs |\n    CellsChangedArgs |\n    ModelResetArgs\n  );\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  IDisposable\n} from '@lumino/disposable';\n\n\n/**\n * A thin caching wrapper around a 2D canvas rendering context.\n *\n * #### Notes\n * This class is mostly a transparent wrapper around a canvas rendering\n * context which improves performance when writing context state.\n *\n * For best performance, avoid reading state from the `gc`. Writes are\n * cached based on the previously written value.\n *\n * Unless otherwise specified, the API and semantics of this class are\n * identical to the builtin 2D canvas rendering context:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\n *\n * The wrapped canvas context should not be manipulated externally\n * until the wrapping `GraphicsContext` object is disposed.\n */\nexport\nclass GraphicsContext implements IDisposable {\n  /**\n   * Create a new graphics context object.\n   *\n   * @param context - The 2D canvas rendering context to wrap.\n   */\n  constructor(context: CanvasRenderingContext2D) {\n    this._context = context;\n    this._state = Private.State.create(context);\n  }\n\n  dispose(): void {\n    // Bail if the gc is already disposed.\n    if (this._disposed) {\n      return;\n    }\n\n    // Mark the gc as disposed.\n    this._disposed = true;\n\n    // Pop any unrestored saves.\n    while (this._state.next) {\n      this._state = this._state.next;\n      this._context.restore();\n    }\n  }\n\n  get isDisposed(): boolean {\n    return this._disposed;\n  }\n\n  get fillStyle(): string | CanvasGradient | CanvasPattern {\n    return this._context.fillStyle;\n  }\n\n  set fillStyle(value: string | CanvasGradient | CanvasPattern) {\n    if (this._state.fillStyle !== value) {\n      this._state.fillStyle = value;\n      this._context.fillStyle = value;\n    }\n  }\n\n  get strokeStyle(): string | CanvasGradient | CanvasPattern {\n    return this._context.strokeStyle;\n  }\n\n  set strokeStyle(value: string | CanvasGradient | CanvasPattern) {\n    if (this._state.strokeStyle !== value) {\n      this._state.strokeStyle = value;\n      this._context.strokeStyle = value;\n    }\n  }\n\n  get font(): string {\n    return this._context.font;\n  }\n\n  set font(value: string) {\n    if (this._state.font !== value) {\n      this._state.font = value;\n      this._context.font = value;\n    }\n  }\n\n  get textAlign(): CanvasTextAlign {\n    return this._context.textAlign;\n  }\n\n  set textAlign(value: CanvasTextAlign) {\n    if (this._state.textAlign !== value) {\n      this._state.textAlign = value;\n      this._context.textAlign = value;\n    }\n  }\n\n  get textBaseline(): CanvasTextBaseline {\n    return this._context.textBaseline;\n  }\n\n  set textBaseline(value: CanvasTextBaseline) {\n    if (this._state.textBaseline !== value) {\n      this._state.textBaseline = value;\n      this._context.textBaseline = value;\n    }\n  }\n\n  get lineCap(): CanvasLineCap {\n    return this._context.lineCap;\n  }\n\n  set lineCap(value: CanvasLineCap) {\n    if (this._state.lineCap !== value) {\n      this._state.lineCap = value;\n      this._context.lineCap = value;\n    }\n  }\n\n  get lineDashOffset(): number {\n    return this._context.lineDashOffset;\n  }\n\n  set lineDashOffset(value: number) {\n    if (this._state.lineDashOffset !== value) {\n      this._state.lineDashOffset = value;\n      this._context.lineDashOffset = value;\n    }\n  }\n\n  get lineJoin(): CanvasLineJoin {\n    return this._context.lineJoin;\n  }\n\n  set lineJoin(value: CanvasLineJoin) {\n    if (this._state.lineJoin !== value) {\n      this._state.lineJoin = value;\n      this._context.lineJoin = value;\n    }\n  }\n\n  get lineWidth(): number {\n    return this._context.lineWidth;\n  }\n\n  set lineWidth(value: number) {\n    if (this._state.lineWidth !== value) {\n      this._state.lineWidth = value;\n      this._context.lineWidth = value;\n    }\n  }\n\n  get miterLimit(): number {\n    return this._context.miterLimit;\n  }\n\n  set miterLimit(value: number) {\n    if (this._state.miterLimit !== value) {\n      this._state.miterLimit = value;\n      this._context.miterLimit = value;\n    }\n  }\n\n  get shadowBlur(): number {\n    return this._context.shadowBlur;\n  }\n\n  set shadowBlur(value: number) {\n    if (this._state.shadowBlur !== value) {\n      this._state.shadowBlur = value;\n      this._context.shadowBlur = value;\n    }\n  }\n\n  get shadowColor(): string {\n    return this._context.shadowColor;\n  }\n\n  set shadowColor(value: string) {\n    if (this._state.shadowColor !== value) {\n      this._state.shadowColor = value;\n      this._context.shadowColor = value;\n    }\n  }\n\n  get shadowOffsetX(): number {\n    return this._context.shadowOffsetX;\n  }\n\n  set shadowOffsetX(value: number) {\n    if (this._state.shadowOffsetX !== value) {\n      this._state.shadowOffsetX = value;\n      this._context.shadowOffsetX = value;\n    }\n  }\n\n  get shadowOffsetY(): number {\n    return this._context.shadowOffsetY;\n  }\n\n  set shadowOffsetY(value: number) {\n    if (this._state.shadowOffsetY !== value) {\n      this._state.shadowOffsetY = value;\n      this._context.shadowOffsetY = value;\n    }\n  }\n\n  get imageSmoothingEnabled(): boolean {\n    return this._context.imageSmoothingEnabled;\n  }\n\n  set imageSmoothingEnabled(value: boolean) {\n    if (this._state.imageSmoothingEnabled !== value) {\n      this._state.imageSmoothingEnabled = value;\n      this._context.imageSmoothingEnabled = value;\n    }\n  }\n\n  get globalAlpha(): number {\n    return this._context.globalAlpha;\n  }\n\n  set globalAlpha(value: number) {\n    if (this._state.globalAlpha !== value) {\n      this._state.globalAlpha = value;\n      this._context.globalAlpha = value;\n    }\n  }\n\n  get globalCompositeOperation(): string {\n    return this._context.globalCompositeOperation;\n  }\n\n  set globalCompositeOperation(value: string) {\n    if (this._state.globalCompositeOperation !== value) {\n      this._state.globalCompositeOperation = value;\n      this._context.globalCompositeOperation = value;\n    }\n  }\n\n  getLineDash(): number[] {\n    return this._context.getLineDash();\n  }\n\n  setLineDash(segments: number[]): void {\n    this._context.setLineDash(segments);\n  }\n\n  rotate(angle: number): void {\n    this._context.rotate(angle);\n  }\n\n  scale(x: number, y: number): void {\n    this._context.scale(x, y);\n  }\n\n  transform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void {\n    this._context.transform(m11, m12, m21, m22, dx, dy);\n  }\n\n  translate(x: number, y: number): void {\n    this._context.translate(x, y);\n  }\n\n  setTransform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void {\n    this._context.setTransform(m11, m12, m21, m22, dx, dy);\n  }\n\n  save(): void {\n    // Clone an push the current state to the stack.\n    this._state = Private.State.push(this._state);\n\n    // Save the wrapped context state.\n    this._context.save();\n  }\n\n  restore(): void {\n    // Bail if there is no state to restore.\n    if (!this._state.next) {\n      return;\n    }\n\n    // Pop the saved state from the stack.\n    this._state = Private.State.pop(this._state);\n\n    // Restore the wrapped context state.\n    this._context.restore();\n  }\n\n  beginPath(): void {\n    return this._context.beginPath();\n  }\n\n  closePath(): void {\n    this._context.closePath();\n  }\n\n  isPointInPath(x: number, y: number, fillRule?: CanvasFillRule): boolean {\n    let result: boolean;\n    if (arguments.length === 2) {\n      result = this._context.isPointInPath(x, y);\n    } else {\n      result = this._context.isPointInPath(x, y, fillRule);\n    }\n    return result;\n  }\n\n  arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void {\n    if (arguments.length === 5) {\n      this._context.arc(x, y, radius, startAngle, endAngle);\n    } else {\n      this._context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n    }\n  }\n\n  arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void {\n    this._context.arcTo(x1, y1, x2, y2, radius);\n  }\n\n  bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void {\n    this._context.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  }\n\n  ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void {\n    if (arguments.length === 7) {\n      this._context.ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle);\n    } else {\n      this._context.ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise);\n    }\n  }\n\n  lineTo(x: number, y: number): void {\n    this._context.lineTo(x, y);\n  }\n\n  moveTo(x: number, y: number): void {\n    this._context.moveTo(x, y);\n  }\n\n  quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void {\n    this._context.quadraticCurveTo(cpx, cpy, x, y);\n  }\n\n  rect(x: number, y: number, w: number, h: number): void {\n    this._context.rect(x, y, w, h);\n  }\n\n  clip(fillRule?: CanvasFillRule): void {\n    if (arguments.length === 0) {\n      this._context.clip();\n    } else {\n      this._context.clip(fillRule);\n    }\n  }\n\n  fill(fillRule?: CanvasFillRule): void {\n    if (arguments.length === 0) {\n      this._context.fill();\n    } else {\n      this._context.fill(fillRule);\n    }\n  }\n\n  stroke(): void {\n    this._context.stroke();\n  }\n\n  clearRect(x: number, y: number, w: number, h: number): void {\n    return this._context.clearRect(x, y, w, h);\n  }\n\n  fillRect(x: number, y: number, w: number, h: number): void {\n    this._context.fillRect(x, y, w, h);\n  }\n\n  fillText(text: string, x: number, y: number, maxWidth?: number): void {\n    if (arguments.length === 3) {\n      this._context.fillText(text, x, y);\n    } else {\n      this._context.fillText(text, x, y, maxWidth);\n    }\n  }\n\n  strokeRect(x: number, y: number, w: number, h: number): void {\n    this._context.strokeRect(x, y, w, h);\n  }\n\n  strokeText(text: string, x: number, y: number, maxWidth?: number): void {\n    if (arguments.length === 3) {\n      this._context.strokeText(text, x, y);\n    } else {\n      this._context.strokeText(text, x, y, maxWidth);\n    }\n  }\n\n  measureText(text: string): TextMetrics {\n    return this._context.measureText(text);\n  }\n\n  createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient {\n    return this._context.createLinearGradient(x0, y0, x1, y1);\n  }\n\n  createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient {\n    return this._context.createRadialGradient(x0, y0, r0, x1, y1, r1);\n  }\n\n  createPattern(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement, repetition: string): CanvasPattern | null {\n    return this._context.createPattern(image, repetition);\n  }\n\n  createImageData(imageData: ImageData): ImageData;\n  createImageData(sw: number, sh: number): ImageData;\n  createImageData() {\n    return this._context.createImageData.apply(this._context, arguments);\n  }\n\n  getImageData(sx: number, sy: number, sw: number, sh: number): ImageData {\n    return this._context.getImageData(sx, sy, sw, sh);\n  }\n\n  putImageData(imagedata: ImageData, dx: number, dy: number): void\n  putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX: number, dirtyY: number, dirtyWidth: number, dirtyHeight: number): void\n  putImageData(): void {\n    this._context.putImageData.apply(this._context, arguments);\n  }\n\n  drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, dstX: number, dstY: number): void;\n  drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, dstX: number, dstY: number, dstW: number, dstH: number): void;\n  drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, srcX: number, srcY: number, srcW: number, srcH: number, dstX: number, dstY: number, dstW: number, dstH: number): void;\n  drawImage(): void {\n    this._context.drawImage.apply(this._context, arguments);\n  }\n\n  drawFocusIfNeeded(element: Element): void {\n    this._context.drawFocusIfNeeded(element);\n  }\n\n  private _disposed = false;\n  private _state: Private.State;\n  private _context: CanvasRenderingContext2D;\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The index of next valid pool object.\n   */\n  let pi = -1;\n\n  /**\n   * A state object allocation pool.\n   */\n  const pool: State[] = [];\n\n  /**\n   * An object which holds the state for a gc.\n   */\n  export\n  class State {\n    /**\n     * Create a gc state object from a 2D canvas context.\n     */\n    static create(context: CanvasRenderingContext2D): State {\n      let state = pi < 0 ? new State() : pool[pi--];\n      state.next = null;\n      state.fillStyle = context.fillStyle;\n      state.font = context.font;\n      state.globalAlpha = context.globalAlpha;\n      state.globalCompositeOperation = context.globalCompositeOperation;\n      state.imageSmoothingEnabled = context.imageSmoothingEnabled;\n      state.lineCap = context.lineCap;\n      state.lineDashOffset = context.lineDashOffset;\n      state.lineJoin = context.lineJoin;\n      state.lineWidth = context.lineWidth;\n      state.miterLimit = context.miterLimit;\n      state.shadowBlur = context.shadowBlur;\n      state.shadowColor = context.shadowColor;\n      state.shadowOffsetX = context.shadowOffsetX;\n      state.shadowOffsetY = context.shadowOffsetY;\n      state.strokeStyle = context.strokeStyle;\n      state.textAlign = context.textAlign;\n      state.textBaseline = context.textBaseline;\n      return state;\n    }\n\n    /**\n     * Clone an existing gc state object and add it to the state stack.\n     */\n    static push(other: State): State {\n      let state = pi < 0 ? new State() : pool[pi--];\n      state.next = other;\n      state.fillStyle = other.fillStyle;\n      state.font = other.font;\n      state.globalAlpha = other.globalAlpha;\n      state.globalCompositeOperation = other.globalCompositeOperation;\n      state.imageSmoothingEnabled = other.imageSmoothingEnabled;\n      state.lineCap = other.lineCap;\n      state.lineDashOffset = other.lineDashOffset;\n      state.lineJoin = other.lineJoin;\n      state.lineWidth = other.lineWidth;\n      state.miterLimit = other.miterLimit;\n      state.shadowBlur = other.shadowBlur;\n      state.shadowColor = other.shadowColor;\n      state.shadowOffsetX = other.shadowOffsetX;\n      state.shadowOffsetY = other.shadowOffsetY;\n      state.strokeStyle = other.strokeStyle;\n      state.textAlign = other.textAlign;\n      state.textBaseline = other.textBaseline;\n      return state;\n    }\n\n    /**\n     * Pop the next state object and return the current to the pool\n     */\n    static pop(state: State): State {\n      state.fillStyle = '';\n      state.strokeStyle = '';\n      pool[++pi] = state;\n      return state.next!;\n    }\n\n    next: State | null;\n\n    fillStyle: string | CanvasGradient | CanvasPattern;\n    font: string;\n    globalAlpha: number;\n    globalCompositeOperation: string;\n    imageSmoothingEnabled: boolean;\n    lineCap: string;\n    lineDashOffset: number;\n    lineJoin: string;\n    lineWidth: number;\n    miterLimit: number;\n    shadowBlur: number;\n    shadowColor: string;\n    shadowOffsetX: number;\n    shadowOffsetY: number;\n    strokeStyle: string | CanvasGradient | CanvasPattern;\n    textAlign: string;\n    textBaseline: string;\n\n    private constructor() { }\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  CellRenderer\n} from './cellrenderer';\n\nimport {\n  GraphicsContext\n} from './graphicscontext';\n\n\n/**\n * A cell renderer which renders data values as text.\n */\nexport\nclass TextRenderer extends CellRenderer {\n  /**\n   * Construct a new text renderer.\n   *\n   * @param options - The options for initializing the renderer.\n   */\n  constructor(options: TextRenderer.IOptions = {}) {\n    super();\n    this.font = options.font || '12px sans-serif';\n    this.textColor = options.textColor || '#000000';\n    this.backgroundColor = options.backgroundColor || '';\n    this.verticalAlignment = options.verticalAlignment || 'center';\n    this.horizontalAlignment = options.horizontalAlignment || 'left';\n    this.format = options.format || TextRenderer.formatGeneric();\n    this.elideDirection = options.elideDirection || 'right';\n  }\n\n  /**\n   * The CSS shorthand font for drawing the text.\n   */\n  readonly font: CellRenderer.ConfigOption<string>;\n\n  /**\n   * The CSS color for drawing the text.\n   */\n  readonly textColor: CellRenderer.ConfigOption<string>;\n\n  /**\n   * The CSS color for the cell background.\n   */\n  readonly backgroundColor: CellRenderer.ConfigOption<string>;\n\n  /**\n   * The vertical alignment for the cell text.\n   */\n  readonly verticalAlignment: CellRenderer.ConfigOption<TextRenderer.VerticalAlignment>;\n\n  /**\n   * The horizontal alignment for the cell text.\n   */\n  readonly horizontalAlignment: CellRenderer.ConfigOption<TextRenderer.HorizontalAlignment>;\n\n  /**\n   * The format function for the cell value.\n   */\n  readonly format: TextRenderer.FormatFunc;\n\n  /**\n   * Which side to draw the ellipsis.\n   */\n  readonly elideDirection: CellRenderer.ConfigOption<TextRenderer.ElideDirection>;\n\n  /**\n   * Paint the content for a cell.\n   *\n   * @param gc - The graphics context to use for drawing.\n   *\n   * @param config - The configuration data for the cell.\n   */\n  paint(gc: GraphicsContext, config: CellRenderer.CellConfig): void {\n    this.drawBackground(gc, config);\n    this.drawText(gc, config);\n  }\n\n  /**\n   * Draw the background for the cell.\n   *\n   * @param gc - The graphics context to use for drawing.\n   *\n   * @param config - The configuration data for the cell.\n   */\n  drawBackground(gc: GraphicsContext, config: CellRenderer.CellConfig): void {\n    // Resolve the background color for the cell.\n    let color = CellRenderer.resolveOption(this.backgroundColor, config);\n\n    // Bail if there is no background color to draw.\n    if (!color) {\n      return;\n    }\n\n    // Fill the cell with the background color.\n    gc.fillStyle = color;\n    gc.fillRect(config.x, config.y, config.width, config.height);\n  }\n\n  /**\n   * Draw the text for the cell.\n   *\n   * @param gc - The graphics context to use for drawing.\n   *\n   * @param config - The configuration data for the cell.\n   */\n  drawText(gc: GraphicsContext, config: CellRenderer.CellConfig): void {\n    // Resolve the font for the cell.\n    let font = CellRenderer.resolveOption(this.font, config);\n\n    // Bail if there is no font to draw.\n    if (!font) {\n      return;\n    }\n\n    // Resolve the text color for the cell.\n    let color = CellRenderer.resolveOption(this.textColor, config);\n\n    // Bail if there is no text color to draw.\n    if (!color) {\n      return;\n    }\n\n    // Format the cell value to text.\n    let format = this.format;\n    let text = format(config);\n\n    // Bail if there is no text to draw.\n    if (!text) {\n      return;\n    }\n\n    // Resolve the vertical and horizontal alignment.\n    let vAlign = CellRenderer.resolveOption(this.verticalAlignment, config);\n    let hAlign = CellRenderer.resolveOption(this.horizontalAlignment, config);\n\n    // Resolve the elision direction\n    let elideDirection = CellRenderer.resolveOption(this.elideDirection, config);\n\n    // Compute the padded text box height for the specified alignment.\n    let boxHeight = config.height - (vAlign === 'center' ? 1 : 2);\n\n    // Bail if the text box has no effective size.\n    if (boxHeight <= 0) {\n      return;\n    }\n\n    // Compute the text height for the gc font.\n    let textHeight = TextRenderer.measureFontHeight(font);\n\n    // Set up the text position variables.\n    let textX: number;\n    let textY: number;\n    let boxWidth: number;\n\n    // Compute the Y position for the text.\n    switch (vAlign) {\n    case 'top':\n      textY = config.y + 2 + textHeight;\n      break;\n    case 'center':\n      textY = config.y + config.height / 2 + textHeight / 2;\n      break;\n    case 'bottom':\n      textY = config.y + config.height - 2;\n      break;\n    default:\n      throw 'unreachable';\n    }\n\n    // Compute the X position for the text.\n    switch (hAlign) {\n    case 'left':\n      textX = config.x + 8;\n      boxWidth = config.width - 14;\n      break;\n    case 'center':\n      textX = config.x + config.width / 2;\n      boxWidth = config.width;\n      break;\n    case 'right':\n      textX = config.x + config.width - 8;\n      boxWidth = config.width - 14;\n      break;\n    default:\n      throw 'unreachable';\n    }\n\n    // Clip the cell if the text is taller than the text box height.\n    if (textHeight > boxHeight) {\n      gc.beginPath();\n      gc.rect(config.x, config.y, config.width, config.height - 1);\n      gc.clip();\n    }\n\n    // Set the gc state.\n    gc.font = font;\n    gc.fillStyle = color;\n    gc.textAlign = hAlign;\n    gc.textBaseline = 'bottom';\n\n    // Elide text that is too long\n    let elide = '\\u2026';\n    let textWidth = gc.measureText(text).width;\n\n    // Compute elided text\n    if (elideDirection === 'right') {\n      while ((textWidth > boxWidth) && (text.length > 1)) {\n        if (text.length > 4 && textWidth >= 2 * boxWidth) {\n          // If text width is substantially bigger, take half the string\n          text = text.substring(0, (text.length / 2) + 1) + elide;\n        } else {\n          // Otherwise incrementally remove the last character\n          text = text.substring(0, text.length - 2) + elide;\n        }\n        textWidth = gc.measureText(text).width;\n      } \n    } else {\n      while ((textWidth > boxWidth) && (text.length > 1)) {\n        if (text.length > 4 && textWidth >= 2 * boxWidth) {\n          // If text width is substantially bigger, take half the string\n          text = elide + text.substring((text.length / 2));\n        } else {\n          // Otherwise incrementally remove the last character\n          text = elide + text.substring(2);\n        }\n        textWidth = gc.measureText(text).width;\n      }\n    }\n\n    // Draw the text for the cell.\n    gc.fillText(text, textX, textY);\n  }\n}\n\n\n/**\n * The namespace for the `TextRenderer` class statics.\n */\nexport\nnamespace TextRenderer {\n  /**\n   * A type alias for the supported vertical alignment modes.\n   */\n  export\n  type VerticalAlignment = 'top' | 'center' | 'bottom';\n\n  /**\n   * A type alias for the supported horizontal alignment modes.\n   */\n  export\n  type HorizontalAlignment = 'left' | 'center' | 'right';\n\n  /**\n   * A type alias for the supported ellipsis sides.\n   */\n  export\n  type ElideDirection = 'left' | 'right';\n\n  /**\n   * An options object for initializing a text renderer.\n   */\n  export\n  interface IOptions {\n    /**\n     * The font for drawing the cell text.\n     *\n     * The default is `'12px sans-serif'`.\n     */\n    font?: CellRenderer.ConfigOption<string>;\n\n    /**\n     * The color for the drawing the cell text.\n     *\n     * The default `'#000000'`.\n     */\n    textColor?: CellRenderer.ConfigOption<string>;\n\n    /**\n     * The background color for the cells.\n     *\n     * The default is `''`.\n     */\n    backgroundColor?: CellRenderer.ConfigOption<string>;\n\n    /**\n     * The vertical alignment for the cell text.\n     *\n     * The default is `'center'`.\n     */\n    verticalAlignment?: CellRenderer.ConfigOption<VerticalAlignment>;\n\n    /**\n     * The horizontal alignment for the cell text.\n     *\n     * The default is `'left'`.\n     */\n    horizontalAlignment?: CellRenderer.ConfigOption<HorizontalAlignment>;\n\n    /**\n     * The format function for the renderer.\n     *\n     * The default is `TextRenderer.formatGeneric()`.\n     */\n    format?: FormatFunc;\n\n    /**\n     * The ellipsis direction for the cell text.\n     *\n     * The default is `'right'`.\n     */\n    elideDirection?: CellRenderer.ConfigOption<ElideDirection>;\n\n  }\n\n  /**\n   * A type alias for a format function.\n   */\n  export\n  type FormatFunc = CellRenderer.ConfigFunc<string>;\n\n  /**\n   * Create a generic text format function.\n   *\n   * @param options - The options for creating the format function.\n   *\n   * @returns A new generic text format function.\n   *\n   * #### Notes\n   * This formatter uses the builtin `String()` to coerce any value\n   * to a string.\n   */\n  export\n  function formatGeneric(options: formatGeneric.IOptions = {}): FormatFunc {\n    let missing = options.missing || '';\n    return ({ value }) => {\n      if (value === null || value === undefined) {\n        return missing;\n      }\n      return String(value);\n    };\n  }\n\n  /**\n   * The namespace for the `formatGeneric` function statics.\n   */\n  export\n  namespace formatGeneric {\n    /**\n     * The options for creating a generic format function.\n     */\n    export\n    interface IOptions {\n      /**\n       * The text to use for a `null` or `undefined` data value.\n       *\n       * The default is `''`.\n       */\n      missing?: string;\n    }\n  }\n\n  /**\n   * Create a fixed decimal format function.\n   *\n   * @param options - The options for creating the format function.\n   *\n   * @returns A new fixed decimal format function.\n   *\n   * #### Notes\n   * This formatter uses the builtin `Number()` and `toFixed()` to\n   * coerce values.\n   *\n   * The `formatIntlNumber()` formatter is more flexible, but slower.\n   */\n  export\n  function formatFixed(options: formatFixed.IOptions = {}): FormatFunc {\n    let digits = options.digits;\n    let missing = options.missing || '';\n    return ({ value }) => {\n      if (value === null || value === undefined) {\n        return missing;\n      }\n      return Number(value).toFixed(digits);\n    };\n  }\n\n  /**\n   * The namespace for the `formatFixed` function statics.\n   */\n  export\n  namespace formatFixed {\n    /**\n     * The options for creating a fixed format function.\n     */\n    export\n    interface IOptions {\n      /**\n       * The number of digits to include after the decimal point.\n       *\n       * The default is determined by the user agent.\n       */\n      digits?: number;\n\n      /**\n       * The text to use for a `null` or `undefined` data value.\n       *\n       * The default is `''`.\n       */\n      missing?: string;\n    }\n  }\n\n  /**\n   * Create a significant figure format function.\n   *\n   * @param options - The options for creating the format function.\n   *\n   * @returns A new significant figure format function.\n   *\n   * #### Notes\n   * This formatter uses the builtin `Number()` and `toPrecision()`\n   * to coerce values.\n   *\n   * The `formatIntlNumber()` formatter is more flexible, but slower.\n   */\n  export\n  function formatPrecision(options: formatPrecision.IOptions = {}): FormatFunc {\n    let digits = options.digits;\n    let missing = options.missing || '';\n    return ({ value }) => {\n      if (value === null || value === undefined) {\n        return missing;\n      }\n      return Number(value).toPrecision(digits);\n    };\n  }\n\n  /**\n   * The namespace for the `formatPrecision` function statics.\n   */\n  export\n  namespace formatPrecision {\n    /**\n     * The options for creating a precision format function.\n     */\n    export\n    interface IOptions {\n      /**\n       * The number of significant figures to include in the value.\n       *\n       * The default is determined by the user agent.\n       */\n      digits?: number;\n\n      /**\n       * The text to use for a `null` or `undefined` data value.\n       *\n       * The default is `''`.\n       */\n      missing?: string;\n    }\n  }\n\n  /**\n   * Create a scientific notation format function.\n   *\n   * @param options - The options for creating the format function.\n   *\n   * @returns A new scientific notation format function.\n   *\n   * #### Notes\n   * This formatter uses the builtin `Number()` and `toExponential()`\n   * to coerce values.\n   *\n   * The `formatIntlNumber()` formatter is more flexible, but slower.\n   */\n  export\n  function formatExponential(options: formatExponential.IOptions = {}): FormatFunc {\n    let digits = options.digits;\n    let missing = options.missing || '';\n    return ({ value }) => {\n      if (value === null || value === undefined) {\n        return missing;\n      }\n      return Number(value).toExponential(digits);\n    };\n  }\n\n  /**\n   * The namespace for the `formatExponential` function statics.\n   */\n  export\n  namespace formatExponential {\n    /**\n     * The options for creating an exponential format function.\n     */\n    export\n    interface IOptions {\n      /**\n       * The number of digits to include after the decimal point.\n       *\n       * The default is determined by the user agent.\n       */\n      digits?: number;\n\n      /**\n       * The text to use for a `null` or `undefined` data value.\n       *\n       * The default is `''`.\n       */\n      missing?: string;\n    }\n  }\n\n  /**\n   * Create an international number format function.\n   *\n   * @param options - The options for creating the format function.\n   *\n   * @returns A new international number format function.\n   *\n   * #### Notes\n   * This formatter uses the builtin `Intl.NumberFormat` object to\n   * coerce values.\n   *\n   * This is the most flexible (but slowest) number formatter.\n   */\n  export\n  function formatIntlNumber(options: formatIntlNumber.IOptions = {}): FormatFunc {\n    let missing = options.missing || '';\n    let nft = new Intl.NumberFormat(options.locales, options.options);\n    return ({ value }) => {\n      if (value === null || value === undefined) {\n        return missing;\n      }\n      return nft.format(value);\n    };\n  }\n\n  /**\n   * The namespace for the `formatIntlNumber` function statics.\n   */\n  export\n  namespace formatIntlNumber {\n    /**\n     * The options for creating an intl number format function.\n     */\n    export\n    interface IOptions {\n      /**\n       * The locales to pass to the `Intl.NumberFormat` constructor.\n       *\n       * The default is determined by the user agent.\n       */\n      locales?: string | string[];\n\n      /**\n       * The options to pass to the `Intl.NumberFormat` constructor.\n       *\n       * The default is determined by the user agent.\n       */\n      options?: Intl.NumberFormatOptions;\n\n      /**\n       * The text to use for a `null` or `undefined` data value.\n       *\n       * The default is `''`.\n       */\n      missing?: string;\n    }\n  }\n\n  /**\n   * Create a date format function.\n   *\n   * @param options - The options for creating the format function.\n   *\n   * @returns A new date format function.\n   *\n   * #### Notes\n   * This formatter uses `Date.toDateString()` to format the values.\n   *\n   * If a value is not a `Date` object, `new Date(value)` is used to\n   * coerce the value to a date.\n   *\n   * The `formatIntlDateTime()` formatter is more flexible, but slower.\n   */\n  export\n  function formatDate(options: formatDate.IOptions = {}): FormatFunc {\n    let missing = options.missing || '';\n    return ({ value }) => {\n      if (value === null || value === undefined) {\n        return missing;\n      }\n      if (value instanceof Date) {\n        return value.toDateString();\n      }\n      return (new Date(value)).toDateString();\n    };\n  }\n\n  /**\n   * The namespace for the `formatDate` function statics.\n   */\n  export\n  namespace formatDate {\n    /**\n     * The options for creating a date format function.\n     */\n    export\n    interface IOptions {\n      /**\n       * The text to use for a `null` or `undefined` data value.\n       *\n       * The default is `''`.\n       */\n      missing?: string;\n    }\n  }\n\n  /**\n   * Create a time format function.\n   *\n   * @param options - The options for creating the format function.\n   *\n   * @returns A new time format function.\n   *\n   * #### Notes\n   * This formatter uses `Date.toTimeString()` to format the values.\n   *\n   * If a value is not a `Date` object, `new Date(value)` is used to\n   * coerce the value to a date.\n   *\n   * The `formatIntlDateTime()` formatter is more flexible, but slower.\n   */\n  export\n  function formatTime(options: formatTime.IOptions = {}): FormatFunc {\n    let missing = options.missing || '';\n    return ({ value }) => {\n      if (value === null || value === undefined) {\n        return missing;\n      }\n      if (value instanceof Date) {\n        return value.toTimeString();\n      }\n      return (new Date(value)).toTimeString();\n    };\n  }\n\n  /**\n   * The namespace for the `formatTime` function statics.\n   */\n  export\n  namespace formatTime {\n    /**\n     * The options for creating a time format function.\n     */\n    export\n    interface IOptions {\n      /**\n       * The text to use for a `null` or `undefined` data value.\n       *\n       * The default is `''`.\n       */\n      missing?: string;\n    }\n  }\n\n  /**\n   * Create an ISO datetime format function.\n   *\n   * @param options - The options for creating the format function.\n   *\n   * @returns A new ISO datetime format function.\n   *\n   * #### Notes\n   * This formatter uses `Date.toISOString()` to format the values.\n   *\n   * If a value is not a `Date` object, `new Date(value)` is used to\n   * coerce the value to a date.\n   *\n   * The `formatIntlDateTime()` formatter is more flexible, but slower.\n   */\n  export\n  function formatISODateTime(options: formatISODateTime.IOptions = {}): FormatFunc {\n    let missing = options.missing || '';\n    return ({ value }) => {\n      if (value === null || value === undefined) {\n        return missing;\n      }\n      if (value instanceof Date) {\n        return value.toISOString();\n      }\n      return (new Date(value)).toISOString();\n    };\n  }\n\n  /**\n   * The namespace for the `formatISODateTime` function statics.\n   */\n  export\n  namespace formatISODateTime {\n    /**\n     * The options for creating an ISO datetime format function.\n     */\n    export\n    interface IOptions {\n      /**\n       * The text to use for a `null` or `undefined` data value.\n       *\n       * The default is `''`.\n       */\n      missing?: string;\n    }\n  }\n\n  /**\n   * Create a UTC datetime format function.\n   *\n   * @param options - The options for creating the format function.\n   *\n   * @returns A new UTC datetime format function.\n   *\n   * #### Notes\n   * This formatter uses `Date.toUTCString()` to format the values.\n   *\n   * If a value is not a `Date` object, `new Date(value)` is used to\n   * coerce the value to a date.\n   *\n   * The `formatIntlDateTime()` formatter is more flexible, but slower.\n   */\n  export\n  function formatUTCDateTime(options: formatUTCDateTime.IOptions = {}): FormatFunc {\n    let missing = options.missing || '';\n    return ({ value }) => {\n      if (value === null || value === undefined) {\n        return missing;\n      }\n      if (value instanceof Date) {\n        return value.toUTCString();\n      }\n      return (new Date(value)).toUTCString();\n    };\n  }\n\n  /**\n   * The namespace for the `formatUTCDateTime` function statics.\n   */\n  export\n  namespace formatUTCDateTime {\n    /**\n     * The options for creating a UTC datetime format function.\n     */\n    export\n    interface IOptions {\n      /**\n       * The text to use for a `null` or `undefined` data value.\n       *\n       * The default is `''`.\n       */\n      missing?: string;\n    }\n  }\n\n  /**\n   * Create an international datetime format function.\n   *\n   * @param options - The options for creating the format function.\n   *\n   * @returns A new international datetime format function.\n   *\n   * #### Notes\n   * This formatter uses the builtin `Intl.DateTimeFormat` object to\n   * coerce values.\n   *\n   * This is the most flexible (but slowest) datetime formatter.\n   */\n  export\n  function formatIntlDateTime(options: formatIntlDateTime.IOptions = {}): FormatFunc {\n    let missing = options.missing || '';\n    let dtf = new Intl.DateTimeFormat(options.locales, options.options);\n    return ({ value }) => {\n      if (value === null || value === undefined) {\n        return missing;\n      }\n      return dtf.format(value);\n    };\n  }\n\n  /**\n   * The namespace for the `formatIntlDateTime` function statics.\n   */\n  export\n  namespace formatIntlDateTime {\n    /**\n     * The options for creating an intl datetime format function.\n     */\n    export\n    interface IOptions {\n      /**\n       * The locales to pass to the `Intl.DateTimeFormat` constructor.\n       *\n       * The default is determined by the user agent.\n       */\n      locales?: string | string[];\n\n      /**\n       * The options to pass to the `Intl.DateTimeFormat` constructor.\n       *\n       * The default is determined by the user agent.\n       */\n      options?: Intl.DateTimeFormatOptions;\n\n      /**\n       * The text to use for a `null` or `undefined` data value.\n       *\n       * The default is `''`.\n       */\n      missing?: string;\n    }\n  }\n\n  /**\n   * Measure the height of a font.\n   *\n   * @param font - The CSS font string of interest.\n   *\n   * @returns The height of the font bounding box.\n   *\n   * #### Notes\n   * This function uses a temporary DOM node to measure the text box\n   * height for the specified font. The first call for a given font\n   * will incur a DOM reflow, but the return value is cached, so any\n   * subsequent call for the same font will return the cached value.\n   */\n  export\n  function measureFontHeight(font: string): number {\n    // Look up the cached font height.\n    let height = Private.fontHeightCache[font];\n\n    // Return the cached font height if it exists.\n    if (height !== undefined) {\n      return height;\n    }\n\n    // Normalize the font.\n    Private.fontMeasurementGC.font = font;\n    let normFont = Private.fontMeasurementGC.font;\n\n    // Set the font on the measurement node.\n    Private.fontMeasurementNode.style.font = normFont;\n\n    // Add the measurement node to the document.\n    document.body.appendChild(Private.fontMeasurementNode);\n\n    // Measure the node height.\n    height = Private.fontMeasurementNode.offsetHeight;\n\n    // Remove the measurement node from the document.\n    document.body.removeChild(Private.fontMeasurementNode);\n\n    // Cache the measured height for the font and norm font.\n    Private.fontHeightCache[font] = height;\n    Private.fontHeightCache[normFont] = height;\n\n    // Return the measured height.\n    return height;\n  }\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A cache of measured font heights.\n   */\n  export\n  const fontHeightCache: { [font: string]: number } = Object.create(null);\n\n  /**\n   * The DOM node used for font height measurement.\n   */\n  export\n  const fontMeasurementNode = (() => {\n    let node = document.createElement('div');\n    node.style.position = 'absolute';\n    node.style.top = '-99999px';\n    node.style.left = '-99999px';\n    node.style.visibility = 'hidden';\n    node.textContent = 'M';\n    return node;\n  })();\n\n  /**\n   * The GC used for font measurement.\n   */\n  export\n  const fontMeasurementGC = (() => {\n    let canvas = document.createElement('canvas');\n    canvas.width = 0;\n    canvas.height = 0;\n    return canvas.getContext('2d')!;\n  })();\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ISignal, Signal\n} from '@lumino/signaling';\n\nimport {\n  CellRenderer\n} from './cellrenderer';\n\nimport {\n  DataModel\n} from './datamodel';\n\nimport {\n  TextRenderer\n} from './textrenderer';\n\n\n/**\n * A class which manages the mapping of cell renderers.\n */\nexport\nclass RendererMap {\n  /**\n   * Construct a new renderer map.\n   *\n   * @param values - The initial values for the map.\n   *\n   * @param fallback - The renderer of last resort.\n   */\n  constructor(values: RendererMap.Values = {}, fallback?: CellRenderer) {\n    this._values = { ...values };\n    this._fallback = fallback || new TextRenderer();\n  }\n\n  /**\n   * A signal emitted when the renderer map has changed.\n   */\n  get changed(): ISignal<this, void> {\n    return this._changed;\n  }\n\n  /**\n   * Get the cell renderer to use for the given cell config.\n   *\n   * @param config - The cell config of interest.\n   *\n   * @returns The renderer to use for the cell.\n   */\n  get(config: CellRenderer.CellConfig): CellRenderer {\n    // Fetch the renderer from the values map.\n    let renderer = this._values[config.region];\n\n    // Execute a resolver function if necessary.\n    if (typeof renderer === 'function') {\n      try {\n        renderer = renderer(config);\n      } catch (err) {\n        renderer = undefined;\n        console.error(err);\n      }\n    }\n\n    // Return the renderer or the fallback.\n    return renderer || this._fallback;\n  }\n\n  /**\n   * Update the renderer map with new values\n   *\n   * @param values - The updated values for the map.\n   *\n   * @param fallback - The renderer of last resort.\n   *\n   * #### Notes\n   * This method always emits the `changed` signal.\n   */\n  update(values: RendererMap.Values = {}, fallback?: CellRenderer): void {\n    this._values = { ...this._values, ...values };\n    this._fallback = fallback || this._fallback;\n    this._changed.emit(undefined);\n  }\n\n  private _fallback: CellRenderer;\n  private _values: RendererMap.Values;\n  private _changed = new Signal<this, void>(this);\n}\n\n\n/**\n * The namespace for the `RendererMap` class statics.\n */\nexport\nnamespace RendererMap {\n  /**\n   * A type alias for a cell renderer resolver function.\n   */\n  export\n  type Resolver = CellRenderer.ConfigFunc<CellRenderer | undefined>;\n\n  /**\n   * A type alias for a `RendererMap` values type.\n   */\n  export\n  type Values = {\n    [R in DataModel.CellRegion]?: Resolver | CellRenderer | undefined;\n  };\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ArrayExt\n} from '@lumino/algorithm';\n\n\n/**\n * An object which manages a collection of variable sized sections.\n *\n * #### Notes\n * This class is an implementation detail. It is designed to manage\n * the variable row and column sizes for a data grid. User code will\n * not interact with this class directly.\n */\nexport\nclass SectionList {\n  /**\n   * Construct a new section list.\n   *\n   * @param options - The options for initializing the list.\n   */\n  constructor(options: SectionList.IOptions) {\n    this._minimumSize = options.minimumSize || 2;\n    this._defaultSize = Math.max(this._minimumSize, Math.floor(options.defaultSize));\n  }\n\n  /**\n   * The total size of all sections in the list.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get length(): number {\n    return this._length;\n  }\n\n  /**\n   * The total number of sections in the list.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get count(): number {\n    return this._count;\n  }\n\n  /**\n   * Get the minimum size of sections in the list.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get minimumSize(): number {\n    return this._minimumSize;\n  }\n\n  /**\n   * Set the minimum size of sections in the list.\n   *\n   * #### Complexity\n   * Linear on the number of resized sections.\n   */\n  set minimumSize(value: number) {\n    // Normalize the value.\n    value = Math.max(2, Math.floor(value));\n\n    // Bail early if the value does not change.\n    if (this._minimumSize === value) {\n      return;\n    }\n\n    // Update the internal minimum size.\n    this._minimumSize = value;\n\n    // Update default size if larger than minimum size\n    if (value > this._defaultSize) {\n      this.defaultSize = value;\n    }\n  }\n\n  /**\n   * Get the default size of sections in the list.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get defaultSize(): number {\n    return this._defaultSize;\n  }\n\n  /**\n   * Set the default size of sections in the list.\n   *\n   * #### Complexity\n   * Linear on the number of resized sections.\n   */\n  set defaultSize(value: number) {\n    // Normalize the value.\n    value = Math.max(this._minimumSize, Math.floor(value));\n\n    // Bail early if the value does not change.\n    if (this._defaultSize === value) {\n      return;\n    }\n\n    // Compute the delta default size.\n    let delta = value - this._defaultSize;\n\n    // Update the internal default size.\n    this._defaultSize = value;\n\n    // Update the length.\n    this._length += delta * (this._count - this._sections.length);\n\n    // Bail early if there are no modified sections.\n    if (this._sections.length === 0) {\n      return;\n    }\n\n    // Recompute the offsets of the modified sections.\n    for (let i = 0, n = this._sections.length; i < n; ++i) {\n      // Look up the previous and current modified sections.\n      let prev = this._sections[i - 1];\n      let curr = this._sections[i];\n\n      // Adjust the offset for the current section.\n      if (prev) {\n        let count = curr.index - prev.index - 1;\n        curr.offset = prev.offset + prev.size + count * value;\n      } else {\n        curr.offset = curr.index * value;\n      }\n    }\n  }\n\n  /**\n   * Clamp a size to the minimum section size\n   *\n   * @param size - The size to clamp.\n   *\n   * @returns The size or the section minimum size, whichever is larger\n   */\n  clampSize(size: number): number {\n    return Math.max(this._minimumSize, Math.floor(size));\n  }\n\n  /**\n   * Find the index of the section which covers the given offset.\n   *\n   * @param offset - The offset of the section of interest.\n   *\n   * @returns The index of the section which covers the given offset,\n   *   or `-1` if the offset is out of range.\n   *\n   * #### Complexity\n   * Logarithmic on the number of resized sections.\n   */\n  indexOf(offset: number): number {\n    // Bail early if the offset is out of range.\n    if (offset < 0 || offset >= this._length || this._count === 0) {\n      return -1;\n    }\n\n    // Handle the simple case of no modified sections.\n    if (this._sections.length === 0) {\n      return Math.floor(offset / this._defaultSize);\n    }\n\n    // Find the modified section for the given offset.\n    let i = ArrayExt.lowerBound(this._sections, offset, Private.offsetCmp);\n\n    // Return the index of an exact match.\n    if (i < this._sections.length && this._sections[i].offset <= offset) {\n      return this._sections[i].index;\n    }\n\n    // Handle the case of no modified sections before the offset.\n    if (i === 0) {\n      return Math.floor(offset / this._defaultSize);\n    }\n\n    // Compute the index from the previous modified section.\n    let section = this._sections[i - 1];\n    let span = offset - (section.offset + section.size);\n    return section.index + Math.floor(span / this._defaultSize) + 1;\n  }\n\n  /**\n   * Find the offset of the section at the given index.\n   *\n   * @param index - The index of the section of interest.\n   *\n   * @returns The offset of the section at the given index, or `-1`\n   *   if the index is out of range.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Complexity\n   * Logarithmic on the number of resized sections.\n   */\n  offsetOf(index: number): number {\n    // Bail early if the index is out of range.\n    if (index < 0 || index >= this._count) {\n      return -1;\n    }\n\n    // Handle the simple case of no modified sections.\n    if (this._sections.length === 0) {\n      return index * this._defaultSize;\n    }\n\n    // Find the modified section for the given index.\n    let i = ArrayExt.lowerBound(this._sections, index, Private.indexCmp);\n\n    // Return the offset of an exact match.\n    if (i < this._sections.length && this._sections[i].index === index) {\n      return this._sections[i].offset;\n    }\n\n    // Handle the case of no modified sections before the index.\n    if (i === 0) {\n      return index * this._defaultSize;\n    }\n\n    // Compute the offset from the previous modified section.\n    let section = this._sections[i - 1];\n    let span = index - section.index - 1;\n    return section.offset + section.size + span * this._defaultSize;\n  }\n\n  /**\n   * Find the extent of the section at the given index.\n   *\n   * @param index - The index of the section of interest.\n   *\n   * @returns The extent of the section at the given index, or `-1`\n   *   if the index is out of range.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Complexity\n   * Logarithmic on the number of resized sections.\n   */\n  extentOf(index: number): number {\n    // Bail early if the index is out of range.\n    if (index < 0 || index >= this._count) {\n      return -1;\n    }\n\n    // Handle the simple case of no modified sections.\n    if (this._sections.length === 0) {\n      return (index + 1) * this._defaultSize - 1;\n    }\n\n    // Find the modified section for the given index.\n    let i = ArrayExt.lowerBound(this._sections, index, Private.indexCmp);\n\n    // Return the offset of an exact match.\n    if (i < this._sections.length && this._sections[i].index === index) {\n      return this._sections[i].offset + this._sections[i].size - 1;\n    }\n\n    // Handle the case of no modified sections before the index.\n    if (i === 0) {\n      return (index + 1) * this._defaultSize - 1;\n    }\n\n    // Compute the offset from the previous modified section.\n    let section = this._sections[i - 1];\n    let span = index - section.index;\n    return section.offset + section.size + span * this._defaultSize - 1;\n  }\n\n  /**\n   * Find the size of the section at the given index.\n   *\n   * @param index - The index of the section of interest.\n   *\n   * @returns The size of the section at the given index, or `-1`\n   *   if the index is out of range.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Complexity\n   * Logarithmic on the number of resized sections.\n   */\n  sizeOf(index: number): number {\n    // Bail early if the index is out of range.\n    if (index < 0 || index >= this._count) {\n      return -1;\n    }\n\n    // Handle the simple case of no modified sections.\n    if (this._sections.length === 0) {\n      return this._defaultSize;\n    }\n\n    // Find the modified section for the given index.\n    let i = ArrayExt.lowerBound(this._sections, index, Private.indexCmp);\n\n    // Return the size of an exact match.\n    if (i < this._sections.length && this._sections[i].index === index) {\n      return this._sections[i].size;\n    }\n\n    // Return the default size for all other cases.\n    return this._defaultSize;\n  }\n\n  /**\n   * Resize a section in the list.\n   *\n   * @param index - The index of the section to resize. This method\n   *   is a no-op if this value is out of range.\n   *\n   * @param size - The new size of the section. This value will be\n   *   clamped to an integer `>= 0`.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Complexity\n   * Linear on the number of resized sections.\n   */\n  resize(index: number, size: number): void {\n    // Bail early if the index is out of range.\n    if (index < 0 || index >= this._count) {\n      return;\n    }\n\n    // Clamp the size to an integer >= minimum size.\n    size = Math.max(this._minimumSize, Math.floor(size));\n\n    // Find the modified section for the given index.\n    let i = ArrayExt.lowerBound(this._sections, index, Private.indexCmp);\n\n    // Update or create the modified section as needed.\n    let delta: number;\n    if (i < this._sections.length && this._sections[i].index === index) {\n      let section = this._sections[i];\n      delta = size - section.size;\n      section.size = size;\n    } else if (i === 0) {\n      let offset = index * this._defaultSize;\n      ArrayExt.insert(this._sections, i, { index, offset, size });\n      delta = size - this._defaultSize;\n    } else {\n      let section = this._sections[i - 1];\n      let span = index - section.index - 1;\n      let offset = section.offset + section.size + span * this._defaultSize;\n      ArrayExt.insert(this._sections, i, { index, offset, size });\n      delta = size - this._defaultSize;\n    }\n\n    // Adjust the length.\n    this._length += delta;\n\n    // Update all modified sections after the resized section.\n    for (let j = i + 1, n = this._sections.length; j < n; ++j) {\n      this._sections[j].offset += delta;\n    }\n  }\n\n  /**\n   * Insert sections into the list.\n   *\n   * @param index - The index at which to insert the sections. This\n   *   value will be clamped to the bounds of the list.\n   *\n   * @param count - The number of sections to insert. This method\n   *   is a no-op if this value is `<= 0`.\n   *\n   * #### Undefined Behavior\n   * An `index` or `count` which is non-integral.\n   *\n   * #### Complexity\n   * Linear on the number of resized sections.\n   */\n  insert(index: number, count: number): void {\n    // Bail early if there are no sections to insert.\n    if (count <= 0) {\n      return;\n    }\n\n    // Clamp the index to the bounds of the list.\n    index = Math.max(0, Math.min(index, this._count));\n\n    // Add the new sections to the totals.\n    let span = count * this._defaultSize;\n    this._count += count;\n    this._length += span;\n\n    // Bail early if there are no modified sections to update.\n    if (this._sections.length === 0) {\n      return;\n    }\n\n    // Find the modified section for the given index.\n    let i = ArrayExt.lowerBound(this._sections, index, Private.indexCmp);\n\n    // Update all modified sections after the insert location.\n    for (let n = this._sections.length; i < n; ++i) {\n      let section = this._sections[i];\n      section.index += count;\n      section.offset += span;\n    }\n  }\n\n  /**\n   * Remove sections from the list.\n   *\n   * @param index - The index of the first section to remove. This\n   *   method is a no-op if this value is out of range.\n   *\n   * @param count - The number of sections to remove. This method\n   *   is a no-op if this value is `<= 0`.\n   *\n   * #### Undefined Behavior\n   * An `index` or `count` which is non-integral.\n   *\n   * #### Complexity\n   * Linear on the number of resized sections.\n   */\n  remove(index: number, count: number): void {\n    // Bail early if there is nothing to remove.\n    if (index < 0 || index >= this._count || count <= 0) {\n      return;\n    }\n\n    // Clamp the count to the bounds of the list.\n    count = Math.min(this._count - index, count);\n\n    // Handle the simple case of no modified sections to update.\n    if (this._sections.length === 0) {\n      this._count -= count;\n      this._length -= count * this._defaultSize;\n      return;\n    }\n\n    // Handle the simple case of removing all sections.\n    if (count === this._count) {\n      this._length = 0;\n      this._count = 0;\n      this._sections.length = 0;\n      return;\n    }\n\n    // Find the modified section for the start index.\n    let i = ArrayExt.lowerBound(this._sections, index, Private.indexCmp);\n\n    // Find the modified section for the end index.\n    let j = ArrayExt.lowerBound(this._sections, index + count, Private.indexCmp);\n\n    // Remove the relevant modified sections.\n    let removed = this._sections.splice(i, j - i);\n\n    // Compute the total removed span.\n    let span = (count - removed.length) * this._defaultSize;\n    for (let k = 0, n = removed.length; k < n; ++k) {\n      span += removed[k].size;\n    }\n\n    // Adjust the totals.\n    this._count -= count;\n    this._length -= span;\n\n    // Update all modified sections after the removed span.\n    for (let k = i, n = this._sections.length; k < n; ++k) {\n      let section = this._sections[k];\n      section.index -= count;\n      section.offset -= span;\n    }\n  }\n\n  /**\n   * Move sections within the list.\n   *\n   * @param index - The index of the first section to move. This method\n   *   is a no-op if this value is out of range.\n   *\n   * @param count - The number of sections to move. This method is a\n   *   no-op if this value is `<= 0`.\n   *\n   * @param destination - The destination index for the first section.\n   *   This value will be clamped to the allowable range.\n   *\n   * #### Undefined Behavior\n   * An `index`, `count`, or `destination` which is non-integral.\n   *\n   * #### Complexity\n   * Linear on the number of moved resized sections.\n   */\n  move(index: number, count: number, destination: number): void {\n    // Bail early if there is nothing to move.\n    if (index < 0 || index >= this._count || count <= 0) {\n      return;\n    }\n\n    // Handle the simple case of no modified sections.\n    if (this._sections.length === 0) {\n      return;\n    }\n\n    // Clamp the move count to the limit.\n    count = Math.min(count, this._count - index);\n\n    // Clamp the destination index to the limit.\n    destination = Math.min(Math.max(0, destination), this._count - count);\n\n    // Bail early if there is no effective move.\n    if (index === destination) {\n      return;\n    }\n\n    // Compute the first affected index.\n    let i1 = Math.min(index, destination);\n\n    // Look up the first affected modified section.\n    let k1 = ArrayExt.lowerBound(this._sections, i1, Private.indexCmp);\n\n    // Bail early if there are no affected modified sections.\n    if (k1 === this._sections.length) {\n      return;\n    }\n\n    // Compute the last affected index.\n    let i2 = Math.max(index + count - 1, destination + count - 1);\n\n    // Look up the last affected modified section.\n    let k2 = ArrayExt.upperBound(this._sections, i2, Private.indexCmp) - 1;\n\n    // Bail early if there are no affected modified sections.\n    if (k2 < k1) {\n      return;\n    }\n\n    // Compute the pivot index.\n    let pivot = destination < index ? index : index + count;\n\n    // Compute the count for each side of the pivot.\n    let count1 = pivot - i1;\n    let count2 = i2 - pivot + 1;\n\n    // Compute the span for each side of the pivot.\n    let span1 = count1 * this._defaultSize;\n    let span2 = count2 * this._defaultSize;\n\n    // Adjust the spans for the modified sections.\n    for (let j = k1; j <= k2; ++j) {\n      let section = this._sections[j];\n      if (section.index < pivot) {\n        span1 += section.size - this._defaultSize;\n      } else {\n        span2 += section.size - this._defaultSize;\n      }\n    }\n\n    // Look up the pivot section.\n    let k3 = ArrayExt.lowerBound(this._sections, pivot, Private.indexCmp);\n\n    // Rotate the modified sections if needed.\n    if (k1 <= k3 && k3 <= k2) {\n      ArrayExt.rotate(this._sections, k3 - k1, k1, k2);\n    }\n\n    // Adjust the modified section indices and offsets.\n    for (let j = k1; j <= k2; ++j) {\n      let section = this._sections[j];\n      if (section.index < pivot) {\n        section.index += count2;\n        section.offset += span2;\n      } else {\n        section.index -= count1;\n        section.offset -= span1;\n      }\n    }\n  }\n\n  /**\n   * Reset all modified sections to the default size.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  reset(): void {\n    this._sections.length = 0;\n    this._length = this._count * this._defaultSize;\n  }\n\n  /**\n   * Remove all sections from the list.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  clear(): void {\n    this._count = 0;\n    this._length = 0;\n    this._sections.length = 0;\n  }\n\n  private _count = 0;\n  private _length = 0;\n  private _minimumSize: number;\n  private _defaultSize: number;\n  private _sections: Private.Section[] = [];\n}\n\n\n/**\n * The namespace for the `SectionList` class statics.\n */\nexport\nnamespace SectionList {\n  /**\n   * An options object for initializing a section list.\n   */\n  export\n  interface IOptions {\n    /**\n     * The size of new sections added to the list.\n     */\n    defaultSize: number;\n\n    /**\n     * The minimum size of the section list.\n     */\n    minimumSize?: number;\n  }\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * An object which represents a modified section.\n   */\n  export\n  type Section = {\n    /**\n     * The index of the section.\n     *\n     * This is always `>= 0`.\n     */\n    index: number;\n\n    /**\n     * The offset of the section.\n     */\n    offset: number;\n\n    /**\n     * The size of the section.\n     *\n     * This is always `>= 0`.\n     */\n    size: number;\n  };\n\n  /**\n   * A comparison function for searching by offset.\n   */\n  export\n  function offsetCmp(section: Section, offset: number): number {\n    if (offset < section.offset) {\n      return 1;\n    }\n    if (section.offset + section.size <= offset) {\n      return -1;\n    }\n    return 0;\n  }\n\n  /**\n   * A comparison function for searching by index.\n   */\n  export\n  function indexCmp(section: Section, index: number): number {\n    return section.index - index;\n  }\n}\n","/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n    ICellEditor,\n    CellEditor,\n    CellDataType,\n    ICellEditOptions,\n    TextCellEditor,\n    NumberCellEditor,\n    IntegerCellEditor,\n    BooleanCellEditor,\n    DateCellEditor,\n    OptionCellEditor,\n    DynamicOptionCellEditor,\n    ICellEditResponse\n} from './celleditor';\n\nimport {\n  DataModel, MutableDataModel\n} from './datamodel';\n\n/**\n * A type alias for cell editor override identifier.\n */\nexport\ntype EditorOverrideIdentifier = CellDataType | DataModel.Metadata | 'default';\n\n/**\n * An object which manages cell editing.\n */\nexport\ninterface ICellEditorController {\n  /**\n   * Override cell editor for the cells matching the identifier.\n   *\n   * @param identifier - Cell identifier to use when matching cells.\n   * if identifier is a CellDataType, then cell matching is done using data type of the cell,\n   * if identifier is a Metadata, then partial match of the cell metadata with identifier is used for match,\n   * if identifier is 'default' then override is used as default editor when no other editor is found suitable\n   *\n   * @param editor - The cell editor to use or resolver to use to get an editor for matching cells.\n   */\n  setEditor(identifier: EditorOverrideIdentifier, editor: ICellEditor | Resolver): void;\n  /**\n   * Start editing a cell.\n   *\n   * @param cell - The object holding cell configuration data.\n   *\n   * @param options - The cell editing options.\n   */\n  edit(cell: CellEditor.CellConfig, options?: ICellEditOptions): boolean;\n  /**\n   * Cancel editing.\n   */\n  cancel(): void;\n}\n\n/**\n * A type alias for a cell editor config function.\n *\n * This type is used to compute a value from a cell config object.\n */\nexport\ntype ConfigFunc<T> = (config: CellEditor.CellConfig) => T;\n\n/**\n * A type alias for a cell editor config option.\n *\n * A config option can be a static value or a config function.\n */\nexport\ntype ConfigOption<T> = T | ConfigFunc<T>;\n\n/**\n * A type alias for a cell editor resolver function.\n */\nexport\ntype Resolver = ConfigFunc<ICellEditor | undefined>;\n\n/**\n * Resolve a config option for a cell editor.\n *\n * @param option - The config option to resolve.\n *\n * @param config - The cell config object.\n *\n * @returns The resolved value for the option.\n */\nexport\nfunction resolveOption<T>(option: ConfigOption<T>, config: CellEditor.CellConfig): T {\n  return typeof option === 'function' ? (option as ConfigFunc<T>)(config) : option;\n}\n\n/**\n * An object which manages cell editing. It stores editor overrides,\n * decides which editor to use for a cell, makes sure there is only one editor active.\n */\nexport\nclass CellEditorController implements ICellEditorController {\n  /**\n   * Override cell editor for the cells matching the identifier.\n   *\n   * @param identifier - Cell identifier to use when matching cells.\n   * if identifier is a CellDataType, then cell matching is done using data type of the cell,\n   * if identifier is a Metadata, then partial match of the cell metadata with identifier is used for match,\n   * if identifier is 'default' then override is used as default editor when no other editor is found suitable\n   *\n   * @param editor - The cell editor to use or resolver to use to get an editor for matching cells.\n   */\n  setEditor(identifier: EditorOverrideIdentifier, editor: ICellEditor | Resolver) {\n    if (typeof identifier === 'string') {\n      this._typeBasedOverrides.set(identifier, editor);\n    } else {\n      const key = this._metadataIdentifierToKey(identifier);\n      this._metadataBasedOverrides.set(key, [identifier, editor]);\n    }\n  }\n\n  /**\n   * Start editing a cell.\n   *\n   * @param cell - The object holding cell configuration data.\n   *\n   * @param options - The cell editing options.\n   */\n  edit(cell: CellEditor.CellConfig, options?: ICellEditOptions): boolean {\n    const grid = cell.grid;\n\n    if (!grid.editable) {\n      console.error('Grid cannot be edited!');\n      return false;\n    }\n\n    this.cancel();\n\n    this._cell = cell;\n\n    options = options || {};\n    options.onCommit = options.onCommit || this._onCommit.bind(this);\n    options.onCancel = options.onCancel || this._onCancel.bind(this);\n\n    // if an editor is passed in with options, then use it for editing\n    if (options.editor) {\n      this._editor = options.editor;\n      options.editor.edit(cell, options);\n      return true;\n    }\n\n    // choose an editor based on overrides / cell data type\n    const editor = this._getEditor(cell);\n    if (editor) {\n      this._editor = editor;\n      editor.edit(cell, options);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Cancel editing.\n   */\n  cancel(): void {\n    if (this._editor) {\n      this._editor.cancel();\n      this._editor = null;\n    }\n\n    this._cell = null;\n  }\n\n  private _onCommit(response: ICellEditResponse): void {\n    const cell = this._cell;\n\n    if (!cell) {\n      return;\n    }\n\n    const grid = cell.grid;\n    const dataModel = grid.dataModel as MutableDataModel;\n    dataModel.setData('body', cell.row, cell.column, response.value);\n    grid.viewport.node.focus();\n    if (response.cursorMovement !== 'none') {\n      grid.moveCursor(response.cursorMovement);\n      grid.scrollToCursor();\n    }\n  }\n\n  private _onCancel(): void {\n    if (!this._cell) {\n      return;\n    }\n\n    this._cell.grid.viewport.node.focus();\n  }\n\n  private _getDataTypeKey(cell: CellEditor.CellConfig): string {\n    const metadata = cell.grid.dataModel ? cell.grid.dataModel.metadata('body', cell.row, cell.column) : null;\n\n    if (!metadata) {\n      return 'default';\n    }\n\n    let key = '';\n\n    if (metadata) {\n      key = metadata.type;\n    }\n\n    if (metadata.constraint && metadata.constraint.enum) {\n      if (metadata.constraint.enum === 'dynamic') {\n        key += ':dynamic-option';\n      } else {\n        key += ':option';\n      }\n    }\n\n    return key;\n  }\n\n  private _objectToKey(object: any): string {\n    let str = '';\n    for (let key in object) {\n      const value = object[key];\n      if (typeof value === 'object') {\n        str += `${key}:${this._objectToKey(value)}`;\n      } else {\n        str += `[${key}:${value}]`;\n      }\n    }\n\n    return str;\n  }\n\n  private _metadataIdentifierToKey(metadata: DataModel.Metadata): string {\n    return this._objectToKey(metadata);\n  }\n\n  private _metadataMatchesIdentifier(metadata: DataModel.Metadata, identifier: DataModel.Metadata): boolean {\n    for (let key in identifier) {\n      if (!metadata.hasOwnProperty(key)) {\n        return false;\n      }\n\n      const identifierValue = identifier[key];\n      const metadataValue = metadata[key];\n      if (typeof identifierValue === 'object') {\n        if (!this._metadataMatchesIdentifier(metadataValue, identifierValue)) {\n          return false;\n        }\n      } else if (metadataValue !== identifierValue) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private _getMetadataBasedEditor(cell: CellEditor.CellConfig): ICellEditor | undefined {\n    let editorMatched: ICellEditor | undefined;\n    const metadata = cell.grid.dataModel!.metadata('body', cell.row, cell.column);\n    if (metadata) {\n      this._metadataBasedOverrides.forEach((value) => {\n        if (!editorMatched) {\n          let [identifier, editor] = value;\n          if (this._metadataMatchesIdentifier(metadata, identifier)) {\n            editorMatched = resolveOption(editor, cell);\n          }\n        }\n      });\n    }\n\n    return editorMatched;\n  }\n\n  /**\n   * Choose the most appropriate cell editor to use based on overrides / cell data type.\n   * \n   * If no match is found in overrides or based on cell data type, and if cell has a primitive\n   * data type then TextCellEditor is used as default cell editor. If 'default' cell editor\n   * is overridden, then it is used instead of TextCellEditor for default.\n   */\n  private _getEditor(cell: CellEditor.CellConfig): ICellEditor | undefined {\n    const dtKey = this._getDataTypeKey(cell);\n\n    // find an editor based on data type based override\n    if (this._typeBasedOverrides.has(dtKey)) {\n      const editor = this._typeBasedOverrides.get(dtKey);\n      return resolveOption(editor!, cell);\n    } // find an editor based on metadata match based override\n    else if (this._metadataBasedOverrides.size > 0) {\n      const editor = this._getMetadataBasedEditor(cell);\n      if (editor) {\n        return editor;\n      }\n    }\n\n    // choose an editor based on data type\n    switch (dtKey) {\n      case 'string':\n        return new TextCellEditor();\n      case 'number':\n        return new NumberCellEditor();\n      case 'integer':\n        return new IntegerCellEditor();\n      case 'boolean':\n        return new BooleanCellEditor();\n      case 'date':\n        return new DateCellEditor();\n      case 'string:option':\n      case 'number:option':\n      case 'integer:option':\n      case 'date:option':\n      case 'array:option':\n        return new OptionCellEditor();\n      case 'string:dynamic-option':\n      case 'number:dynamic-option':\n      case 'integer:dynamic-option':\n      case 'date:dynamic-option':\n        return new DynamicOptionCellEditor();\n    }\n\n    // if an override exists for 'default', then use it\n    if (this._typeBasedOverrides.has('default')) {\n      const editor = this._typeBasedOverrides.get('default');\n      return resolveOption(editor!, cell);\n    }\n\n    // if cell has a primitive data type then use TextCellEditor\n    const data = cell.grid.dataModel!.data('body', cell.row, cell.column);\n    if (!data || typeof data !== 'object') {\n      return new TextCellEditor();\n    }\n\n    // no suitable editor found for the cell\n    return undefined;\n  }\n\n  // active cell editor\n  private _editor: ICellEditor | null = null;\n  // active cell being edited\n  private _cell: CellEditor.CellConfig | null = null;\n  // cell editor overrides based on cell data type identifier\n  private _typeBasedOverrides: Map<string, ICellEditor | Resolver> = new Map();\n  // cell editor overrides based on partial metadata match\n  private _metadataBasedOverrides: Map<string, [DataModel.Metadata, ICellEditor | Resolver]> = new Map();\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  toArray\n} from '@lumino/algorithm';\n\nimport {\n  IDisposable\n} from '@lumino/disposable';\n\nimport {\n  ClipboardExt, ElementExt, Platform\n} from '@lumino/domutils';\n\nimport {\n  ConflatableMessage, IMessageHandler, Message, MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  GridLayout, ScrollBar, Widget\n} from '@lumino/widgets';\n\nimport {\n  CellRenderer\n} from './cellrenderer';\n\nimport {\n  DataModel, MutableDataModel\n} from './datamodel';\n\nimport {\n  GraphicsContext\n} from './graphicscontext';\n\nimport {\n  RendererMap\n} from './renderermap';\n\nimport {\n  SectionList\n} from './sectionlist';\n\nimport {\n  SelectionModel\n} from './selectionmodel';\n\nimport {\n  ICellEditorController,\n  CellEditorController\n} from './celleditorcontroller';\n\n\n/**\n * A widget which implements a high-performance tabular data grid.\n *\n * #### Notes\n * A data grid is implemented as a composition of child widgets. These\n * child widgets are considered an implementation detail. Manipulating\n * the child widgets of a data grid directly is undefined behavior.\n *\n * This class is not designed to be subclassed.\n */\nexport\nclass DataGrid extends Widget {\n  /**\n   * Construct a new data grid.\n   *\n   * @param options - The options for initializing the data grid.\n   */\n  constructor(options: DataGrid.IOptions = {}) {\n    super();\n    this.addClass('lm-DataGrid');\n    /* <DEPRECATED> */\n    this.addClass('p-DataGrid');\n    /* </DEPRECATED> */\n\n    // Parse the simple options.\n    this._style = options.style || DataGrid.defaultStyle;\n    this._stretchLastRow = options.stretchLastRow || false;\n    this._stretchLastColumn = options.stretchLastColumn || false;\n    this._headerVisibility = options.headerVisibility || 'all';\n    this._cellRenderers = options.cellRenderers || new RendererMap();\n    this._copyConfig = options.copyConfig || DataGrid.defaultCopyConfig;\n\n    // Connect to the renderer map changed signal.\n    this._cellRenderers.changed.connect(this._onRenderersChanged, this);\n\n    // Parse the default sizes.\n    let defaultSizes = options.defaultSizes || DataGrid.defaultSizes;\n    let minimumSizes = options.minimumSizes || DataGrid.minimumSizes;\n\n    // Set up the sections lists.\n    this._rowSections = new SectionList({ defaultSize: defaultSizes.rowHeight,\n      minimumSize: minimumSizes.rowHeight });\n    this._columnSections = new SectionList({ defaultSize: defaultSizes.columnWidth,\n      minimumSize: minimumSizes.columnWidth});\n    this._rowHeaderSections = new SectionList({ defaultSize: defaultSizes.rowHeaderWidth,\n      minimumSize: minimumSizes.rowHeaderWidth});\n    this._columnHeaderSections = new SectionList({ defaultSize: defaultSizes.columnHeaderHeight,\n      minimumSize: minimumSizes.columnHeaderHeight});\n\n    // Create the canvas, buffer, and overlay objects.\n    this._canvas = Private.createCanvas();\n    this._buffer = Private.createCanvas();\n    this._overlay = Private.createCanvas();\n\n    // Get the graphics contexts for the canvases.\n    this._canvasGC = this._canvas.getContext('2d')!;\n    this._bufferGC = this._buffer.getContext('2d')!;\n    this._overlayGC = this._overlay.getContext('2d')!;\n\n    // Set up the on-screen canvas.\n    this._canvas.style.position = 'absolute';\n    this._canvas.style.top = '0px';\n    this._canvas.style.left = '0px';\n    this._canvas.style.width = '0px';\n    this._canvas.style.height = '0px';\n\n    // Set up the on-screen overlay.\n    this._overlay.style.position = 'absolute';\n    this._overlay.style.top = '0px';\n    this._overlay.style.left = '0px';\n    this._overlay.style.width = '0px';\n    this._overlay.style.height = '0px';\n\n    // Create the internal widgets for the data grid.\n    this._viewport = new Widget();\n    this._viewport.node.tabIndex = -1;\n    this._viewport.node.style.outline = 'none';\n    this._vScrollBar = new ScrollBar({ orientation: 'vertical' });\n    this._hScrollBar = new ScrollBar({ orientation: 'horizontal' });\n    this._scrollCorner = new Widget();\n\n    this._editorController = new CellEditorController();\n\n    // Add the extra class names to the child widgets.\n    this._viewport.addClass('lm-DataGrid-viewport');\n    this._vScrollBar.addClass('lm-DataGrid-scrollBar');\n    this._hScrollBar.addClass('lm-DataGrid-scrollBar');\n    this._scrollCorner.addClass('lm-DataGrid-scrollCorner');\n    /* <DEPRECATED> */\n    this._viewport.addClass('p-DataGrid-viewport');\n    this._vScrollBar.addClass('p-DataGrid-scrollBar');\n    this._hScrollBar.addClass('p-DataGrid-scrollBar');\n    this._scrollCorner.addClass('p-DataGrid-scrollCorner');\n    /* </DEPRECATED> */\n\n    // Add the on-screen canvas to the viewport node.\n    this._viewport.node.appendChild(this._canvas);\n\n    // Add the on-screen overlay to the viewport node.\n    this._viewport.node.appendChild(this._overlay);\n\n    // Install the message hooks.\n    MessageLoop.installMessageHook(this._viewport, this);\n    MessageLoop.installMessageHook(this._hScrollBar, this);\n    MessageLoop.installMessageHook(this._vScrollBar, this);\n\n    // Hide the scroll bars and corner from the outset.\n    this._vScrollBar.hide();\n    this._hScrollBar.hide();\n    this._scrollCorner.hide();\n\n    // Connect to the scroll bar signals.\n    this._vScrollBar.thumbMoved.connect(this._onThumbMoved, this);\n    this._hScrollBar.thumbMoved.connect(this._onThumbMoved, this);\n    this._vScrollBar.pageRequested.connect(this._onPageRequested, this);\n    this._hScrollBar.pageRequested.connect(this._onPageRequested, this);\n    this._vScrollBar.stepRequested.connect(this._onStepRequested, this);\n    this._hScrollBar.stepRequested.connect(this._onStepRequested, this);\n\n    // Set the layout cell config for the child widgets.\n    GridLayout.setCellConfig(this._viewport, { row: 0, column: 0 });\n    GridLayout.setCellConfig(this._vScrollBar, { row: 0, column: 1 });\n    GridLayout.setCellConfig(this._hScrollBar, { row: 1, column: 0 });\n    GridLayout.setCellConfig(this._scrollCorner, { row: 1, column: 1 });\n\n    // Create the layout for the data grid.\n    let layout = new GridLayout({\n      rowCount: 2,\n      columnCount: 2,\n      rowSpacing: 0,\n      columnSpacing: 0,\n      fitPolicy: 'set-no-constraint'\n    });\n\n    // Set the stretch factors for the grid.\n    layout.setRowStretch(0, 1);\n    layout.setRowStretch(1, 0);\n    layout.setColumnStretch(0, 1);\n    layout.setColumnStretch(1, 0);\n\n    // Add the child widgets to the layout.\n    layout.addWidget(this._viewport);\n    layout.addWidget(this._vScrollBar);\n    layout.addWidget(this._hScrollBar);\n    layout.addWidget(this._scrollCorner);\n\n    // Install the layout on the data grid.\n    this.layout = layout;\n  }\n\n  /**\n   * Dispose of the resources held by the widgets.\n   */\n  dispose(): void {\n    // Release the mouse.\n    this._releaseMouse();\n\n    // Dispose of the handlers.\n    if (this._keyHandler) {\n      this._keyHandler.dispose();\n    }\n    if (this._mouseHandler) {\n      this._mouseHandler.dispose();\n    }\n    this._keyHandler = null;\n    this._mouseHandler = null;\n\n    // Clear the models.\n    this._dataModel = null;\n    this._selectionModel = null;\n\n    // Clear the section lists.\n    this._rowSections.clear();\n    this._columnSections.clear();\n    this._rowHeaderSections.clear();\n    this._columnHeaderSections.clear();\n\n    // Dispose of the base class.\n    super.dispose();\n  }\n\n  /**\n   * Get the data model for the data grid.\n   */\n  get dataModel(): DataModel | null {\n    return this._dataModel;\n  }\n\n  /**\n   * Set the data model for the data grid.\n   *\n   * #### Notes\n   * This will automatically remove the current selection model.\n   */\n  set dataModel(value: DataModel | null) {\n    // Do nothing if the model does not change.\n    if (this._dataModel === value) {\n      return;\n    }\n\n    // Release the mouse.\n    this._releaseMouse();\n\n    // Clear the selection model.\n    this.selectionModel = null;\n\n    // Disconnect the change handler from the old model.\n    if (this._dataModel) {\n      this._dataModel.changed.disconnect(this._onDataModelChanged, this);\n    }\n\n    // Connect the change handler for the new model.\n    if (value) {\n      value.changed.connect(this._onDataModelChanged, this);\n    }\n\n    // Update the internal model reference.\n    this._dataModel = value;\n\n    // Clear the section lists.\n    this._rowSections.clear();\n    this._columnSections.clear();\n    this._rowHeaderSections.clear();\n    this._columnHeaderSections.clear();\n\n    // Populate the section lists.\n    if (value) {\n      this._rowSections.insert(0, value.rowCount('body'));\n      this._columnSections.insert(0, value.columnCount('body'));\n      this._rowHeaderSections.insert(0, value.columnCount('row-header'));\n      this._columnHeaderSections.insert(0, value.rowCount('column-header'));\n    }\n\n    // Reset the scroll position.\n    this._scrollX = 0;\n    this._scrollY = 0;\n\n    // Sync the viewport.\n    this._syncViewport();\n  }\n\n  /**\n   * Get the selection model for the data grid.\n   */\n  get selectionModel(): SelectionModel | null {\n    return this._selectionModel;\n  }\n\n  /**\n   * Set the selection model for the data grid.\n   */\n  set selectionModel(value: SelectionModel | null) {\n    // Do nothing if the selection model does not change.\n    if (this._selectionModel === value) {\n      return;\n    }\n\n    // Release the mouse.\n    this._releaseMouse();\n\n    // Ensure the data models are a match.\n    if (value && value.dataModel !== this._dataModel) {\n      throw new Error('SelectionModel.dataModel !== DataGrid.dataModel');\n    }\n\n    // Disconnect the change handler from the old model.\n    if (this._selectionModel) {\n      this._selectionModel.changed.disconnect(this._onSelectionsChanged, this);\n    }\n\n    // Connect the change handler for the new model.\n    if (value) {\n      value.changed.connect(this._onSelectionsChanged, this);\n    }\n\n    // Update the internal selection model reference.\n    this._selectionModel = value;\n\n    // Schedule a repaint of the overlay.\n    this.repaintOverlay();\n  }\n\n  /**\n   * Get the key handler for the data grid.\n   */\n  get keyHandler(): DataGrid.IKeyHandler | null {\n    return this._keyHandler;\n  }\n\n  /**\n   * Set the key handler for the data grid.\n   */\n  set keyHandler(value: DataGrid.IKeyHandler | null) {\n    this._keyHandler = value;\n  }\n\n  /**\n   * Get the mouse handler for the data grid.\n   */\n  get mouseHandler(): DataGrid.IMouseHandler | null {\n    return this._mouseHandler;\n  }\n\n  /**\n   * Set the mouse handler for the data grid.\n   */\n  set mouseHandler(value: DataGrid.IMouseHandler | null) {\n    // Bail early if the mouse handler does not change.\n    if (this._mouseHandler === value) {\n      return;\n    }\n\n    // Release the mouse.\n    this._releaseMouse();\n\n    // Update the internal mouse handler.\n    this._mouseHandler = value;\n  }\n\n  /**\n   * Get the style for the data grid.\n   */\n  get style(): DataGrid.Style {\n    return this._style;\n  }\n\n  /**\n   * Set the style for the data grid.\n   */\n  set style(value: DataGrid.Style) {\n    // Bail if the style does not change.\n    if (this._style === value) {\n      return;\n    }\n\n    // Update the internal style.\n    this._style = { ...value };\n\n    // Schedule a repaint of the content.\n    this.repaintContent();\n\n    // Schedule a repaint of the overlay.\n    this.repaintOverlay();\n  }\n\n  /**\n   * Get the cell renderer map for the data grid.\n   */\n  get cellRenderers(): RendererMap {\n    return this._cellRenderers;\n  }\n\n  /**\n   * Set the cell renderer map for the data grid.\n   */\n  set cellRenderers(value: RendererMap) {\n    // Bail if the renderer map does not change.\n    if (this._cellRenderers === value) {\n      return;\n    }\n\n    // Disconnect the old map.\n    this._cellRenderers.changed.disconnect(this._onRenderersChanged, this);\n\n    // Connect the new map.\n    value.changed.connect(this._onRenderersChanged, this);\n\n    // Update the internal renderer map.\n    this._cellRenderers = value;\n\n    // Schedule a repaint of the grid content.\n    this.repaintContent();\n  }\n\n  /**\n   * Get the header visibility for the data grid.\n   */\n  get headerVisibility(): DataGrid.HeaderVisibility {\n    return this._headerVisibility;\n  }\n\n  /**\n   * Set the header visibility for the data grid.\n   */\n  set headerVisibility(value: DataGrid.HeaderVisibility) {\n    // Bail if the visibility does not change.\n    if (this._headerVisibility === value) {\n      return;\n    }\n\n    // Update the internal visibility.\n    this._headerVisibility = value;\n\n    // Sync the viewport.\n    this._syncViewport();\n  }\n\n  /**\n   * Get the default sizes for the various sections of the data grid.\n   */\n  get defaultSizes(): DataGrid.DefaultSizes {\n    let rowHeight = this._rowSections.defaultSize;\n    let columnWidth = this._columnSections.defaultSize;\n    let rowHeaderWidth = this._rowHeaderSections.defaultSize;\n    let columnHeaderHeight = this._columnHeaderSections.defaultSize;\n    return { rowHeight, columnWidth, rowHeaderWidth, columnHeaderHeight };\n  }\n\n  /**\n   * Set the default sizes for the various sections of the data grid.\n   */\n  set defaultSizes(value: DataGrid.DefaultSizes) {\n    // Update the section default sizes.\n    this._rowSections.defaultSize = value.rowHeight;\n    this._columnSections.defaultSize = value.columnWidth;\n    this._rowHeaderSections.defaultSize = value.rowHeaderWidth;\n    this._columnHeaderSections.defaultSize = value.columnHeaderHeight;\n\n    // Sync the viewport.\n    this._syncViewport();\n  }\n\n  /**\n   * Get the minimum sizes for the various sections of the data grid.\n   */\n  get minimumSizes(): DataGrid.DefaultSizes {\n    let rowHeight = this._rowSections.minimumSize;\n    let columnWidth = this._columnSections.minimumSize;\n    let rowHeaderWidth = this._rowHeaderSections.minimumSize;\n    let columnHeaderHeight = this._columnHeaderSections.minimumSize;\n    return { rowHeight, columnWidth, rowHeaderWidth, columnHeaderHeight };\n  }\n\n  /**\n   * Set the minimum sizes for the various sections of the data grid.\n   */\n  set minimumSizes(value: DataGrid.DefaultSizes) {\n    // Update the section default sizes.\n    this._rowSections.minimumSize = value.rowHeight;\n    this._columnSections.minimumSize = value.columnWidth;\n    this._rowHeaderSections.minimumSize = value.rowHeaderWidth;\n    this._columnHeaderSections.minimumSize = value.columnHeaderHeight;\n\n    // Sync the viewport.\n    this._syncViewport();\n  }\n\n  /**\n   * Get the copy configuration for the data grid.\n   */\n  get copyConfig(): DataGrid.CopyConfig {\n    return this._copyConfig;\n  }\n\n  /**\n   * Set the copy configuration for the data grid.\n   */\n  set copyConfig(value: DataGrid.CopyConfig) {\n    this._copyConfig = value;\n  }\n\n  /**\n   * Get whether the last row is stretched.\n   */\n  get stretchLastRow(): boolean {\n    return this._stretchLastRow;\n  }\n\n  /**\n   * Set whether the last row is stretched.\n   */\n  set stretchLastRow(value: boolean) {\n    // Bail early if the value does not change.\n    if (value === this._stretchLastRow) {\n      return;\n    }\n\n    // Update the internal value.\n    this._stretchLastRow = value;\n\n    // Sync the viewport\n    this._syncViewport();\n  }\n\n  /**\n   * Get whether the last column is stretched.\n   */\n  get stretchLastColumn(): boolean {\n    return this._stretchLastColumn;\n  }\n\n  /**\n   * Set whether the last column is stretched.\n   */\n  set stretchLastColumn(value: boolean) {\n    // Bail early if the value does not change.\n    if (value === this._stretchLastColumn) {\n      return;\n    }\n\n    // Update the internal value.\n    this._stretchLastColumn = value;\n\n    // Sync the viewport\n    this._syncViewport();\n  }\n\n  /**\n   * The virtual width of the row headers.\n   */\n  get headerWidth(): number {\n    if (this._headerVisibility === 'none') {\n      return 0;\n    }\n    if (this._headerVisibility === 'column') {\n      return 0;\n    }\n    return this._rowHeaderSections.length;\n  }\n\n  /**\n   * The virtual height of the column headers.\n   */\n  get headerHeight(): number {\n    if (this._headerVisibility === 'none') {\n      return 0;\n    }\n    if (this._headerVisibility === 'row') {\n      return 0;\n    }\n    return this._columnHeaderSections.length;\n  }\n\n  /**\n   * The virtual width of the grid body.\n   *\n   * #### Notes\n   * This does *not* account for a stretched last column.\n   */\n  get bodyWidth(): number {\n    return this._columnSections.length;\n  }\n\n  /**\n   * The virtual height of the grid body.\n   *\n   * #### Notes\n   * This does *not* account for a stretched last row.\n   */\n  get bodyHeight(): number {\n    return this._rowSections.length;\n  }\n\n  /**\n   * The virtual width of the entire grid.\n   *\n   * #### Notes\n   * This does *not* account for a stretched last column.\n   */\n  get totalWidth(): number {\n    return this.headerWidth + this.bodyWidth;\n  }\n\n  /**\n   * The virtual height of the entire grid.\n   *\n   * #### Notes\n   * This does *not* account for a stretched last row.\n   */\n  get totalHeight(): number {\n    return this.headerHeight + this.bodyHeight;\n  }\n\n  /**\n   * The actual width of the viewport.\n   */\n  get viewportWidth(): number {\n    return this._viewportWidth;\n  }\n\n  /**\n   * The actual height of the viewport.\n   */\n  get viewportHeight(): number {\n    return this._viewportHeight;\n  }\n\n  /**\n   * The width of the visible portion of the grid body.\n   */\n  get pageWidth(): number {\n    return Math.max(0, this.viewportWidth - this.headerWidth);\n  }\n\n  /**\n   * The height of the visible portion of the grid body.\n   */\n  get pageHeight(): number {\n    return Math.max(0, this.viewportHeight - this.headerHeight);\n  }\n\n  /**\n   * The current scroll X position of the viewport.\n   */\n  get scrollX(): number {\n    return this._hScrollBar.value;\n  }\n\n  /**\n   * The current scroll Y position of the viewport.\n   */\n  get scrollY(): number {\n    return this._vScrollBar.value;\n  }\n\n  /**\n   * The maximum scroll X position for the grid.\n   */\n  get maxScrollX(): number {\n    return Math.max(0, this.bodyWidth - this.pageWidth - 1);\n  }\n\n  /**\n   * The maximum scroll Y position for the grid.\n   */\n  get maxScrollY(): number {\n    return Math.max(0, this.bodyHeight - this.pageHeight - 1);\n  }\n\n  /**\n   * The viewport widget for the data grid.\n   */\n  get viewport(): Widget {\n    return this._viewport;\n  }\n\n  /**\n   * The cell editor controller object for the data grid.\n   */\n  get editorController(): ICellEditorController | null {\n    return this._editorController;\n  }\n\n  set editorController(controller: ICellEditorController | null) {\n    this._editorController = controller;\n  }\n\n  /**\n   * Whether the cell editing is enabled for the data grid.\n   */\n  get editingEnabled(): boolean {\n    return this._editingEnabled;\n  }\n\n  set editingEnabled(enabled: boolean) {\n    this._editingEnabled = enabled;\n  }\n\n  /**\n   * Whether the grid cells are editable.\n   * \n   * `editingEnabled` flag must be on and grid must have required\n   * selection model, editor controller and data model properties.\n   */\n  get editable(): boolean {\n    return this._editingEnabled &&\n      this._selectionModel !== null &&\n      this._editorController !== null &&\n      this.dataModel instanceof MutableDataModel;\n  }\n\n  /**\n   * The rendering context for painting the data grid.\n   */\n  protected get canvasGC(): CanvasRenderingContext2D {\n    return this._canvasGC;\n  }\n\n  /**\n   * The row sections of the data grid.\n   */\n  protected get rowSections(): SectionList {\n    return this._rowSections;\n  }\n\n  /**\n   * The column sections of the data grid. \n   */\n  protected get columnSections(): SectionList {\n    return this._columnSections;\n  }\n\n  /**\n   * The row header sections of the data grid.\n   */\n  protected get rowHeaderSections(): SectionList {\n    return this._rowHeaderSections;\n  }\n\n  /**\n   * The column header sections of the data grid.\n   */\n  protected get columnHeaderSections(): SectionList {\n    return this._columnHeaderSections;\n  }\n\n  /**\n   * Scroll the grid to the specified row.\n   *\n   * @param row - The row index of the cell.\n   *\n   * #### Notes\n   * This is a no-op if the row is already visible.\n   */\n  scrollToRow(row: number): void {\n    // Fetch the row count.\n    let nr = this._rowSections.count;\n\n    // Bail early if there is no content.\n    if (nr === 0) {\n      return;\n    }\n\n    // Floor the row index.\n    row = Math.floor(row);\n\n    // Clamp the row index.\n    row = Math.max(0, Math.min(row, nr - 1));\n\n    // Get the virtual bounds of the row.\n    let y1 = this._rowSections.offsetOf(row);\n    let y2 = this._rowSections.extentOf(row);\n\n    // Get the virtual bounds of the viewport.\n    let vy1 = this._scrollY;\n    let vy2 = this._scrollY + this.pageHeight - 1;\n\n    // Set up the delta variables.\n    let dy = 0;\n\n    // Compute the delta Y scroll.\n    if (y1 < vy1) {\n      dy = y1 - vy1 - 10;\n    } else if (y2 > vy2) {\n      dy = y2 - vy2 + 10;\n    }\n\n    // Bail early if no scroll is needed.\n    if (dy === 0) {\n      return;\n    }\n\n    // Scroll by the computed delta.\n    this.scrollBy(0, dy);\n  }\n\n  /**\n   * Scroll the grid to the specified column.\n   *\n   * @param column - The column index of the cell.\n   *\n   * #### Notes\n   * This is a no-op if the column is already visible.\n   */\n  scrollToColumn(column: number): void {\n    // Fetch the column count.\n    let nc = this._columnSections.count;\n\n    // Bail early if there is no content.\n    if (nc === 0) {\n      return;\n    }\n\n    // Floor the column index.\n    column = Math.floor(column);\n\n    // Clamp the column index.\n    column = Math.max(0, Math.min(column, nc - 1));\n\n    // Get the virtual bounds of the column.\n    let x1 = this._columnSections.offsetOf(column);\n    let x2 = this._columnSections.extentOf(column);\n\n    // Get the virtual bounds of the viewport.\n    let vx1 = this._scrollX;\n    let vx2 = this._scrollX + this.pageWidth - 1;\n\n    // Set up the delta variables.\n    let dx = 0;\n\n    // Compute the delta X scroll.\n    if (x1 < vx1) {\n      dx = x1 - vx1 - 10;\n    } else if (x2 > vx2) {\n      dx = x2 - vx2 + 10;\n    }\n\n    // Bail early if no scroll is needed.\n    if (dx === 0) {\n      return;\n    }\n\n    // Scroll by the computed delta.\n    this.scrollBy(dx, 0);\n  }\n\n  /**\n   * Scroll the grid to the specified cell.\n   *\n   * @param row - The row index of the cell.\n   *\n   * @param column - The column index of the cell.\n   *\n   * #### Notes\n   * This is a no-op if the cell is already visible.\n   */\n  scrollToCell(row: number, column: number): void {\n    // Fetch the row and column count.\n    let nr = this._rowSections.count;\n    let nc = this._columnSections.count;\n\n    // Bail early if there is no content.\n    if (nr === 0 || nc === 0) {\n      return;\n    }\n\n    // Floor the cell index.\n    row = Math.floor(row);\n    column = Math.floor(column);\n\n    // Clamp the cell index.\n    row = Math.max(0, Math.min(row, nr - 1));\n    column = Math.max(0, Math.min(column, nc - 1));\n\n    // Get the virtual bounds of the cell.\n    let x1 = this._columnSections.offsetOf(column);\n    let x2 = this._columnSections.extentOf(column);\n    let y1 = this._rowSections.offsetOf(row);\n    let y2 = this._rowSections.extentOf(row);\n\n    // Get the virtual bounds of the viewport.\n    let vx1 = this._scrollX;\n    let vx2 = this._scrollX + this.pageWidth - 1;\n    let vy1 = this._scrollY;\n    let vy2 = this._scrollY + this.pageHeight - 1;\n\n    // Set up the delta variables.\n    let dx = 0;\n    let dy = 0;\n\n    // Compute the delta X scroll.\n    if (x1 < vx1) {\n      dx = x1 - vx1 - 10;\n    } else if (x2 > vx2) {\n      dx = x2 - vx2 + 10;\n    }\n\n    // Compute the delta Y scroll.\n    if (y1 < vy1) {\n      dy = y1 - vy1 - 10;\n    } else if (y2 > vy2) {\n      dy = y2 - vy2 + 10;\n    }\n\n    // Bail early if no scroll is needed.\n    if (dx === 0 && dy === 0) {\n      return;\n    }\n\n    // Scroll by the computed delta.\n    this.scrollBy(dx, dy);\n  }\n\n  /**\n   * Move cursor down/up/left/right while making sure it remains\n   * within the bounds of selected rectangles\n   * \n   * @param direction - The direction of the movement.\n   */\n  moveCursor(direction: SelectionModel.CursorMoveDirection): void {\n    // Bail early if there is no selection\n    if (!this.dataModel ||\n      !this._selectionModel ||\n      this._selectionModel.isEmpty) {\n      return;\n    }\n\n    const iter = this._selectionModel.selections();\n    const onlyOne = iter.next() && !iter.next();\n\n    // if there is a single selection that is a single cell selection\n    // then move the selection and cursor within grid bounds\n    if (onlyOne) {\n      const currentSel = this._selectionModel.currentSelection()!;\n      if (currentSel.r1 === currentSel.r2 &&\n        currentSel.c1 === currentSel.c2\n      ) {\n        const dr = direction === 'down' ? 1 : direction === 'up' ? -1 : 0;\n        const dc = direction === 'right' ? 1 : direction === 'left' ? -1 : 0;\n        let newRow = currentSel.r1 + dr;\n        let newColumn = currentSel.c1 + dc;\n        const rowCount = this.dataModel.rowCount('body');\n        const columnCount = this.dataModel.columnCount('body');\n        if (newRow >= rowCount) {\n          newRow = 0;\n          newColumn += 1;\n        } else if (newRow === -1) {\n          newRow = rowCount - 1;\n          newColumn -= 1;\n        }\n        if (newColumn >= columnCount) {\n          newColumn = 0;\n          newRow += 1;\n          if (newRow >= rowCount) {\n            newRow = 0;\n          }\n        } else if (newColumn === -1) {\n          newColumn = columnCount - 1;\n          newRow -= 1;\n          if (newRow === -1) {\n            newRow = rowCount - 1;\n          }\n        }\n\n        this._selectionModel.select({\n          r1: newRow, c1: newColumn,\n          r2: newRow, c2: newColumn,\n          cursorRow: newRow, cursorColumn: newColumn,\n          clear: 'all'\n        });\n\n        return;\n      }\n    }\n\n    // if there are multiple selections, move cursor\n    // within selection rectangles\n    this._selectionModel.moveCursorWithinSelections(direction);\n  }\n\n  /**\n   * Scroll the grid to the current cursor position.\n   *\n   * #### Notes\n   * This is a no-op if the cursor is already visible or\n   * if there is no selection model installed on the grid.\n   */\n  scrollToCursor(): void {\n    // Bail early if there is no selection model.\n    if (!this._selectionModel) {\n      return;\n    }\n\n    // Fetch the cursor row and column.\n    let row = this._selectionModel.cursorRow;\n    let column = this._selectionModel.cursorColumn;\n\n    // Scroll to the cursor cell.\n    this.scrollToCell(row, column);\n  }\n\n  /**\n   * Scroll the viewport by the specified amount.\n   *\n   * @param dx - The X scroll amount.\n   *\n   * @param dy - The Y scroll amount.\n   */\n  scrollBy(dx: number, dy: number): void {\n    this.scrollTo(this.scrollX + dx, this.scrollY + dy);\n  }\n\n  /**\n   * Scroll the viewport by one page.\n   *\n   * @param dir - The desired direction of the scroll.\n   */\n  scrollByPage(dir: 'up' | 'down' | 'left' | 'right'): void {\n    let dx = 0;\n    let dy = 0;\n    switch (dir) {\n    case 'up':\n      dy = -this.pageHeight;\n      break;\n    case 'down':\n      dy = this.pageHeight;\n      break;\n    case 'left':\n      dx = -this.pageWidth;\n      break;\n    case 'right':\n      dx = this.pageWidth;\n      break;\n    default:\n      throw 'unreachable';\n    }\n    this.scrollTo(this.scrollX + dx, this.scrollY + dy);\n  }\n\n  /**\n   * Scroll the viewport by one cell-aligned step.\n   *\n   * @param dir - The desired direction of the scroll.\n   */\n  scrollByStep(dir: 'up' | 'down' | 'left' | 'right'): void {\n    let r: number;\n    let c: number;\n    let x = this.scrollX;\n    let y = this.scrollY;\n    let rows = this._rowSections;\n    let columns = this._columnSections;\n    switch (dir) {\n    case 'up':\n      r = rows.indexOf(y - 1);\n      y = r < 0 ? y : rows.offsetOf(r);\n      break;\n    case 'down':\n      r = rows.indexOf(y);\n      y = r < 0 ? y : rows.offsetOf(r) + rows.sizeOf(r);\n      break;\n    case 'left':\n      c = columns.indexOf(x - 1);\n      x = c < 0 ? x : columns.offsetOf(c);\n      break;\n    case 'right':\n      c = columns.indexOf(x);\n      x = c < 0 ? x : columns.offsetOf(c) + columns.sizeOf(c);\n      break;\n    default:\n      throw 'unreachable';\n    }\n    this.scrollTo(x, y);\n  }\n\n  /**\n   * Scroll to the specified offset position.\n   *\n   * @param x - The desired X position.\n   *\n   * @param y - The desired Y position.\n   */\n  scrollTo(x: number, y: number): void {\n    // Floor and clamp the position to the allowable range.\n    x = Math.max(0, Math.min(Math.floor(x), this.maxScrollX));\n    y = Math.max(0, Math.min(Math.floor(y), this.maxScrollY));\n\n    // Update the scroll bar values with the desired position.\n    this._hScrollBar.value = x;\n    this._vScrollBar.value = y;\n\n    // Post a scroll request message to the viewport.\n    MessageLoop.postMessage(this._viewport, Private.ScrollRequest);\n  }\n\n  /**\n   * Get the row count for a particular region in the data grid.\n   *\n   * @param region - The row region of interest.\n   *\n   * @returns The row count for the specified region.\n   */\n  rowCount(region: DataModel.RowRegion): number {\n    let count: number;\n    if (region === 'body') {\n      count = this._rowSections.count;\n    } else {\n      count = this._columnHeaderSections.count;\n    }\n    return count;\n  }\n\n  /**\n   * Get the column count for a particular region in the data grid.\n   *\n   * @param region - The column region of interest.\n   *\n   * @returns The column count for the specified region.\n   */\n  columnCount(region: DataModel.ColumnRegion): number {\n    let count: number;\n    if (region === 'body') {\n      count = this._columnSections.count;\n    } else {\n      count = this._rowHeaderSections.count;\n    }\n    return count;\n  }\n\n  /**\n   * Get the row at a virtual offset in the data grid.\n   *\n   * @param region - The region which holds the row of interest.\n   *\n   * @param offset - The virtual offset of the row of interest.\n   *\n   * @returns The index of the row, or `-1` if the offset is out of range.\n   *\n   * #### Notes\n   * This method accounts for a stretched last row.\n   */\n  rowAt(region: DataModel.RowRegion, offset: number): number {\n    // Bail early if the offset is negative.\n    if (offset < 0) {\n      return -1;\n    }\n\n    // Return early for the column header region.\n    if (region === 'column-header') {\n      return this._columnHeaderSections.indexOf(offset);\n    }\n\n    // Fetch the index.\n    let index = this._rowSections.indexOf(offset);\n\n    // Return early if the section is found.\n    if (index >= 0) {\n      return index;\n    }\n\n    // Bail early if the last row is not stretched.\n    if (!this._stretchLastRow) {\n      return -1;\n    }\n\n    // Fetch the geometry.\n    let bh = this.bodyHeight;\n    let ph = this.pageHeight;\n\n    // Bail early if no row stretching is required.\n    if (ph <= bh) {\n      return -1;\n    }\n\n    // Bail early if the offset is out of bounds.\n    if (offset >= ph) {\n      return -1;\n    }\n\n    // Otherwise, return the last row.\n    return this._rowSections.count - 1;\n  }\n\n  /**\n   * Get the column at a virtual offset in the data grid.\n   *\n   * @param region - The region which holds the column of interest.\n   *\n   * @param offset - The virtual offset of the column of interest.\n   *\n   * @returns The index of the column, or `-1` if the offset is out of range.\n   *\n   * #### Notes\n   * This method accounts for a stretched last column.\n   */\n  columnAt(region: DataModel.ColumnRegion, offset: number): number {\n    if (offset < 0) {\n      return -1;\n    }\n\n    // Return early for the row header region.\n    if (region === 'row-header') {\n      return this._rowHeaderSections.indexOf(offset);\n    }\n\n    // Fetch the index.\n    let index = this._columnSections.indexOf(offset);\n\n    // Return early if the section is found.\n    if (index >= 0) {\n      return index;\n    }\n\n    // Bail early if the last column is not stretched.\n    if (!this._stretchLastColumn) {\n      return -1;\n    }\n\n    // Fetch the geometry.\n    let bw = this.bodyWidth;\n    let pw = this.pageWidth;\n\n    // Bail early if no column stretching is required.\n    if (pw <= bw) {\n      return -1;\n    }\n\n    // Bail early if the offset is out of bounds.\n    if (offset >= pw) {\n      return -1;\n    }\n\n    // Otherwise, return the last column.\n    return this._columnSections.count - 1;\n  }\n\n  /**\n   * Get the offset of a row in the data grid.\n   *\n   * @param region - The region which holds the row of interest.\n   *\n   * @param index - The index of the row of interest.\n   *\n   * @returns The offset of the row, or `-1` if the index is out of range.\n   *\n   * #### Notes\n   * A stretched last row has no effect on the return value.\n   */\n  rowOffset(region: DataModel.RowRegion, index: number): number {\n    let offset: number;\n    if (region === 'body') {\n      offset = this._rowSections.offsetOf(index);\n    } else {\n      offset = this._columnHeaderSections.offsetOf(index);\n    }\n    return offset;\n  }\n\n  /**\n   * Get the offset of a column in the data grid.\n   *\n   * @param region - The region which holds the column of interest.\n   *\n   * @param index - The index of the column of interest.\n   *\n   * @returns The offset of the column, or `-1` if the index is out of range.\n   *\n   * #### Notes\n   * A stretched last column has no effect on the return value.\n   */\n  columnOffset(region: DataModel.ColumnRegion, index: number): number {\n    let offset: number;\n    if (region === 'body') {\n      offset = this._columnSections.offsetOf(index);\n    } else {\n      offset = this._rowHeaderSections.offsetOf(index);\n    }\n    return offset;\n  }\n\n  /**\n   * Get the size of a row in the data grid.\n   *\n   * @param region - The region which holds the row of interest.\n   *\n   * @param index - The index of the row of interest.\n   *\n   * @returns The size of the row, or `-1` if the index is out of range.\n   *\n   * #### Notes\n   * This method accounts for a stretched last row.\n   */\n  rowSize(region: DataModel.RowRegion, index: number): number {\n    // Return early for the column header region.\n    if (region === 'column-header') {\n      return this._columnHeaderSections.sizeOf(index);\n    }\n\n    // Fetch the row size.\n    let size = this._rowSections.sizeOf(index);\n\n    // Bail early if the index is out of bounds.\n    if (size < 0) {\n      return size;\n    }\n\n    // Return early if the last row is not stretched.\n    if (!this._stretchLastRow) {\n      return size;\n    }\n\n    // Return early if its not the last row.\n    if (index < this._rowSections.count - 1) {\n      return size;\n    }\n\n    // Fetch the geometry.\n    let bh = this.bodyHeight;\n    let ph = this.pageHeight;\n\n    // Return early if no stretching is needed.\n    if (ph <= bh) {\n      return size;\n    }\n\n    // Return the adjusted size.\n    return size + (ph - bh);\n  }\n\n  /**\n   * Get the size of a column in the data grid.\n   *\n   * @param region - The region which holds the column of interest.\n   *\n   * @param index - The index of the column of interest.\n   *\n   * @returns The size of the column, or `-1` if the index is out of range.\n   *\n   * #### Notes\n   * This method accounts for a stretched last column.\n   */\n  columnSize(region: DataModel.ColumnRegion, index: number): number {\n    // Return early for the row header region.\n    if (region === 'row-header') {\n      return this._rowHeaderSections.sizeOf(index);\n    }\n\n    // Fetch the column size.\n    let size = this._columnSections.sizeOf(index);\n\n    // Bail early if the index is out of bounds.\n    if (size < 0) {\n      return size;\n    }\n\n    // Return early if the last column is not stretched.\n    if (!this._stretchLastColumn) {\n      return size;\n    }\n\n    // Return early if its not the last column.\n    if (index < this._columnSections.count - 1) {\n      return size;\n    }\n\n    // Fetch the geometry.\n    let bw = this.bodyWidth;\n    let pw = this.pageWidth;\n\n    // Return early if no stretching is needed.\n    if (pw <= bw) {\n      return size;\n    }\n\n    // Return the adjusted size.\n    return size + (pw - bw);\n  }\n\n  /**\n   * Resize a row in the data grid.\n   *\n   * @param region - The region which holds the row of interest.\n   *\n   * @param index - The index of the row of interest.\n   *\n   * @param size - The desired size of the row.\n   */\n  resizeRow(region: DataModel.RowRegion, index: number, size: number): void {\n    let msg = new Private.RowResizeRequest(region, index, size);\n    MessageLoop.postMessage(this._viewport, msg);\n  }\n\n  /**\n   * Resize a column in the data grid.\n   *\n   * @param region - The region which holds the column of interest.\n   *\n   * @param index - The index of the column of interest.\n   *\n   * @param size - The desired size of the column.\n   */\n  resizeColumn(region: DataModel.ColumnRegion, index: number, size: number): void {\n    let msg = new Private.ColumnResizeRequest(region, index, size);\n    MessageLoop.postMessage(this._viewport, msg);\n  }\n\n  /**\n   * Reset modified rows to their default size.\n   *\n   * @param region - The row region of interest.\n   */\n  resetRows(region: DataModel.RowRegion | 'all'): void {\n    switch (region) {\n    case 'all':\n      this._rowSections.reset();\n      this._columnHeaderSections.reset();\n      break;\n    case 'body':\n      this._rowSections.reset();\n      break;\n    case 'column-header':\n      this._columnHeaderSections.reset();\n      break;\n    default:\n      throw 'unreachable';\n    }\n    this.repaintContent();\n    this.repaintOverlay();\n  }\n\n  /**\n   * Reset modified columns to their default size.\n   *\n   * @param region - The column region of interest.\n   */\n  resetColumns(region: DataModel.ColumnRegion | 'all'): void {\n    switch (region) {\n    case 'all':\n      this._columnSections.reset();\n      this._rowHeaderSections.reset();\n      break;\n    case 'body':\n      this._columnSections.reset();\n      break;\n    case 'row-header':\n      this._rowHeaderSections.reset();\n      break;\n    default:\n      throw 'unreachable';\n    }\n    this.repaintContent();\n    this.repaintOverlay();\n  }\n\n  /**\n   * Map a client position to local viewport coordinates.\n   *\n   * @param clientX - The client X position of the mouse.\n   *\n   * @param clientY - The client Y position of the mouse.\n   *\n   * @returns The local viewport coordinates for the position.\n   */\n  mapToLocal(clientX: number, clientY: number): { lx: number, ly: number } {\n    // Fetch the viewport rect.\n    let rect = this._viewport.node.getBoundingClientRect();\n\n    // Extract the rect coordinates.\n    let { left, top } = rect;\n\n    // Round the rect coordinates for sub-pixel positioning.\n    left = Math.floor(left);\n    top = Math.floor(top);\n\n    // Convert to local coordinates.\n    let lx = clientX - left;\n    let ly = clientY - top;\n\n    // Return the local coordinates.\n    return { lx, ly };\n  }\n\n  /**\n   * Map a client position to virtual grid coordinates.\n   *\n   * @param clientX - The client X position of the mouse.\n   *\n   * @param clientY - The client Y position of the mouse.\n   *\n   * @returns The virtual grid coordinates for the position.\n   */\n  mapToVirtual(clientX: number, clientY: number): { vx: number, vy: number } {\n    // Convert to local coordiates.\n    let { lx, ly } = this.mapToLocal(clientX, clientY);\n\n    // Convert to virtual coordinates.\n    let vx = lx + this.scrollX - this.headerWidth;\n    let vy = ly + this.scrollY - this.headerHeight;\n\n    // Return the local coordinates.\n    return { vx, vy };\n  }\n\n  /**\n   * Hit test the viewport for the given client position.\n   *\n   * @param clientX - The client X position of the mouse.\n   *\n   * @param clientY - The client Y position of the mouse.\n   *\n   * @returns The hit test result, or `null` if the client\n   *   position is out of bounds.\n   *\n   * #### Notes\n   * This method accounts for a stretched last row and/or column.\n   */\n  hitTest(clientX: number, clientY: number): DataGrid.HitTestResult {\n    // Convert the mouse position into local coordinates.\n    let { lx, ly } = this.mapToLocal(clientX, clientY);\n\n    // Fetch the header and body dimensions.\n    let hw = this.headerWidth;\n    let hh = this.headerHeight;\n    let bw = this.bodyWidth;\n    let bh = this.bodyHeight;\n    let ph = this.pageHeight;\n    let pw = this.pageWidth;\n\n    // Adjust the body width for a stretched last column.\n    if (this._stretchLastColumn && pw > bw) {\n      bw = pw;\n    }\n\n    // Adjust the body height for a stretched last row.\n    if (this._stretchLastRow && ph > bh) {\n      bh = ph;\n    }\n\n    // Check for a corner header hit.\n    if (lx >= 0 && lx < hw && ly >= 0 && ly < hh) {\n      // Convert to unscrolled virtual coordinates.\n      let vx = lx;\n      let vy = ly;\n\n      // Fetch the row and column index.\n      let row = this.rowAt('column-header', vy);\n      let column = this.columnAt('row-header', vx);\n\n      // Fetch the cell offset position.\n      let ox = this.columnOffset('row-header', column);\n      let oy = this.rowOffset('column-header', row);\n\n      // Fetch cell width and height.\n      let width = this.columnSize('row-header', column);\n      let height = this.rowSize('column-header', row);\n\n      // Compute the leading and trailing positions.\n      let x = vx - ox;\n      let y = vy - oy;\n\n      // Return the hit test result.\n      return { region: 'corner-header', row, column, x, y, width, height };\n    }\n\n    // Check for a column header hit.\n    if (ly >= 0 && ly < hh && lx >= 0 && lx < (hw + bw)) {\n      // Convert to unscrolled virtual coordinates.\n      let vx = lx + this._scrollX - hw;\n      let vy = ly\n\n      // Fetch the row and column index.\n      let row = this.rowAt('column-header', vy);\n      let column = this.columnAt('body', vx);\n\n      // Fetch the cell offset position.\n      let ox = this.columnOffset('body', column);\n      let oy = this.rowOffset('column-header', row);\n\n      // Fetch the cell width and height.\n      let width = this.columnSize('body', column);\n      let height = this.rowSize('column-header', row);\n\n      // Compute the leading and trailing positions.\n      let x = vx - ox;\n      let y = vy - oy;\n\n      // Return the hit test result.\n      return { region: 'column-header', row, column, x, y, width, height };\n    }\n\n    // Check for a row header hit.\n    if (lx >= 0 && lx < hw && ly >= 0 && ly < (hh + bh)) {\n      // Convert to unscrolled virtual coordinates.\n      let vx = lx\n      let vy = ly + this._scrollY - hh;\n\n      // Fetch the row and column index.\n      let row = this.rowAt('body', vy);\n      let column = this.columnAt('row-header', vx);\n\n      // Fetch the cell offset position.\n      let ox = this.columnOffset('row-header', column);\n      let oy = this.rowOffset('body', row);\n\n      // Fetch the cell width and height.\n      let width = this.columnSize('row-header', column);\n      let height = this.rowSize('body', row);\n\n      // Compute the leading and trailing positions.\n      let x = vx - ox;\n      let y = vy - oy;\n\n      // Return the hit test result.\n      return { region: 'row-header', row, column, x, y, width, height };\n    }\n\n    // Check for a body hit.\n    if (lx >= hw && lx < (hw + bw) && ly >= hh && ly < (hh + bh)) {\n      // Convert to unscrolled virtual coordinates.\n      let vx = lx + this._scrollX - hw\n      let vy = ly + this._scrollY - hh;\n\n      // Fetch the row and column index.\n      let row = this.rowAt('body', vy);\n      let column = this.columnAt('body', vx);\n\n      // Fetch the cell offset position.\n      let ox = this.columnOffset('body', column);\n      let oy = this.rowOffset('body', row);\n\n      // Fetch the cell width and height.\n      let width = this.columnSize('body', column);\n      let height = this.rowSize('body', row);\n\n      // Compute the part coordinates.\n      let x = vx - ox;\n      let y = vy - oy;\n\n      // Return the result.\n      return { region: 'body', row, column, x, y, width, height };\n    }\n\n    // Otherwise, it's a void space hit.\n    let row = -1;\n    let column = -1;\n    let x = -1;\n    let y = -1;\n    let width = -1;\n    let height = -1;\n\n    // Return the hit test result.\n    return { region: 'void', row, column, x, y, width, height };\n  }\n\n  /**\n   * Copy the current selection to the system clipboard.\n   *\n   * #### Notes\n   * The grid must have a data model and a selection model.\n   *\n   * The behavior can be configured via `DataGrid.copyConfig`.\n   */\n  copyToClipboard(): void {\n    // Fetch the data model.\n    let dataModel = this._dataModel;\n\n    // Bail early if there is no data model.\n    if (!dataModel) {\n      return;\n    }\n\n    // Fetch the selection model.\n    let selectionModel = this._selectionModel;\n\n    // Bail early if there is no selection model.\n    if (!selectionModel) {\n      return;\n    }\n\n    // Coerce the selections to an array.\n    let selections = toArray(selectionModel.selections());\n\n    // Bail early if there are no selections.\n    if (selections.length === 0) {\n      return;\n    }\n\n    // Alert that multiple selections cannot be copied.\n    if (selections.length > 1) {\n      alert('Cannot copy multiple grid selections.');\n      return;\n    }\n\n    // Fetch the model counts.\n    let br = dataModel.rowCount('body');\n    let bc = dataModel.columnCount('body');\n\n    // Bail early if there is nothing to copy.\n    if (br === 0 || bc === 0) {\n      return;\n    }\n\n    // Unpack the selection.\n    let { r1, c1, r2, c2 } = selections[0];\n\n    // Clamp the selection to the model bounds.\n    r1 = Math.max(0, Math.min(r1, br - 1));\n    c1 = Math.max(0, Math.min(c1, bc - 1));\n    r2 = Math.max(0, Math.min(r2, br - 1));\n    c2 = Math.max(0, Math.min(c2, bc - 1));\n\n    // Ensure the limits are well-orderd.\n    if (r2 < r1) [r1, r2] = [r2, r1];\n    if (c2 < c1) [c1, c2] = [c2, c1];\n\n    // Fetch the header counts.\n    let rhc = dataModel.columnCount('row-header');\n    let chr = dataModel.rowCount('column-header');\n\n    // Unpack the copy config.\n    let separator = this._copyConfig.separator;\n    let format = this._copyConfig.format;\n    let headers = this._copyConfig.headers;\n    let warningThreshold = this._copyConfig.warningThreshold;\n\n    // Compute the number of cells to be copied.\n    let rowCount = r2 - r1 + 1;\n    let colCount = c2 - c1 + 1;\n    switch (headers) {\n    case 'none':\n      rhc = 0;\n      chr = 0;\n      break;\n    case 'row':\n      chr = 0;\n      colCount += rhc;\n      break;\n    case 'column':\n      rhc = 0;\n      rowCount += chr;\n      break;\n    case 'all':\n      rowCount += chr;\n      colCount += rhc;\n      break;\n    default:\n      throw 'unreachable';\n    }\n\n    // Compute the total cell count.\n    let cellCount = rowCount * colCount;\n\n    // Allow the user to cancel a large copy request.\n    if (cellCount > warningThreshold) {\n      let msg = `Copying ${cellCount} cells may take a while. Continue?`;\n      if (!window.confirm(msg)) {\n        return;\n      }\n    }\n\n    // Set up the format args.\n    let args = {\n      region: 'body' as DataModel.CellRegion,\n      row: 0,\n      column: 0,\n      value: null as any,\n      metadata: {} as DataModel.Metadata\n    };\n\n    // Allocate the array of rows.\n    let rows = new Array<string[]>(rowCount);\n\n    // Iterate over the rows.\n    for (let j = 0; j < rowCount; ++j) {\n      // Allocate the array of cells.\n      let cells = new Array<string>(colCount);\n\n      // Iterate over the columns.\n      for (let i = 0; i < colCount; ++i) {\n        // Set up the format variables.\n        let region: DataModel.CellRegion;\n        let row: number;\n        let column: number;\n\n        // Populate the format variables.\n        if (j < chr && i < rhc) {\n          region = 'corner-header';\n          row = j;\n          column = i;\n        } else if (j < chr) {\n          region = 'column-header';\n          row = j;\n          column = i - rhc + c1;\n        } else if (i < rhc) {\n          region = 'row-header';\n          row = j - chr + r1;\n          column = i;\n        } else {\n          region = 'body';\n          row = j - chr + r1;\n          column = i - rhc + c1;\n        }\n\n        // Populate the format args.\n        args.region = region;\n        args.row = row;\n        args.column = column;\n        args.value = dataModel.data(region, row, column);\n        args.metadata = dataModel.metadata(region, row, column);\n\n        // Format the cell.\n        cells[i] = format(args);\n      }\n\n      // Save the row of cells.\n      rows[j] = cells;\n    }\n\n    // Convert the cells into lines.\n    let lines = rows.map(cells => cells.join(separator));\n\n    // Convert the lines into text.\n    let text = lines.join('\\n');\n\n    // Copy the text to the clipboard.\n    ClipboardExt.copyText(text);\n  }\n\n  /**\n   * Process a message sent to the widget.\n   *\n   * @param msg - The message sent to the widget.\n   */\n  processMessage(msg: Message): void {\n    // Ignore child show/hide messages. The data grid controls the\n    // visibility of its children, and will manually dispatch the\n    // fit-request messages as a result of visibility change.\n    if (msg.type === 'child-shown' || msg.type === 'child-hidden') {\n      return;\n    }\n\n    // Recompute the scroll bar minimums before the layout refits.\n    if (msg.type === 'fit-request') {\n      let vsbLimits = ElementExt.sizeLimits(this._vScrollBar.node);\n      let hsbLimits = ElementExt.sizeLimits(this._hScrollBar.node);\n      this._vScrollBarMinWidth = vsbLimits.minWidth;\n      this._hScrollBarMinHeight = hsbLimits.minHeight;\n    }\n\n    // Process all other messages as normal.\n    super.processMessage(msg);\n  }\n\n  /**\n   * Intercept a message sent to a message handler.\n   *\n   * @param handler - The target handler of the message.\n   *\n   * @param msg - The message to be sent to the handler.\n   *\n   * @returns `true` if the message should continue to be processed\n   *   as normal, or `false` if processing should cease immediately.\n   */\n  messageHook(handler: IMessageHandler, msg: Message): boolean {\n    // Process viewport messages.\n    if (handler === this._viewport) {\n      this._processViewportMessage(msg);\n      return true;\n    }\n\n    // Process horizontal scroll bar messages.\n    if (handler === this._hScrollBar && msg.type === 'activate-request') {\n      this.activate();\n      return false;\n    }\n\n    // Process vertical scroll bar messages.\n    if (handler === this._vScrollBar && msg.type === 'activate-request') {\n      this.activate();\n      return false;\n    }\n\n    // Ignore all other messages.\n    return true;\n  }\n\n  /**\n   * Handle the DOM events for the data grid.\n   *\n   * @param event - The DOM event sent to the data grid.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the data grid's DOM node. It\n   * should not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n    case 'keydown':\n      this._evtKeyDown(event as KeyboardEvent);\n      break;\n    case 'mousedown':\n      this._evtMouseDown(event as MouseEvent);\n      break;\n    case 'mousemove':\n      this._evtMouseMove(event as MouseEvent);\n      break;\n    case 'mouseup':\n      this._evtMouseUp(event as MouseEvent);\n      break;\n    case 'dblclick':\n      this._evtMouseDoubleClick(event as MouseEvent);\n      break;\n    case 'mouseleave':\n      this._evtMouseLeave(event as MouseEvent);\n      break;\n    case 'contextmenu':\n      this._evtContextMenu(event as MouseEvent);\n      break;\n    case 'wheel':\n      this._evtWheel(event as WheelEvent);\n      break;\n    case 'resize':\n      this._refreshDPI();\n      break;\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'activate-request'` message.\n   */\n  protected onActivateRequest(msg: Message): void {\n    this.viewport.node.focus();\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    window.addEventListener('resize', this);\n    this.node.addEventListener('wheel', this);\n    this._viewport.node.addEventListener('keydown', this);\n    this._viewport.node.addEventListener('mousedown', this);\n    this._viewport.node.addEventListener('mousemove', this);\n    this._viewport.node.addEventListener('dblclick', this);\n    this._viewport.node.addEventListener('mouseleave', this);\n    this._viewport.node.addEventListener('contextmenu', this);\n    this.repaintContent();\n    this.repaintOverlay();\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    window.removeEventListener('resize', this);\n    this.node.removeEventListener('wheel', this);\n    this._viewport.node.removeEventListener('keydown', this);\n    this._viewport.node.removeEventListener('mousedown', this);\n    this._viewport.node.removeEventListener('mousemove', this);\n    this._viewport.node.removeEventListener('mouseleave', this);\n    this._viewport.node.removeEventListener('dblclick', this);\n    this._viewport.node.removeEventListener('contextmenu', this);\n    this._releaseMouse();\n  }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   */\n  protected onBeforeShow(msg: Message): void {\n    this.repaintContent();\n    this.repaintOverlay();\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    if (this._editorController) {\n      this._editorController.cancel();\n    }\n\n    this._syncScrollState();\n  }\n\n  /**\n   * Schedule a repaint of all of the grid content.\n   */\n  protected repaintContent(): void {\n    let msg = new Private.PaintRequest('all', 0, 0, 0, 0);\n    MessageLoop.postMessage(this._viewport, msg);\n  }\n\n  /**\n   * Schedule a repaint of specific grid content.\n   */\n  private _repaintRegion(region: DataModel.CellRegion, r1: number, c1: number, r2: number, c2: number): void {\n    let msg = new Private.PaintRequest(region, r1, c1, r2, c2);\n    MessageLoop.postMessage(this._viewport, msg);\n  }\n\n  /**\n   * Schedule a repaint of the overlay.\n   */\n  protected repaintOverlay(): void {\n    MessageLoop.postMessage(this._viewport, Private.OverlayPaintRequest);\n  }\n\n  /**\n   * Ensure the canvas is at least the specified size.\n   *\n   * This method will retain the valid canvas content.\n   */\n  private _resizeCanvasIfNeeded(width: number, height: number): void {\n    // Scale the size by the dpi ratio.\n    width = width * this._dpiRatio;\n    height = height * this._dpiRatio;\n\n    // Compute the maximum canvas size for the given width and height.\n    let maxW = (Math.ceil((width + 1) / 512) + 1) * 512;\n    let maxH = (Math.ceil((height + 1) / 512) + 1) * 512;\n\n    // Get the current size of the canvas.\n    let curW = this._canvas.width;\n    let curH = this._canvas.height;\n\n    // Bail early if the canvas size is within bounds.\n    if (curW >= width && curH >= height && curW <= maxW && curH <= maxH) {\n      return;\n    }\n\n    // Compute the expanded canvas size.\n    let expW = maxW - 512;\n    let expH = maxH - 512;\n\n    // Set the transforms to the identity matrix.\n    this._canvasGC.setTransform(1, 0, 0, 1, 0, 0);\n    this._bufferGC.setTransform(1, 0, 0, 1, 0, 0);\n    this._overlayGC.setTransform(1, 0, 0, 1, 0, 0);\n\n    // Resize the buffer if needed.\n    if (curW < width) {\n      this._buffer.width = expW;\n    } else if (curW > maxW) {\n      this._buffer.width = maxW;\n    }\n\n    // Resize the buffer height if needed.\n    if (curH < height) {\n      this._buffer.height = expH;\n    } else if (curH > maxH) {\n      this._buffer.height = maxH;\n    }\n\n    // Test whether there is content to blit.\n    let needBlit = curH > 0 && curH > 0 && width > 0 && height > 0;\n\n    // Copy the valid canvas content into the buffer if needed.\n    if (needBlit) {\n      this._bufferGC.drawImage(this._canvas, 0, 0);\n    }\n\n    // Resize the canvas width if needed.\n    if (curW < width) {\n      this._canvas.width = expW;\n      this._canvas.style.width = `${expW / this._dpiRatio}px`;\n    } else if (curW > maxW) {\n      this._canvas.width = maxW;\n      this._canvas.style.width = `${maxW / this._dpiRatio}px`;\n    }\n\n    // Resize the canvas height if needed.\n    if (curH < height) {\n      this._canvas.height = expH;\n      this._canvas.style.height = `${expH / this._dpiRatio}px`;\n    } else if (curH > maxH) {\n      this._canvas.height = maxH;\n      this._canvas.style.height = `${maxH / this._dpiRatio}px`;\n    }\n\n    // Copy the valid canvas content from the buffer if needed.\n    if (needBlit) {\n      this._canvasGC.drawImage(this._buffer, 0, 0);\n    }\n\n    // Copy the valid overlay content into the buffer if needed.\n    if (needBlit) {\n      this._bufferGC.drawImage(this._overlay, 0, 0);\n    }\n\n    // Resize the overlay width if needed.\n    if (curW < width) {\n      this._overlay.width = expW;\n      this._overlay.style.width = `${expW / this._dpiRatio}px`;\n    } else if (curW > maxW) {\n      this._overlay.width = maxW;\n      this._overlay.style.width = `${maxW / this._dpiRatio}px`;\n    }\n\n    // Resize the overlay height if needed.\n    if (curH < height) {\n      this._overlay.height = expH;\n      this._overlay.style.height = `${expH / this._dpiRatio}px`;\n    } else if (curH > maxH) {\n      this._overlay.height = maxH;\n      this._overlay.style.height = `${maxH / this._dpiRatio}px`;\n    }\n\n    // Copy the valid overlay content from the buffer if needed.\n    if (needBlit) {\n      this._overlayGC.drawImage(this._buffer, 0, 0);\n    }\n  }\n\n  /**\n   * Sync the scroll bars and scroll state with the viewport.\n   *\n   * #### Notes\n   * If the visibility of either scroll bar changes, a synchronous\n   * fit-request will be dispatched to the data grid to immediately\n   * resize the viewport.\n   */\n  private _syncScrollState(): void {\n    // Fetch the viewport dimensions.\n    let bw = this.bodyWidth;\n    let bh = this.bodyHeight;\n    let pw = this.pageWidth;\n    let ph = this.pageHeight;\n\n    // Get the current scroll bar visibility.\n    let hasVScroll = !this._vScrollBar.isHidden;\n    let hasHScroll = !this._hScrollBar.isHidden;\n\n    // Get the minimum sizes of the scroll bars.\n    let vsw = this._vScrollBarMinWidth;\n    let hsh = this._hScrollBarMinHeight;\n\n    // Get the page size as if no scroll bars are visible.\n    let apw = pw + (hasVScroll ? vsw : 0);\n    let aph = ph + (hasHScroll ? hsh : 0);\n\n    // Test whether scroll bars are needed for the adjusted size.\n    let needVScroll = aph < bh - 1;\n    let needHScroll = apw < bw - 1;\n\n    // Re-test the horizontal scroll if a vertical scroll is needed.\n    if (needVScroll && !needHScroll) {\n      needHScroll = (apw - vsw) < bw - 1;\n    }\n\n    // Re-test the vertical scroll if a horizontal scroll is needed.\n    if (needHScroll && !needVScroll) {\n      needVScroll = (aph - hsh) < bh - 1;\n    }\n\n    // If the visibility changes, immediately refit the grid.\n    if (needVScroll !== hasVScroll || needHScroll !== hasHScroll) {\n      this._vScrollBar.setHidden(!needVScroll);\n      this._hScrollBar.setHidden(!needHScroll);\n      this._scrollCorner.setHidden(!needVScroll || !needHScroll);\n      MessageLoop.sendMessage(this, Widget.Msg.FitRequest);\n    }\n\n    // Update the scroll bar limits.\n    this._vScrollBar.maximum = this.maxScrollY;\n    this._vScrollBar.page = this.pageHeight;\n    this._hScrollBar.maximum = this.maxScrollX;\n    this._hScrollBar.page = this.pageWidth;\n\n    // Re-clamp the scroll position.\n    this._scrollTo(this._scrollX, this._scrollY);\n  }\n\n  /**\n   * Sync the viewport to the given scroll position.\n   *\n   * #### Notes\n   * This schedules a full repaint and syncs the scroll state.\n   */\n  private _syncViewport(): void {\n    this.repaintContent();\n    this.repaintOverlay();\n    this._syncScrollState();\n  }\n\n  /**\n   * Process a message sent to the viewport\n   */\n  private _processViewportMessage(msg: Message): void {\n    switch (msg.type) {\n    case 'resize':\n      this._onViewportResize(msg as Widget.ResizeMessage);\n      break;\n    case 'scroll-request':\n      this._onViewportScrollRequest(msg);\n      break;\n    case 'paint-request':\n      this._onViewportPaintRequest(msg as Private.PaintRequest);\n      break;\n    case 'overlay-paint-request':\n      this._onViewportOverlayPaintRequest(msg);\n      break;\n    case 'row-resize-request':\n      this._onViewportRowResizeRequest(msg as Private.RowResizeRequest);\n      break;\n    case 'column-resize-request':\n      this._onViewportColumnResizeRequest(msg as Private.ColumnResizeRequest);\n      break;\n    default:\n      break;\n    }\n  }\n\n  /**\n   * A message hook invoked on a viewport `'resize'` message.\n   */\n  private _onViewportResize(msg: Widget.ResizeMessage): void {\n    // Bail early if the viewport is not visible.\n    if (!this._viewport.isVisible) {\n      return;\n    }\n\n    // Unpack the message data.\n    let { width, height } = msg;\n\n    // Measure the viewport node if the dimensions are unknown.\n    if (width === -1) {\n      width = this._viewport.node.offsetWidth;\n    }\n    if (height === -1) {\n      height = this._viewport.node.offsetHeight;\n    }\n\n    // Round the dimensions to the nearest pixel.\n    width = Math.round(width);\n    height = Math.round(height);\n\n    // Get the current size of the viewport.\n    let oldWidth = this._viewportWidth;\n    let oldHeight = this._viewportHeight;\n\n    // Updated internal viewport size.\n    this._viewportWidth = width;\n    this._viewportHeight = height;\n\n    // Resize the canvas if needed.\n    this._resizeCanvasIfNeeded(width, height);\n\n    // Bail early if there is nothing to paint.\n    if (width === 0 || height === 0) {\n      return;\n    }\n\n    // Paint the whole grid if the old size was zero.\n    if (oldWidth === 0 || oldHeight === 0) {\n      this.paintContent(0, 0, width, height);\n      this._paintOverlay();\n      return;\n    }\n\n    // Paint the right edge as needed.\n    if (this._stretchLastColumn && this.pageWidth > this.bodyWidth) {\n      let bx = this._columnSections.offsetOf(this._columnSections.count - 1);\n      let x = Math.min(this.headerWidth + bx, oldWidth);\n      this.paintContent(x, 0, width - x, height);\n    } else if (width > oldWidth) {\n      this.paintContent(oldWidth, 0, width - oldWidth, height);\n    }\n\n    // Paint the bottom edge as needed.\n    if (this._stretchLastRow && this.pageHeight > this.bodyHeight) {\n      let by = this._rowSections.offsetOf(this._rowSections.count - 1);\n      let y = Math.min(this.headerHeight + by, oldHeight);\n      this.paintContent(0, y, width, height - y);\n    } else if (height > oldHeight) {\n      this.paintContent(0, oldHeight, width, height - oldHeight);\n    }\n\n    // Paint the overlay.\n    this._paintOverlay();\n  }\n\n  /**\n   * A message hook invoked on a viewport `'scroll-request'` message.\n   */\n  private _onViewportScrollRequest(msg: Message): void {\n    this._scrollTo(this._hScrollBar.value, this._vScrollBar.value);\n  }\n\n  /**\n   * A message hook invoked on a viewport `'paint-request'` message.\n   */\n  private _onViewportPaintRequest(msg: Private.PaintRequest): void {\n    // Bail early if the viewport is not visible.\n    if (!this._viewport.isVisible) {\n      return;\n    }\n\n    // Bail early if the viewport has zero area.\n    if (this._viewportWidth === 0 || this._viewportHeight === 0) {\n      return;\n    }\n\n    // Set up the paint limits.\n    let xMin = 0;\n    let yMin = 0;\n    let xMax = this._viewportWidth - 1;\n    let yMax = this._viewportHeight - 1;\n\n    // Fetch the scroll position.\n    let sx = this._scrollX;\n    let sy = this._scrollY;\n\n    // Fetch the header dimensions.\n    let hw = this.headerWidth;\n    let hh = this.headerHeight;\n\n    // Fetch the section lists.\n    let rs = this._rowSections;\n    let cs = this._columnSections;\n    let rhs = this._rowHeaderSections;\n    let chs = this._columnHeaderSections;\n\n    // Unpack the message data.\n    let { region, r1, c1, r2, c2 } = msg;\n\n    // Set up the paint variables.\n    let x1: number;\n    let y1: number;\n    let x2: number;\n    let y2: number;\n\n    // Fill the paint variables based on the paint region.\n    switch (region) {\n    case 'all':\n      x1 = xMin;\n      y1 = yMin;\n      x2 = xMax;\n      y2 = yMax;\n      break;\n    case 'body':\n      r1 = Math.max(0, Math.min(r1, rs.count));\n      c1 = Math.max(0, Math.min(c1, cs.count));\n      r2 = Math.max(0, Math.min(r2, rs.count));\n      c2 = Math.max(0, Math.min(c2, cs.count));\n      x1 = cs.offsetOf(c1) - sx + hw;\n      y1 = rs.offsetOf(r1) - sy + hh;\n      x2 = cs.extentOf(c2) - sx + hw;\n      y2 = rs.extentOf(r2) - sy + hh;\n      break;\n    case 'row-header':\n      r1 = Math.max(0, Math.min(r1, rs.count));\n      c1 = Math.max(0, Math.min(c1, rhs.count));\n      r2 = Math.max(0, Math.min(r2, rs.count));\n      c2 = Math.max(0, Math.min(c2, rhs.count));\n      x1 = rhs.offsetOf(c1);\n      y1 = rs.offsetOf(r1) - sy + hh;\n      x2 = rhs.extentOf(c2);\n      y2 = rs.extentOf(r2) - sy + hh;\n      break;\n    case 'column-header':\n      r1 = Math.max(0, Math.min(r1, chs.count));\n      c1 = Math.max(0, Math.min(c1, cs.count));\n      r2 = Math.max(0, Math.min(r2, chs.count));\n      c2 = Math.max(0, Math.min(c2, cs.count));\n      x1 = cs.offsetOf(c1) - sx + hw;\n      y1 = chs.offsetOf(r1);\n      x2 = cs.extentOf(c2) - sx + hw;\n      y2 = chs.extentOf(r2);\n      break;\n    case 'corner-header':\n      r1 = Math.max(0, Math.min(r1, chs.count));\n      c1 = Math.max(0, Math.min(c1, rhs.count));\n      r2 = Math.max(0, Math.min(r2, chs.count));\n      c2 = Math.max(0, Math.min(c2, rhs.count));\n      x1 = rhs.offsetOf(c1);\n      y1 = chs.offsetOf(r1);\n      x2 = rhs.extentOf(c2);\n      y2 = chs.extentOf(r2);\n      break;\n    default:\n      throw 'unreachable';\n    }\n\n    // Bail early if the dirty rect is outside the bounds.\n    if (x2 < xMin || y2 < yMin || x1 > xMax || y1 > yMax) {\n      return;\n    }\n\n    // Clamp the dirty rect to the paint bounds.\n    x1 = Math.max(xMin, Math.min(x1, xMax));\n    y1 = Math.max(yMin, Math.min(y1, yMax));\n    x2 = Math.max(xMin, Math.min(x2, xMax));\n    y2 = Math.max(yMin, Math.min(y2, yMax));\n\n    // Paint the content of the dirty rect.\n    this.paintContent(x1, y1, x2 - x1 + 1, y2 - y1 + 1);\n  }\n\n  /**\n   * A message hook invoked on a viewport `'overlay-paint-request'` message.\n   */\n  private _onViewportOverlayPaintRequest(msg: Message): void {\n    // Bail early if the viewport is not visible.\n    if (!this._viewport.isVisible) {\n      return;\n    }\n\n    // Bail early if the viewport has zero area.\n    if (this._viewportWidth === 0 || this._viewportHeight === 0) {\n      return;\n    }\n\n    // Paint the content of the overlay.\n    this._paintOverlay();\n  }\n\n  /**\n   * A message hook invoked on a viewport `'row-resize-request'` message.\n   */\n  private _onViewportRowResizeRequest(msg: Private.RowResizeRequest): void {\n    if (msg.region === 'body') {\n      this._resizeRow(msg.index, msg.size);\n    } else {\n      this._resizeColumnHeader(msg.index, msg.size);\n    }\n  }\n\n  /**\n   * A message hook invoked on a viewport `'column-resize-request'` message.\n   */\n  private _onViewportColumnResizeRequest(msg: Private.ColumnResizeRequest): void {\n    if (msg.region === 'body') {\n      this._resizeColumn(msg.index, msg.size);\n    } else {\n      this._resizeRowHeader(msg.index, msg.size);\n    }\n  }\n\n  /**\n   * Handle the `thumbMoved` signal from a scroll bar.\n   */\n  private _onThumbMoved(sender: ScrollBar): void {\n    MessageLoop.postMessage(this._viewport, Private.ScrollRequest);\n  }\n\n  /**\n   * Handle the `pageRequested` signal from a scroll bar.\n   */\n  private _onPageRequested(sender: ScrollBar, dir: 'decrement' | 'increment'): void {\n    if (sender === this._vScrollBar) {\n      this.scrollByPage(dir === 'decrement' ? 'up' : 'down');\n    } else {\n      this.scrollByPage(dir === 'decrement' ? 'left' : 'right');\n    }\n  }\n\n  /**\n   * Handle the `stepRequested` signal from a scroll bar.\n   */\n  private _onStepRequested(sender: ScrollBar, dir: 'decrement' | 'increment'): void {\n    if (sender === this._vScrollBar) {\n      this.scrollByStep(dir === 'decrement' ? 'up' : 'down');\n    } else {\n      this.scrollByStep(dir === 'decrement' ? 'left' : 'right');\n    }\n  }\n\n  /**\n   * A signal handler for the data model `changed` signal.\n   */\n  private _onDataModelChanged(sender: DataModel, args: DataModel.ChangedArgs): void {\n    switch (args.type) {\n    case 'rows-inserted':\n      this._onRowsInserted(args);\n      break;\n    case 'columns-inserted':\n      this._onColumnsInserted(args);\n      break;\n    case 'rows-removed':\n      this._onRowsRemoved(args);\n      break;\n    case 'columns-removed':\n      this._onColumnsRemoved(args);\n      break;\n    case 'rows-moved':\n      this._onRowsMoved(args);\n      break;\n    case 'columns-moved':\n      this._onColumnsMoved(args);\n      break;\n    case 'cells-changed':\n      this._onCellsChanged(args);\n      break;\n    case 'model-reset':\n      this._onModelReset(args);\n      break;\n    default:\n      throw 'unreachable';\n    }\n  }\n\n  /**\n   * A signal handler for the selection model `changed` signal.\n   */\n  private _onSelectionsChanged(sender: SelectionModel): void {\n    this.repaintOverlay();\n  }\n\n  /**\n   * Handle rows being inserted in the data model.\n   */\n  private _onRowsInserted(args: DataModel.RowsChangedArgs): void {\n    // Unpack the arg data.\n    let { region, index, span } = args;\n\n    // Bail early if there are no sections to insert.\n    if (span <= 0) {\n      return;\n    }\n\n    // Look up the relevant section list.\n    let list: SectionList;\n    if (region === 'body') {\n      list = this._rowSections;\n    } else {\n      list = this._columnHeaderSections;\n    }\n\n    // Insert the span, maintaining the scroll position as needed.\n    if (this._scrollY === this.maxScrollY && this.maxScrollY > 0) {\n      list.insert(index, span);\n      this._scrollY = this.maxScrollY;\n    } else {\n      list.insert(index, span);\n    }\n\n    // Sync the viewport.\n    this._syncViewport();\n  }\n\n  /**\n   * Handle columns being inserted into the data model.\n   */\n  private _onColumnsInserted(args: DataModel.ColumnsChangedArgs): void {\n    // Unpack the arg data.\n    let { region, index, span } = args;\n\n    // Bail early if there are no sections to insert.\n    if (span <= 0) {\n      return;\n    }\n\n    // Look up the relevant section list.\n    let list: SectionList;\n    if (region === 'body') {\n      list = this._columnSections;\n    } else {\n      list = this._rowHeaderSections;\n    }\n\n    // Insert the span, maintaining the scroll position as needed.\n    if (this._scrollX === this.maxScrollX && this.maxScrollX > 0) {\n      list.insert(index, span);\n      this._scrollX = this.maxScrollX;\n    } else {\n      list.insert(index, span);\n    }\n\n    // Sync the viewport.\n    this._syncViewport();\n  }\n\n  /**\n   * Handle rows being removed from the data model.\n   */\n  private _onRowsRemoved(args: DataModel.RowsChangedArgs): void {\n    // Unpack the arg data.\n    let { region, index, span } = args;\n\n    // Bail early if there are no sections to remove.\n    if (span <= 0) {\n      return;\n    }\n\n    // Look up the relevant section list.\n    let list: SectionList;\n    if (region === 'body') {\n      list = this._rowSections;\n    } else {\n      list = this._columnHeaderSections;\n    }\n\n    // Bail if the index or is invalid\n    if (index < 0 || index >= list.count) {\n      return;\n    }\n\n    // Remove the span, maintaining the scroll position as needed.\n    if (this._scrollY === this.maxScrollY && this.maxScrollY > 0) {\n      list.remove(index, span);\n      this._scrollY = this.maxScrollY;\n    } else {\n      list.remove(index, span);\n    }\n\n    // Sync the viewport.\n    this._syncViewport();\n  }\n\n  /**\n   * Handle columns being removed from the data model.\n   */\n  private _onColumnsRemoved(args: DataModel.ColumnsChangedArgs): void {\n    // Unpack the arg data.\n    let { region, index, span } = args;\n\n    // Bail early if there are no sections to remove.\n    if (span <= 0) {\n      return;\n    }\n\n    // Look up the relevant section list.\n    let list: SectionList;\n    if (region === 'body') {\n      list = this._columnSections;\n    } else {\n      list = this._rowHeaderSections;\n    }\n\n    // Bail if the index or is invalid\n    if (index < 0 || index >= list.count) {\n      return;\n    }\n\n    // Remove the span, maintaining the scroll position as needed.\n    if (this._scrollX === this.maxScrollX && this.maxScrollX > 0) {\n      list.remove(index, span);\n      this._scrollX = this.maxScrollX;\n    } else {\n      list.remove(index, span);\n    }\n\n    // Sync the viewport.\n    this._syncViewport();\n  }\n\n  /**\n   * Handle rows moving in the data model.\n   */\n  private _onRowsMoved(args: DataModel.RowsMovedArgs): void {\n    // Unpack the arg data.\n    let { region, index, span, destination } = args;\n\n    // Bail early if there are no sections to move.\n    if (span <= 0) {\n      return;\n    }\n\n    // Look up the relevant section list.\n    let list: SectionList;\n    if (region === 'body') {\n      list = this._rowSections;\n    } else {\n      list = this._columnHeaderSections;\n    }\n\n    // Bail early if the index is out of range.\n    if (index < 0 || index >= list.count) {\n      return;\n    }\n\n    // Clamp the move span to the limit.\n    span = Math.min(span, list.count - index);\n\n    // Clamp the destination index to the limit.\n    destination = Math.min(Math.max(0, destination), list.count - span);\n\n    // Bail early if there is no effective move.\n    if (index === destination) {\n      return;\n    }\n\n    // Compute the first affected index.\n    let r1 = Math.min(index, destination);\n\n    // Compute the last affected index.\n    let r2 = Math.max(index + span - 1, destination + span - 1);\n\n    // Move the sections in the list.\n    list.move(index, span, destination);\n\n    // Schedule a repaint of the dirty cells.\n    if (region === 'body') {\n      this._repaintRegion('body', r1, 0, r2, Infinity);\n      this._repaintRegion('row-header', r1, 0, r2, Infinity);\n    } else {\n      this._repaintRegion('column-header', r1, 0, r2, Infinity);\n      this._repaintRegion('corner-header', r1, 0, r2, Infinity);\n    }\n\n    // Sync the viewport.\n    this._syncViewport();\n  }\n\n  /**\n   * Handle columns moving in the data model.\n   */\n  private _onColumnsMoved(args: DataModel.ColumnsMovedArgs): void {\n    // Unpack the arg data.\n    let { region, index, span, destination } = args;\n\n    // Bail early if there are no sections to move.\n    if (span <= 0) {\n      return;\n    }\n\n    // Look up the relevant section list.\n    let list: SectionList;\n    if (region === 'body') {\n      list = this._columnSections;\n    } else {\n      list = this._rowHeaderSections;\n    }\n\n    // Bail early if the index is out of range.\n    if (index < 0 || index >= list.count) {\n      return;\n    }\n\n    // Clamp the move span to the limit.\n    span = Math.min(span, list.count - index);\n\n    // Clamp the destination index to the limit.\n    destination = Math.min(Math.max(0, destination), list.count - span);\n\n    // Bail early if there is no effective move.\n    if (index === destination) {\n      return;\n    }\n\n    // Move the sections in the list.\n    list.move(index, span, destination);\n\n    // Compute the first affected index.\n    let c1 = Math.min(index, destination);\n\n    // Compute the last affected index.\n    let c2 = Math.max(index + span - 1, destination + span - 1);\n\n    // Schedule a repaint of the dirty cells.\n    if (region === 'body') {\n      this._repaintRegion('body', 0, c1, Infinity, c2);\n      this._repaintRegion('column-header', 0, c1, Infinity, c2);\n    } else {\n      this._repaintRegion('row-header', 0, c1, Infinity, c2);\n      this._repaintRegion('corner-header', 0, c1, Infinity, c2);\n    }\n\n    // Sync the viewport.\n    this._syncViewport();\n  }\n\n  /**\n   * Handle cells changing in the data model.\n   */\n  private _onCellsChanged(args: DataModel.CellsChangedArgs): void {\n    // Unpack the arg data.\n    let { region, row, column, rowSpan, columnSpan } = args;\n\n    // Bail early if there are no cells to modify.\n    if (rowSpan <= 0 && columnSpan <= 0) {\n      return;\n    }\n\n    // Compute the changed cell bounds.\n    let r1 = row;\n    let c1 = column;\n    let r2 = r1 + rowSpan - 1;\n    let c2 = c1 + columnSpan - 1;\n\n    // Schedule a repaint of the cell content.\n    this._repaintRegion(region, r1, c1, r2, c2);\n  }\n\n  /**\n   * Handle a full data model reset.\n   */\n  private _onModelReset(args: DataModel.ModelResetArgs): void {\n    // Look up the various current section counts.\n    let nr = this._rowSections.count;\n    let nc = this._columnSections.count;\n    let nrh = this._rowHeaderSections.count;\n    let nch = this._columnHeaderSections.count;\n\n    // Compute the delta count for each region.\n    let dr = this._dataModel!.rowCount('body') - nr;\n    let dc = this._dataModel!.columnCount('body') - nc;\n    let drh = this._dataModel!.columnCount('row-header') - nrh;\n    let dch = this._dataModel!.rowCount('column-header') - nch;\n\n    // Update the row sections, if needed.\n    if (dr > 0) {\n      this._rowSections.insert(nr, dr);\n    } else if (dr < 0) {\n      this._rowSections.remove(nr + dr, -dr);\n    }\n\n    // Update the column sections, if needed.\n    if (dc > 0) {\n      this._columnSections.insert(nc, dc);\n    } else if (dc < 0) {\n      this._columnSections.remove(nc + dc, -dc);\n    }\n\n    // Update the row header sections, if needed.\n    if (drh > 0) {\n      this._rowHeaderSections.insert(nrh, drh);\n    } else if (drh < 0) {\n      this._rowHeaderSections.remove(nrh + drh, -drh);\n    }\n\n    // Update the column header sections, if needed.\n    if (dch > 0) {\n      this._columnHeaderSections.insert(nch, dch);\n    } else if (dch < 0) {\n      this._columnHeaderSections.remove(nch + dch, -dch);\n    }\n\n    // Sync the viewport.\n    this._syncViewport();\n  }\n\n  /**\n   * A signal handler for the renderer map `changed` signal.\n   */\n  private _onRenderersChanged(): void {\n    this.repaintContent();\n  }\n\n  /**\n   * Handle the `'keydown'` event for the data grid.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    if (this._mousedown) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else if (this._keyHandler) {\n      this._keyHandler.onKeyDown(this, event);\n    }\n  }\n\n  /**\n   * Handle the `'mousedown'` event for the data grid.\n   */\n  private _evtMouseDown(event: MouseEvent): void {\n    // Ignore everything except the left mouse button.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Activate the grid.\n    this.activate();\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Add the extra document listeners.\n    document.addEventListener('keydown', this, true);\n    document.addEventListener('mouseup', this, true);\n    document.addEventListener('mousedown', this, true);\n    document.addEventListener('mousemove', this, true);\n    document.addEventListener('contextmenu', this, true);\n\n    // Flip the mousedown flag.\n    this._mousedown = true;\n\n    // Dispatch to the mouse handler.\n    if (this._mouseHandler) {\n      this._mouseHandler.onMouseDown(this, event);\n    }\n  }\n\n  /**\n   * Handle the `'mousemove'` event for the data grid.\n   */\n  private _evtMouseMove(event: MouseEvent): void {\n    // Stop the event propagation if the mouse is down.\n    if (this._mousedown) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    // Bail if there is no mouse handler.\n    if (!this._mouseHandler) {\n      return;\n    }\n\n    // Dispatch to the mouse handler.\n    if (this._mousedown) {\n      this._mouseHandler.onMouseMove(this, event);\n    } else {\n      this._mouseHandler.onMouseHover(this, event);\n    }\n  }\n\n  /**\n   * Handle the `'mouseup'` event for the data grid.\n   */\n  private _evtMouseUp(event: MouseEvent): void {\n    // Ignore everything except the left mouse button.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Dispatch to the mouse handler.\n    if (this._mouseHandler) {\n      this._mouseHandler.onMouseUp(this, event);\n    }\n\n    // Release the mouse.\n    this._releaseMouse();\n  }\n\n  /**\n   * Handle the `'dblclick'` event for the data grid.\n   */\n  private _evtMouseDoubleClick(event: MouseEvent): void {\n    // Ignore everything except the left mouse button.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Dispatch to the mouse handler.\n    if (this._mouseHandler) {\n      this._mouseHandler.onMouseDoubleClick(this, event);\n    }\n\n    // Release the mouse.\n    this._releaseMouse();\n  }\n\n  /**\n   * Handle the `'mouseleave'` event for the data grid.\n   */\n  private _evtMouseLeave(event: MouseEvent): void {\n    if (this._mousedown) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else if (this._mouseHandler) {\n      this._mouseHandler.onMouseLeave(this, event);\n    }\n  }\n\n  /**\n   * Handle the `'contextmenu'` event for the data grid.\n   */\n  private _evtContextMenu(event: MouseEvent): void {\n    if (this._mousedown) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else if (this._mouseHandler) {\n      this._mouseHandler.onContextMenu(this, event);\n    }\n  }\n\n  /**\n   * Handle the `'wheel'` event for the data grid.\n   */\n  private _evtWheel(event: WheelEvent): void {\n    // Ignore the event if `accel` is held.\n    if (Platform.accelKey(event)) {\n      return;\n    }\n\n    // Bail early if there is no mouse handler.\n    if (!this._mouseHandler) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Dispatch to the mouse handler.\n    this._mouseHandler.onWheel(this, event);\n  }\n\n  /**\n   * Release the mouse grab.\n   */\n  private _releaseMouse(): void {\n    // Clear the mousedown flag.\n    this._mousedown = false;\n\n    // Relase the mouse handler.\n    if (this._mouseHandler) {\n      this._mouseHandler.release();\n    }\n\n    // Remove the document listeners.\n    document.removeEventListener('keydown', this, true);\n    document.removeEventListener('mouseup', this, true);\n    document.removeEventListener('mousedown', this, true);\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('contextmenu', this, true);\n  }\n\n  /**\n   * Refresh the dpi ratio.\n   */\n  private _refreshDPI(): void {\n    // Get the best integral value for the dpi ratio.\n    let dpiRatio = Math.ceil(window.devicePixelRatio);\n\n    // Bail early if the computed dpi ratio has not changed.\n    if (this._dpiRatio === dpiRatio) {\n      return;\n    }\n\n    // Update the internal dpi ratio.\n    this._dpiRatio = dpiRatio;\n\n    // Schedule a repaint of the content.\n    this.repaintContent();\n\n    // Schedule a repaint of the overlay.\n    this.repaintOverlay();\n\n    // Update the canvas size for the new dpi ratio.\n    this._resizeCanvasIfNeeded(this._viewportWidth, this._viewportHeight);\n\n    // Ensure the canvas style is scaled for the new ratio.\n    this._canvas.style.width = `${this._canvas.width / this._dpiRatio}px`;\n    this._canvas.style.height = `${this._canvas.height / this._dpiRatio}px`;\n\n    // Ensure the overlay style is scaled for the new ratio.\n    this._overlay.style.width = `${this._overlay.width / this._dpiRatio}px`;\n    this._overlay.style.height = `${this._overlay.height / this._dpiRatio}px`;\n  }\n\n  /**\n   * Resize a row section immediately.\n   */\n  private _resizeRow(index: number, size: number): void {\n    // Look up the target section list.\n    let list = this._rowSections;\n\n    // Bail early if the index is out of range.\n    if (index < 0 || index >= list.count) {\n      return;\n    }\n\n    // Look up the old size of the section.\n    let oldSize = list.sizeOf(index);\n\n    // Normalize the new size of the section.\n    let newSize = list.clampSize(size);\n\n    // Bail early if the size does not change.\n    if (oldSize === newSize) {\n      return;\n    }\n\n    // Resize the section in the list.\n    list.resize(index, newSize);\n\n    // Get the current size of the viewport.\n    let vw = this._viewportWidth;\n    let vh = this._viewportHeight;\n\n    // If there is nothing to paint, sync the scroll state.\n    if (!this._viewport.isVisible || vw === 0 || vh === 0) {\n      this._syncScrollState();\n      return;\n    }\n\n    // Compute the size delta.\n    let delta = newSize - oldSize;\n\n    // Look up the column header height.\n    let hh = this.headerHeight;\n\n    // Compute the viewport offset of the section.\n    let offset = list.offsetOf(index) + hh - this._scrollY;\n\n    // Bail early if there is nothing to paint.\n    if (hh >= vh || offset >= vh) {\n      this._syncScrollState();\n      return;\n    }\n\n    // Update the scroll position if the section is not visible.\n    if (offset + oldSize <= hh) {\n      this._scrollY += delta;\n      this._syncScrollState();\n      return;\n    }\n\n    // Compute the paint origin of the section.\n    let pos = Math.max(hh, offset);\n\n    // Paint from the section onward if it spans the viewport.\n    if (offset + oldSize >= vh || offset + newSize >= vh) {\n      this.paintContent(0, pos, vw, vh - pos);\n      this._paintOverlay();\n      this._syncScrollState();\n      return;\n    }\n\n    // Compute the X blit dimensions.\n    let sx = 0;\n    let sw = vw;\n    let dx = 0;\n\n    // Compute the Y blit dimensions.\n    let sy: number;\n    let sh: number;\n    let dy: number;\n    if (offset + newSize <= hh) {\n      sy = hh - delta;\n      sh = vh - sy;\n      dy = hh;\n    } else {\n      sy = offset + oldSize;\n      sh = vh - sy;\n      dy = sy + delta;\n    }\n\n    // Blit the valid content to the destination.\n    this._blitContent(this._canvas, sx, sy, sw, sh, dx, dy);\n\n    // Repaint the section if needed.\n    if (newSize > 0 && offset + newSize > hh) {\n      this.paintContent(0, pos, vw, offset + newSize - pos);\n    }\n\n    // Paint the trailing space as needed.\n    if (this._stretchLastRow && this.pageHeight > this.bodyHeight) {\n      let r = this._rowSections.count - 1;\n      let y = hh + this._rowSections.offsetOf(r);\n      this.paintContent(0, y, vw, vh - y);\n    } else if (delta < 0) {\n      this.paintContent(0, vh + delta, vw, -delta);\n    }\n\n    // Paint the overlay.\n    this._paintOverlay();\n\n    // Sync the scroll state.\n    this._syncScrollState();\n  }\n\n  /**\n   * Resize a column section immediately.\n   */\n  private _resizeColumn(index: number, size: number): void {\n    // Look up the target section list.\n    let list = this._columnSections;\n\n    // Bail early if the index is out of range.\n    if (index < 0 || index >= list.count) {\n      return;\n    }\n\n    // Look up the old size of the section.\n    let oldSize = list.sizeOf(index);\n\n    // Normalize the new size of the section.\n    let newSize = list.clampSize(size);\n\n    // Bail early if the size does not change.\n    if (oldSize === newSize) {\n      return;\n    }\n\n    // Resize the section in the list.\n    list.resize(index, newSize);\n\n    // Get the current size of the viewport.\n    let vw = this._viewportWidth;\n    let vh = this._viewportHeight;\n\n    // If there is nothing to paint, sync the scroll state.\n    if (!this._viewport.isVisible || vw === 0 || vh === 0) {\n      this._syncScrollState();\n      return;\n    }\n\n    // Compute the size delta.\n    let delta = newSize - oldSize;\n\n    // Look up the row header width.\n    let hw = this.headerWidth;\n\n    // Compute the viewport offset of the section.\n    let offset = list.offsetOf(index) + hw - this._scrollX;\n\n    // Bail early if there is nothing to paint.\n    if (hw >= vw || offset >= vw) {\n      this._syncScrollState();\n      return;\n    }\n\n    // Update the scroll position if the section is not visible.\n    if (offset + oldSize <= hw) {\n      this._scrollX += delta;\n      this._syncScrollState();\n      return;\n    }\n\n    // Compute the paint origin of the section.\n    let pos = Math.max(hw, offset);\n\n    // Paint from the section onward if it spans the viewport.\n    if (offset + oldSize >= vw || offset + newSize >= vw) {\n      this.paintContent(pos, 0, vw - pos, vh);\n      this._paintOverlay();\n      this._syncScrollState();\n      return;\n    }\n\n    // Compute the Y blit dimensions.\n    let sy = 0;\n    let sh = vh;\n    let dy = 0;\n\n    // Compute the X blit dimensions.\n    let sx: number;\n    let sw: number;\n    let dx: number;\n    if (offset + newSize <= hw) {\n      sx = hw - delta;\n      sw = vw - sx;\n      dx = hw;\n    } else {\n      sx = offset + oldSize;\n      sw = vw - sx;\n      dx = sx + delta;\n    }\n\n    // Blit the valid content to the destination.\n    this._blitContent(this._canvas, sx, sy, sw, sh, dx, dy);\n\n    // Repaint the section if needed.\n    if (newSize > 0 && offset + newSize > hw) {\n      this.paintContent(pos, 0, offset + newSize - pos, vh);\n    }\n\n    // Paint the trailing space as needed.\n    if (this._stretchLastColumn && this.pageWidth > this.bodyWidth) {\n      let c = this._columnSections.count - 1;\n      let x = hw + this._columnSections.offsetOf(c);\n      this.paintContent(x, 0, vw - x, vh);\n    } else if (delta < 0) {\n      this.paintContent(vw + delta, 0, -delta, vh);\n    }\n\n    // Paint the overlay.\n    this._paintOverlay();\n\n    // Sync the scroll state after painting.\n    this._syncScrollState();\n  }\n\n  /**\n   * Resize a row header section immediately.\n   */\n  private _resizeRowHeader(index: number, size: number): void {\n    // Look up the target section list.\n    let list = this._rowHeaderSections;\n\n    // Bail early if the index is out of range.\n    if (index < 0 || index >= list.count) {\n      return;\n    }\n\n    // Look up the old size of the section.\n    let oldSize = list.sizeOf(index);\n\n    // Normalize the new size of the section.\n    let newSize = list.clampSize(size);\n\n    // Bail early if the size does not change.\n    if (oldSize === newSize) {\n      return;\n    }\n\n    // Resize the section in the list.\n    list.resize(index, newSize);\n\n    // Get the current size of the viewport.\n    let vw = this._viewportWidth;\n    let vh = this._viewportHeight;\n\n    // If there is nothing to paint, sync the scroll state.\n    if (!this._viewport.isVisible || vw === 0 || vh === 0) {\n      this._syncScrollState();\n      return;\n    }\n\n    // Compute the size delta.\n    let delta = newSize - oldSize;\n\n    // Look up the offset of the section.\n    let offset = list.offsetOf(index);\n\n    // Bail early if the section is fully outside the viewport.\n    if (offset >= vw) {\n      this._syncScrollState();\n      return;\n    }\n\n    // Paint the entire tail if the section spans the viewport.\n    if (offset + oldSize >= vw || offset + newSize >= vw) {\n      this.paintContent(offset, 0, vw - offset, vh);\n      this._paintOverlay();\n      this._syncScrollState();\n      return;\n    }\n\n    // Compute the blit content dimensions.\n    let sx = offset + oldSize;\n    let sy = 0;\n    let sw = vw - sx;\n    let sh = vh;\n    let dx = sx + delta;\n    let dy = 0;\n\n    // Blit the valid contents to the destination.\n    this._blitContent(this._canvas, sx, sy, sw, sh, dx, dy);\n\n    // Repaint the header section if needed.\n    if (newSize > 0) {\n      this.paintContent(offset, 0, newSize, vh);\n    }\n\n    // Paint the trailing space as needed.\n    if (this._stretchLastColumn && this.pageWidth > this.bodyWidth) {\n      let c = this._columnSections.count - 1;\n      let x = this.headerWidth + this._columnSections.offsetOf(c);\n      this.paintContent(x, 0, vw - x, vh);\n    } else if (delta < 0) {\n      this.paintContent(vw + delta, 0, -delta, vh);\n    }\n\n    // Paint the overlay.\n    this._paintOverlay();\n\n    // Sync the scroll state after painting.\n    this._syncScrollState();\n  }\n\n  /**\n   * Resize a column header section immediately.\n   */\n  private _resizeColumnHeader(index: number, size: number): void {\n    // Look up the target section list.\n    let list = this._columnHeaderSections;\n\n    // Bail early if the index is out of range.\n    if (index < 0 || index >= list.count) {\n      return;\n    }\n\n    // Look up the old size of the section.\n    let oldSize = list.sizeOf(index);\n\n    // Normalize the new size of the section.\n    let newSize = list.clampSize(size);\n\n    // Bail early if the size does not change.\n    if (oldSize === newSize) {\n      return;\n    }\n\n    // Resize the section in the list.\n    list.resize(index, newSize);\n\n    // Get the current size of the viewport.\n    let vw = this._viewportWidth;\n    let vh = this._viewportHeight;\n\n    // If there is nothing to paint, sync the scroll state.\n    if (!this._viewport.isVisible || vw === 0 || vh === 0) {\n      this._syncScrollState();\n      return;\n    }\n\n    // Paint the overlay.\n    this._paintOverlay();\n\n    // Compute the size delta.\n    let delta = newSize - oldSize;\n\n    // Look up the offset of the section.\n    let offset = list.offsetOf(index);\n\n    // Bail early if the section is fully outside the viewport.\n    if (offset >= vh) {\n      this._syncScrollState();\n      return;\n    }\n\n    // Paint the entire tail if the section spans the viewport.\n    if (offset + oldSize >= vh || offset + newSize >= vh) {\n      this.paintContent(0, offset, vw, vh - offset);\n      this._paintOverlay();\n      this._syncScrollState();\n      return;\n    }\n\n    // Compute the blit content dimensions.\n    let sx = 0;\n    let sy = offset + oldSize;\n    let sw = vw;\n    let sh = vh - sy;\n    let dx = 0;\n    let dy = sy + delta;\n\n    // Blit the valid contents to the destination.\n    this._blitContent(this._canvas, sx, sy, sw, sh, dx, dy);\n\n    // Repaint the header section if needed.\n    if (newSize > 0) {\n      this.paintContent(0, offset, vw, newSize);\n    }\n\n    // Paint the trailing space as needed.\n    if (this._stretchLastRow && this.pageHeight > this.bodyHeight) {\n      let r = this._rowSections.count - 1;\n      let y = this.headerHeight + this._rowSections.offsetOf(r);\n      this.paintContent(0, y, vw, vh - y);\n    } else if (delta < 0) {\n      this.paintContent(0, vh + delta, vw, -delta);\n    }\n\n    // Paint the overlay.\n    this._paintOverlay();\n\n    // Sync the scroll state after painting.\n    this._syncScrollState();\n  }\n\n  /**\n   * Scroll immediately to the specified offset position.\n   */\n  private _scrollTo(x: number, y: number): void {\n    // Floor and clamp the position to the allowable range.\n    x = Math.max(0, Math.min(Math.floor(x), this.maxScrollX));\n    y = Math.max(0, Math.min(Math.floor(y), this.maxScrollY));\n\n    // Synchronize the scroll bar values.\n    this._hScrollBar.value = x;\n    this._vScrollBar.value = y;\n\n    // Compute the delta scroll amount.\n    let dx = x - this._scrollX;\n    let dy = y - this._scrollY;\n\n    // Bail early if there is no effective scroll.\n    if (dx === 0 && dy === 0) {\n      return;\n    }\n\n    // Bail early if the viewport is not visible.\n    if (!this._viewport.isVisible) {\n      this._scrollX = x;\n      this._scrollY = y;\n      return;\n    }\n\n    // Get the current size of the viewport.\n    let width = this._viewportWidth;\n    let height = this._viewportHeight;\n\n    // Bail early if the viewport is empty.\n    if (width === 0 || height === 0) {\n      this._scrollX = x;\n      this._scrollY = y;\n      return;\n    }\n\n    // Get the visible content origin.\n    let contentX = this.headerWidth;\n    let contentY = this.headerHeight;\n\n    // Get the visible content dimensions.\n    let contentWidth = width - contentX;\n    let contentHeight = height - contentY;\n\n    // Bail early if there is no content to draw.\n    if (contentWidth <= 0 && contentHeight <= 0) {\n      this._scrollX = x;\n      this._scrollY = y;\n      return;\n    }\n\n    // Compute the area which needs painting for the `dx` scroll.\n    let dxArea = 0;\n    if (dx !== 0 && contentWidth > 0) {\n      if (Math.abs(dx) >= contentWidth) {\n        dxArea = contentWidth * height;\n      } else {\n        dxArea = Math.abs(dx) * height;\n      }\n    }\n\n    // Compute the area which needs painting for the `dy` scroll.\n    let dyArea = 0;\n    if (dy !== 0 && contentHeight > 0) {\n      if (Math.abs(dy) >= contentHeight) {\n        dyArea = width * contentHeight;\n      } else {\n        dyArea = width * Math.abs(dy);\n      }\n    }\n\n    // If the area sum is larger than the total, paint everything.\n    if ((dxArea + dyArea) >= (width * height)) {\n      this._scrollX = x;\n      this._scrollY = y;\n      this.paintContent(0, 0, width, height);\n      this._paintOverlay();\n      return;\n    }\n\n    // Update the internal Y scroll position.\n    this._scrollY = y;\n\n    // Scroll the Y axis if needed. If the scroll distance exceeds\n    // the visible height, paint everything. Otherwise, blit the\n    // valid content and paint the dirty region.\n    if (dy !== 0 && contentHeight > 0) {\n      if (Math.abs(dy) >= contentHeight) {\n        this.paintContent(0, contentY, width, contentHeight);\n      } else {\n        let x = 0;\n        let y = dy < 0 ? contentY : contentY + dy;\n        let w = width;\n        let h = contentHeight - Math.abs(dy);\n        this._blitContent(this._canvas, x, y, w, h, x, y - dy);\n        this.paintContent(0, dy < 0 ? contentY : height - dy, width, Math.abs(dy));\n      }\n    }\n\n    // Update the internal X scroll position.\n    this._scrollX = x;\n\n    // Scroll the X axis if needed. If the scroll distance exceeds\n    // the visible width, paint everything. Otherwise, blit the\n    // valid content and paint the dirty region.\n    if (dx !== 0 && contentWidth > 0) {\n      if (Math.abs(dx) >= contentWidth) {\n        this.paintContent(contentX, 0, contentWidth, height);\n      } else {\n        let x = dx < 0 ? contentX : contentX + dx;\n        let y = 0;\n        let w = contentWidth - Math.abs(dx);\n        let h = height;\n        this._blitContent(this._canvas, x, y, w, h, x - dx, y);\n        this.paintContent(dx < 0 ? contentX : width - dx, 0, Math.abs(dx), height);\n      }\n    }\n\n    // Paint the overlay.\n    this._paintOverlay();\n  }\n\n  /**\n   * Blit content into the on-screen grid canvas.\n   *\n   * The rect should be expressed in viewport coordinates.\n   *\n   * This automatically accounts for the dpi ratio.\n   */\n  private _blitContent(source: HTMLCanvasElement, x: number, y: number, w: number, h: number, dx: number, dy: number): void {\n    // Scale the blit coordinates by the dpi ratio.\n    x *= this._dpiRatio;\n    y *= this._dpiRatio;\n    w *= this._dpiRatio;\n    h *= this._dpiRatio;\n    dx *= this._dpiRatio;\n    dy *= this._dpiRatio;\n\n    // Save the current gc state.\n    this._canvasGC.save();\n\n    // Set the transform to the identity matrix.\n    this._canvasGC.setTransform(1, 0, 0, 1, 0, 0);\n\n    // Draw the specified content.\n    this._canvasGC.drawImage(source, x, y, w, h, dx, dy, w, h);\n\n    // Restore the gc state.\n    this._canvasGC.restore();\n  }\n\n  /**\n   * Paint the grid content for the given dirty rect.\n   *\n   * The rect should be expressed in valid viewport coordinates.\n   *\n   * This is the primary paint entry point. The individual `_draw*`\n   * methods should not be invoked directly. This method dispatches\n   * to the drawing methods in the correct order.\n   */\n  protected paintContent(rx: number, ry: number, rw: number, rh: number): void {\n    // Scale the canvas and buffer GC for the dpi ratio.\n    this._canvasGC.setTransform(this._dpiRatio, 0, 0, this._dpiRatio, 0, 0);\n    this._bufferGC.setTransform(this._dpiRatio, 0, 0, this._dpiRatio, 0, 0);\n\n    // Clear the dirty rect of all content.\n    this._canvasGC.clearRect(rx, ry, rw, rh);\n\n    // Draw the void region.\n    this._drawVoidRegion(rx, ry, rw, rh);\n\n    // Draw the body region.\n    this._drawBodyRegion(rx, ry, rw, rh);\n\n    // Draw the row header region.\n    this._drawRowHeaderRegion(rx, ry, rw, rh);\n\n    // Draw the column header region.\n    this._drawColumnHeaderRegion(rx, ry, rw, rh);\n\n    // Draw the corner header region.\n    this.drawCornerHeaderRegion(rx, ry, rw, rh);\n  }\n\n  /**\n   * Paint the overlay content for the entire grid.\n   *\n   * This is the primary overlay paint entry point. The individual\n   * `_draw*` methods should not be invoked directly. This method\n   * dispatches to the drawing methods in the correct order.\n   */\n  private _paintOverlay(): void {\n    // Scale the overlay GC for the dpi ratio.\n    this._overlayGC.setTransform(this._dpiRatio, 0, 0, this._dpiRatio, 0, 0);\n\n    // Clear the overlay of all content.\n    this._overlayGC.clearRect(0, 0, this._overlay.width, this._overlay.height);\n\n    // Draw the body selections.\n    this._drawBodySelections();\n\n    // Draw the row header selections.\n    this._drawRowHeaderSelections();\n\n    // Draw the column header selections.\n    this._drawColumnHeaderSelections();\n\n    // Draw the cursor.\n    this._drawCursor();\n\n    // Draw the shadows.\n    this._drawShadows();\n  }\n\n  /**\n   * Draw the void region for the dirty rect.\n   */\n  private _drawVoidRegion(rx: number, ry: number, rw: number, rh: number): void {\n    // Look up the void color.\n    let color = this._style.voidColor;\n\n    // Bail if there is no void color.\n    if (!color) {\n      return;\n    }\n\n    // Fill the dirty rect with the void color.\n    this._canvasGC.fillStyle = color;\n    this._canvasGC.fillRect(rx, ry, rw, rh);\n  }\n\n  /**\n   * Draw the body region which intersects the dirty rect.\n   */\n  private _drawBodyRegion(rx: number, ry: number, rw: number, rh: number): void {\n    // Get the visible content dimensions.\n    let contentW = this._columnSections.length - this._scrollX;\n    let contentH = this._rowSections.length - this._scrollY;\n\n    // Bail if there is no content to draw.\n    if (contentW <= 0 || contentH <= 0) {\n      return;\n    }\n\n    // Get the visible content origin.\n    let contentX = this.headerWidth;\n    let contentY = this.headerHeight;\n\n    // Bail if the dirty rect does not intersect the content area.\n    if (rx + rw <= contentX) {\n      return;\n    }\n    if (ry + rh <= contentY) {\n      return;\n    }\n    if (rx >= contentX + contentW) {\n      return;\n    }\n    if (ry >= contentY + contentH) {\n      return;\n    }\n\n    // Fetch the geometry.\n    let bh = this.bodyHeight;\n    let bw = this.bodyWidth;\n    let ph = this.pageHeight;\n    let pw = this.pageWidth;\n\n    // Get the upper and lower bounds of the dirty content area.\n    let x1 = Math.max(rx, contentX);\n    let y1 = Math.max(ry, contentY);\n    let x2 = Math.min(rx + rw - 1, contentX + contentW - 1);\n    let y2 = Math.min(ry + rh - 1, contentY + contentH - 1);\n\n    // Convert the dirty content bounds into cell bounds.\n    let r1 = this._rowSections.indexOf(y1 - contentY + this._scrollY);\n    let c1 = this._columnSections.indexOf(x1 - contentX + this._scrollX);\n    let r2 = this._rowSections.indexOf(y2 - contentY + this._scrollY);\n    let c2 = this._columnSections.indexOf(x2 - contentX + this._scrollX);\n\n    // Fetch the max row and column.\n    let maxRow = this._rowSections.count - 1;\n    let maxColumn = this._columnSections.count - 1;\n\n    // Handle a dirty content area larger than the cell count.\n    if (r2 < 0) {\n      r2 = maxRow;\n    }\n    if (c2 < 0) {\n      c2 = maxColumn;\n    }\n\n    // Convert the cell bounds back to visible coordinates.\n    let x = this._columnSections.offsetOf(c1) + contentX - this._scrollX;\n    let y = this._rowSections.offsetOf(r1) + contentY - this._scrollY;\n\n    // Set up the paint region size variables.\n    let width = 0;\n    let height = 0;\n\n    // Allocate the section sizes arrays.\n    let rowSizes = new Array<number>(r2 - r1 + 1);\n    let columnSizes = new Array<number>(c2 - c1 + 1);\n\n    // Get the row sizes for the region.\n    for (let j = r1; j <= r2; ++j) {\n      let size = this._rowSections.sizeOf(j);\n      rowSizes[j - r1] = size;\n      height += size;\n    }\n\n    // Get the column sizes for the region.\n    for (let i = c1; i <= c2; ++i) {\n      let size = this._columnSections.sizeOf(i);\n      columnSizes[i - c1] = size;\n      width += size;\n    }\n\n    // Adjust the geometry if the last row is streched.\n    if (this._stretchLastRow && ph > bh && r2 === maxRow) {\n      let dh = this.pageHeight - this.bodyHeight;\n      rowSizes[rowSizes.length - 1] += dh;\n      height += dh;\n      y2 += dh;\n    }\n\n    // Adjust the geometry if the last column is streched.\n    if (this._stretchLastColumn && pw > bw && c2 === maxColumn) {\n      let dw = this.pageWidth - this.bodyWidth;\n      columnSizes[columnSizes.length - 1] += dw;\n      width += dw;\n      x2 += dw;\n    }\n\n    // Create the paint region object.\n    let rgn: Private.PaintRegion = {\n      region: 'body',\n      xMin: x1, yMin: y1,\n      xMax: x2, yMax: y2,\n      x, y, width, height,\n      row: r1, column: c1,\n      rowSizes, columnSizes\n    };\n\n    // Draw the background.\n    this._drawBackground(rgn, this._style.backgroundColor);\n\n    // Draw the row background.\n    this._drawRowBackground(rgn, this._style.rowBackgroundColor);\n\n    // Draw the column background.\n    this._drawColumnBackground(rgn, this._style.columnBackgroundColor);\n\n    // Draw the cell content for the paint region.\n    this._drawCells(rgn);\n\n    // Draw the horizontal grid lines.\n    this._drawHorizontalGridLines(rgn,\n      this._style.horizontalGridLineColor ||\n      this._style.gridLineColor\n    );\n\n    // Draw the vertical grid lines.\n    this._drawVerticalGridLines(rgn,\n      this._style.verticalGridLineColor ||\n      this._style.gridLineColor\n    );\n  }\n\n  /**\n   * Draw the row header region which intersects the dirty rect.\n   */\n  private _drawRowHeaderRegion(rx: number, ry: number, rw: number, rh: number): void {\n    // Get the visible content dimensions.\n    let contentW = this.headerWidth;\n    let contentH = this.bodyHeight - this._scrollY;\n\n    // Bail if there is no content to draw.\n    if (contentW <= 0 || contentH <= 0) {\n      return;\n    }\n\n    // Get the visible content origin.\n    let contentX = 0;\n    let contentY = this.headerHeight;\n\n    // Bail if the dirty rect does not intersect the content area.\n    if (rx + rw <= contentX) {\n      return;\n    }\n    if (ry + rh <= contentY) {\n      return;\n    }\n    if (rx >= contentX + contentW) {\n      return;\n    }\n    if (ry >= contentY + contentH) {\n      return;\n    }\n\n    // Fetch the geometry.\n    let bh = this.bodyHeight;\n    let ph = this.pageHeight;\n\n    // Get the upper and lower bounds of the dirty content area.\n    let x1 = rx;\n    let y1 = Math.max(ry, contentY);\n    let x2 = Math.min(rx + rw - 1, contentX + contentW - 1);\n    let y2 = Math.min(ry + rh - 1, contentY + contentH - 1);\n\n    // Convert the dirty content bounds into cell bounds.\n    let r1 = this._rowSections.indexOf(y1 - contentY + this._scrollY);\n    let c1 = this._rowHeaderSections.indexOf(x1);\n    let r2 = this._rowSections.indexOf(y2 - contentY + this._scrollY);\n    let c2 = this._rowHeaderSections.indexOf(x2);\n\n    // Fetch max row and column.\n    let maxRow = this._rowSections.count - 1;\n    let maxColumn = this._rowHeaderSections.count - 1;\n\n    // Handle a dirty content area larger than the cell count.\n    if (r2 < 0) {\n      r2 = maxRow;\n    }\n    if (c2 < 0) {\n      c2 = maxColumn;\n    }\n\n    // Convert the cell bounds back to visible coordinates.\n    let x = this._rowHeaderSections.offsetOf(c1);\n    let y = this._rowSections.offsetOf(r1) + contentY - this._scrollY;\n\n    // Set up the paint region size variables.\n    let width = 0;\n    let height = 0;\n\n    // Allocate the section sizes arrays.\n    let rowSizes = new Array<number>(r2 - r1 + 1);\n    let columnSizes = new Array<number>(c2 - c1 + 1);\n\n    // Get the row sizes for the region.\n    for (let j = r1; j <= r2; ++j) {\n      let size = this._rowSections.sizeOf(j);\n      rowSizes[j - r1] = size;\n      height += size;\n    }\n\n    // Get the column sizes for the region.\n    for (let i = c1; i <= c2; ++i) {\n      let size = this._rowHeaderSections.sizeOf(i);\n      columnSizes[i - c1] = size;\n      width += size;\n    }\n\n    // Adjust the geometry if the last row is stretched.\n    if (this._stretchLastRow && ph > bh && r2 === maxRow) {\n      let dh = this.pageHeight - this.bodyHeight;\n      rowSizes[rowSizes.length - 1] += dh;\n      height += dh;\n      y2 += dh;\n    }\n\n    // Create the paint region object.\n    let rgn: Private.PaintRegion = {\n      region: 'row-header',\n      xMin: x1, yMin: y1,\n      xMax: x2, yMax: y2,\n      x, y, width, height,\n      row: r1, column: c1,\n      rowSizes, columnSizes\n    };\n\n    // Draw the background.\n    this._drawBackground(rgn, this._style.headerBackgroundColor);\n\n    // Draw the cell content for the paint region.\n    this._drawCells(rgn);\n\n    // Draw the horizontal grid lines.\n    this._drawHorizontalGridLines(rgn,\n      this._style.headerHorizontalGridLineColor ||\n      this._style.headerGridLineColor\n    );\n\n    // Draw the vertical grid lines.\n    this._drawVerticalGridLines(rgn,\n      this._style.headerVerticalGridLineColor ||\n      this._style.headerGridLineColor\n    );\n  }\n\n  /**\n   * Draw the column header region which intersects the dirty rect.\n   */\n  private _drawColumnHeaderRegion(rx: number, ry: number, rw: number, rh: number): void {\n    // Get the visible content dimensions.\n    let contentW = this.bodyWidth - this._scrollX;\n    let contentH = this.headerHeight;\n\n    // Bail if there is no content to draw.\n    if (contentW <= 0 || contentH <= 0) {\n      return;\n    }\n\n    // Get the visible content origin.\n    let contentX = this.headerWidth;\n    let contentY = 0;\n\n    // Bail if the dirty rect does not intersect the content area.\n    if (rx + rw <= contentX) {\n      return;\n    }\n    if (ry + rh <= contentY) {\n      return;\n    }\n    if (rx >= contentX + contentW) {\n      return;\n    }\n    if (ry >= contentY + contentH) {\n      return;\n    }\n\n    // Fetch the geometry.\n    let bw = this.bodyWidth;\n    let pw = this.pageWidth;\n\n    // Get the upper and lower bounds of the dirty content area.\n    let x1 = Math.max(rx, contentX);\n    let y1 = ry;\n    let x2 = Math.min(rx + rw - 1, contentX + contentW - 1);\n    let y2 = Math.min(ry + rh - 1, contentY + contentH - 1);\n\n    // Convert the dirty content bounds into cell bounds.\n    let r1 = this._columnHeaderSections.indexOf(y1);\n    let c1 = this._columnSections.indexOf(x1 - contentX + this._scrollX);\n    let r2 = this._columnHeaderSections.indexOf(y2);\n    let c2 = this._columnSections.indexOf(x2 - contentX + this._scrollX);\n\n    // Fetch the max row and column.\n    let maxRow = this._columnHeaderSections.count - 1;\n    let maxColumn = this._columnSections.count - 1;\n\n    // Handle a dirty content area larger than the cell count.\n    if (r2 < 0) {\n      r2 = maxRow;\n    }\n    if (c2 < 0) {\n      c2 = maxColumn;\n    }\n\n    // Convert the cell bounds back to visible coordinates.\n    let x = this._columnSections.offsetOf(c1) + contentX - this._scrollX;\n    let y = this._columnHeaderSections.offsetOf(r1);\n\n    // Set up the paint region size variables.\n    let width = 0;\n    let height = 0;\n\n    // Allocate the section sizes arrays.\n    let rowSizes = new Array<number>(r2 - r1 + 1);\n    let columnSizes = new Array<number>(c2 - c1 + 1);\n\n    // Get the row sizes for the region.\n    for (let j = r1; j <= r2; ++j) {\n      let size = this._columnHeaderSections.sizeOf(j);\n      rowSizes[j - r1] = size;\n      height += size;\n    }\n\n    // Get the column sizes for the region.\n    for (let i = c1; i <= c2; ++i) {\n      let size = this._columnSections.sizeOf(i);\n      columnSizes[i - c1] = size;\n      width += size;\n    }\n\n    // Adjust the geometry if the last column is stretched.\n    if (this._stretchLastColumn && pw > bw && c2 === maxColumn) {\n      let dw = this.pageWidth - this.bodyWidth;\n      columnSizes[columnSizes.length - 1] += dw;\n      width += dw;\n      x2 += dw;\n    }\n\n    // Create the paint region object.\n    let rgn: Private.PaintRegion = {\n      region: 'column-header',\n      xMin: x1, yMin: y1,\n      xMax: x2, yMax: y2,\n      x, y, width, height,\n      row: r1, column: c1,\n      rowSizes, columnSizes\n    };\n\n    // Draw the background.\n    this._drawBackground(rgn, this._style.headerBackgroundColor);\n\n    // Draw the cell content for the paint region.\n    this._drawCells(rgn);\n\n    // Draw the horizontal grid lines.\n    this._drawHorizontalGridLines(rgn,\n      this._style.headerHorizontalGridLineColor ||\n      this._style.headerGridLineColor\n    );\n\n    // Draw the vertical grid lines.\n    this._drawVerticalGridLines(rgn,\n      this._style.headerVerticalGridLineColor ||\n      this._style.headerGridLineColor\n    );\n  }\n\n  /**\n   * Draw the corner header region which intersects the dirty rect.\n   */\n  protected drawCornerHeaderRegion(rx: number, ry: number, rw: number, rh: number): void {\n    // Get the visible content dimensions.\n    let contentW = this.headerWidth;\n    let contentH = this.headerHeight;\n\n    // Bail if there is no content to draw.\n    if (contentW <= 0 || contentH <= 0) {\n      return;\n    }\n\n    // Get the visible content origin.\n    let contentX = 0;\n    let contentY = 0;\n\n    // Bail if the dirty rect does not intersect the content area.\n    if (rx + rw <= contentX) {\n      return;\n    }\n    if (ry + rh <= contentY) {\n      return;\n    }\n    if (rx >= contentX + contentW) {\n      return;\n    }\n    if (ry >= contentY + contentH) {\n      return;\n    }\n\n    // Get the upper and lower bounds of the dirty content area.\n    let x1 = rx;\n    let y1 = ry;\n    let x2 = Math.min(rx + rw - 1, contentX + contentW - 1);\n    let y2 = Math.min(ry + rh - 1, contentY + contentH - 1);\n\n    // Convert the dirty content bounds into cell bounds.\n    let r1 = this._columnHeaderSections.indexOf(y1);\n    let c1 = this._rowHeaderSections.indexOf(x1);\n    let r2 = this._columnHeaderSections.indexOf(y2);\n    let c2 = this._rowHeaderSections.indexOf(x2);\n\n    // Handle a dirty content area larger than the cell count.\n    if (r2 < 0) {\n      r2 = this._columnHeaderSections.count - 1;\n    }\n    if (c2 < 0) {\n      c2 = this._rowHeaderSections.count - 1;\n    }\n\n    // Convert the cell bounds back to visible coordinates.\n    let x = this._rowHeaderSections.offsetOf(c1);\n    let y = this._columnHeaderSections.offsetOf(r1);\n\n    // Set up the paint region size variables.\n    let width = 0;\n    let height = 0;\n\n    // Allocate the section sizes arrays.\n    let rowSizes = new Array<number>(r2 - r1 + 1);\n    let columnSizes = new Array<number>(c2 - c1 + 1);\n\n    // Get the row sizes for the region.\n    for (let j = r1; j <= r2; ++j) {\n      let size = this._columnHeaderSections.sizeOf(j);\n      rowSizes[j - r1] = size;\n      height += size;\n    }\n\n    // Get the column sizes for the region.\n    for (let i = c1; i <= c2; ++i) {\n      let size = this._rowHeaderSections.sizeOf(i);\n      columnSizes[i - c1] = size;\n      width += size;\n    }\n\n    // Create the paint region object.\n    let rgn: Private.PaintRegion = {\n      region: 'corner-header',\n      xMin: x1, yMin: y1,\n      xMax: x2, yMax: y2,\n      x, y, width, height,\n      row: r1, column: c1,\n      rowSizes, columnSizes\n    };\n\n    // Draw the background.\n    this._drawBackground(rgn, this._style.headerBackgroundColor);\n\n    // Draw the cell content for the paint region.\n    this._drawCells(rgn);\n\n    // Draw the horizontal grid lines.\n    this._drawHorizontalGridLines(rgn,\n      this._style.headerHorizontalGridLineColor ||\n      this._style.headerGridLineColor\n    );\n\n    // Draw the vertical grid lines.\n    this._drawVerticalGridLines(rgn,\n      this._style.headerVerticalGridLineColor ||\n      this._style.headerGridLineColor\n    );\n  }\n\n  /**\n   * Draw the background for the given paint region.\n   */\n  private _drawBackground(rgn: Private.PaintRegion, color: string | undefined): void {\n    // Bail if there is no color to draw.\n    if (!color) {\n      return;\n    }\n\n    // Unpack the region.\n    let { xMin, yMin, xMax, yMax } = rgn;\n\n    // Fill the region with the specified color.\n    this._canvasGC.fillStyle = color;\n    this._canvasGC.fillRect(xMin, yMin, xMax - xMin + 1, yMax - yMin + 1);\n  }\n\n  /**\n   * Draw the row background for the given paint region.\n   */\n  private _drawRowBackground(rgn: Private.PaintRegion, colorFn: ((i: number) => string) | undefined): void {\n    // Bail if there is no color function.\n    if (!colorFn) {\n      return;\n    }\n\n    // Compute the X bounds for the row.\n    let x1 = Math.max(rgn.xMin, rgn.x);\n    let x2 = Math.min(rgn.x + rgn.width - 1, rgn.xMax);\n\n    // Draw the background for the rows in the region.\n    for (let y = rgn.y, j = 0, n = rgn.rowSizes.length; j < n; ++j) {\n      // Fetch the size of the row.\n      let size = rgn.rowSizes[j];\n\n      // Skip zero sized rows.\n      if (size === 0) {\n        continue;\n      }\n\n      // Get the background color for the row.\n      let color = colorFn(rgn.row + j);\n\n      // Fill the row with the background color if needed.\n      if (color) {\n        let y1 = Math.max(rgn.yMin, y);\n        let y2 = Math.min(y + size - 1, rgn.yMax);\n        this._canvasGC.fillStyle = color;\n        this._canvasGC.fillRect(x1, y1, x2 - x1 + 1, y2 - y1 + 1);\n      }\n\n      // Increment the running Y coordinate.\n      y += size;\n    }\n  }\n\n  /**\n   * Draw the column background for the given paint region.\n   */\n  private _drawColumnBackground(rgn: Private.PaintRegion, colorFn: ((i: number) => string) | undefined): void {\n    // Bail if there is no color function.\n    if (!colorFn) {\n      return;\n    }\n\n    // Compute the Y bounds for the column.\n    let y1 = Math.max(rgn.yMin, rgn.y);\n    let y2 = Math.min(rgn.y + rgn.height - 1, rgn.yMax);\n\n    // Draw the background for the columns in the region.\n    for (let x = rgn.x, i = 0, n = rgn.columnSizes.length; i < n; ++i) {\n      // Fetch the size of the column.\n      let size = rgn.columnSizes[i];\n\n      // Skip zero sized columns.\n      if (size === 0) {\n        continue;\n      }\n\n      // Get the background color for the column.\n      let color = colorFn(rgn.column + i);\n\n      // Fill the column with the background color if needed.\n      if (color) {\n        let x1 = Math.max(rgn.xMin, x);\n        let x2 = Math.min(x + size - 1, rgn.xMax);\n        this._canvasGC.fillStyle = color;\n        this._canvasGC.fillRect(x1, y1, x2 - x1 + 1, y2 - y1 + 1);\n      }\n\n      // Increment the running X coordinate.\n      x += size;\n    }\n  }\n\n  /**\n   * Draw the cells for the given paint region.\n   */\n  private _drawCells(rgn: Private.PaintRegion): void {\n    // Bail if there is no data model.\n    if (!this._dataModel) {\n      return;\n    }\n\n    // Set up the cell config object for rendering.\n    let config = {\n      x: 0, y: 0, width: 0, height: 0,\n      region: rgn.region, row: 0, column: 0,\n      value: (null as any), metadata: DataModel.emptyMetadata\n    };\n\n    // Save the buffer gc before wrapping.\n    this._bufferGC.save();\n\n    // Wrap the buffer gc for painting the cells.\n    let gc = new GraphicsContext(this._bufferGC);\n\n    // Compute the actual Y bounds for the cell range.\n    let y1 = Math.max(rgn.yMin, rgn.y);\n    let y2 = Math.min(rgn.y + rgn.height - 1, rgn.yMax);\n\n    // Loop over the columns in the region.\n    for (let x = rgn.x, i = 0, n = rgn.columnSizes.length; i < n; ++i) {\n      // Fetch the size of the column.\n      let width = rgn.columnSizes[i];\n\n      // Skip zero sized columns.\n      if (width === 0) {\n        continue;\n      }\n\n      // Compute the column index.\n      let column = rgn.column + i;\n\n      // Update the config for the current column.\n      config.x = x;\n      config.width = width;\n      config.column = column;\n\n      // Clear the buffer rect for the column.\n      gc.clearRect(x, rgn.y, width, rgn.height);\n\n      // Save the GC state.\n      gc.save();\n\n      // Loop over the rows in the column.\n      for (let y = rgn.y, j = 0, n = rgn.rowSizes.length; j < n; ++j) {\n        // Fetch the size of the row.\n        let height = rgn.rowSizes[j];\n\n        // Skip zero sized rows.\n        if (height === 0) {\n          continue;\n        }\n\n        // Compute the row index.\n        let row = rgn.row + j;\n\n        // Get the value for the cell.\n        let value: any;\n        try {\n          value = this._dataModel.data(rgn.region, row, column);\n        } catch (err) {\n          value = undefined;\n          console.error(err);\n        }\n\n        // Get the metadata for the cell.\n        let metadata: DataModel.Metadata;\n        try {\n          metadata = this._dataModel.metadata(rgn.region, row, column);\n        } catch (err) {\n          metadata = DataModel.emptyMetadata;\n          console.error(err);\n        }\n\n        // Update the config for the current cell.\n        config.y = y;\n        config.height = height;\n        config.row = row;\n        config.value = value;\n        config.metadata = metadata;\n\n        // Get the renderer for the cell.\n        let renderer = this._cellRenderers.get(config);\n\n        // Save the GC state.\n        gc.save();\n\n        // Paint the cell into the off-screen buffer.\n        try {\n          renderer.paint(gc, config);\n        } catch (err) {\n          console.error(err);\n        }\n\n        // Restore the GC state.\n        gc.restore();\n\n        // Increment the running Y coordinate.\n        y += height;\n      }\n\n      // Restore the GC state.\n      gc.restore();\n\n      // Compute the actual X bounds for the column.\n      let x1 = Math.max(rgn.xMin, x);\n      let x2 = Math.min(x + width - 1, rgn.xMax);\n\n      // Blit the off-screen buffer column into the on-screen canvas.\n      //\n      // This is *much* faster than drawing directly into the on-screen\n      // canvas with a clip rect on the column. Managed column clipping\n      // is required to prevent cell renderers from needing to set up a\n      // clip rect for handling horizontal overflow text (slow!).\n      this._blitContent(this._buffer, x1, y1, x2 - x1 + 1, y2 - y1 + 1, x1, y1);\n\n      // Increment the running X coordinate.\n      x += width;\n    }\n\n    // Dispose of the wrapped gc.\n    gc.dispose();\n\n    // Restore the final buffer gc state.\n    this._bufferGC.restore();\n  }\n\n  /**\n   * Draw the horizontal grid lines for the given paint region.\n   */\n  private _drawHorizontalGridLines(rgn: Private.PaintRegion, color: string | undefined): void {\n    // Bail if there is no color to draw.\n    if (!color) {\n      return;\n    }\n\n    // Compute the X bounds for the horizontal lines.\n    let x1 = Math.max(rgn.xMin, rgn.x);\n    let x2 = Math.min(rgn.x + rgn.width, rgn.xMax + 1);\n\n    // Begin the path for the grid lines.\n    this._canvasGC.beginPath();\n\n    // Set the line width for the grid lines.\n    this._canvasGC.lineWidth = 1;\n\n    // Fetch the geometry.\n    let bh = this.bodyHeight;\n    let ph = this.pageHeight;\n\n    // Fetch the number of grid lines to be drawn.\n    let n = rgn.rowSizes.length;\n\n    // Adjust the count down if the last line shouldn't be drawn.\n    if (this._stretchLastRow && ph > bh) {\n      if (rgn.row + n === this._rowSections.count) {\n        n -= 1;\n      }\n    }\n\n    // Draw the horizontal grid lines.\n    for (let y = rgn.y, j = 0; j < n; ++j) {\n      // Fetch the size of the row.\n      let size = rgn.rowSizes[j];\n\n      // Skip zero sized rows.\n      if (size === 0) {\n        continue;\n      }\n\n      // Compute the Y position of the line.\n      let pos = y + size - 1;\n\n      // Draw the line if it's in range of the dirty rect.\n      if (pos >= rgn.yMin && pos <= rgn.yMax) {\n        this._canvasGC.moveTo(x1, pos + 0.5);\n        this._canvasGC.lineTo(x2, pos + 0.5);\n      }\n\n      // Increment the running Y coordinate.\n      y += size;\n    }\n\n    // Stroke the lines with the specified color.\n    this._canvasGC.strokeStyle = color;\n    this._canvasGC.stroke();\n  }\n\n  /**\n   * Draw the vertical grid lines for the given paint region.\n   */\n  private _drawVerticalGridLines(rgn: Private.PaintRegion, color: string | undefined): void {\n    // Bail if there is no color to draw.\n    if (!color) {\n      return;\n    }\n\n    // Compute the Y bounds for the vertical lines.\n    let y1 = Math.max(rgn.yMin, rgn.y);\n    let y2 = Math.min(rgn.y + rgn.height, rgn.yMax + 1);\n\n    // Begin the path for the grid lines\n    this._canvasGC.beginPath();\n\n    // Set the line width for the grid lines.\n    this._canvasGC.lineWidth = 1;\n\n    // Fetch the geometry.\n    let bw = this.bodyWidth;\n    let pw = this.pageWidth;\n\n    // Fetch the number of grid lines to be drawn.\n    let n = rgn.columnSizes.length;\n\n    // Adjust the count down if the last line shouldn't be drawn.\n    if (this._stretchLastColumn && pw > bw) {\n      if (rgn.column + n === this._columnSections.count) {\n        n -= 1;\n      }\n    }\n\n    // Draw the vertical grid lines.\n    for (let x = rgn.x, i = 0; i < n; ++i) {\n      // Fetch the size of the column.\n      let size = rgn.columnSizes[i];\n\n      // Skip zero sized columns.\n      if (size === 0) {\n        continue;\n      }\n\n      // Compute the X position of the line.\n      let pos = x + size - 1;\n\n      // Draw the line if it's in range of the dirty rect.\n      if (pos >= rgn.xMin && pos <= rgn.xMax) {\n        this._canvasGC.moveTo(pos + 0.5, y1);\n        this._canvasGC.lineTo(pos + 0.5, y2);\n      }\n\n      // Increment the running X coordinate.\n      x += size;\n    }\n\n    // Stroke the lines with the specified color.\n    this._canvasGC.strokeStyle = color;\n    this._canvasGC.stroke();\n  }\n\n  /**\n   * Draw the body selections for the data grid.\n   */\n  private _drawBodySelections(): void {\n    // Fetch the selection model.\n    let model = this._selectionModel;\n\n    // Bail early if there are no selections.\n    if (!model || model.isEmpty) {\n      return;\n    }\n\n    // Fetch the selection colors.\n    let fill = this._style.selectionFillColor;\n    let stroke = this._style.selectionBorderColor;\n\n    // Bail early if there is nothing to draw.\n    if (!fill && !stroke) {\n      return;\n    }\n\n    // Fetch the scroll geometry.\n    let sx = this._scrollX;\n    let sy = this._scrollY;\n\n    // Get the first visible cell of the grid.\n    let r1 = this._rowSections.indexOf(sy);\n    let c1 = this._columnSections.indexOf(sx);\n\n    // Bail early if there are no visible cells.\n    if (r1 < 0 || c1 < 0) {\n      return;\n    }\n\n    // Fetch the extra geometry.\n    let bw = this.bodyWidth;\n    let bh = this.bodyHeight;\n    let pw = this.pageWidth;\n    let ph = this.pageHeight;\n    let hw = this.headerWidth;\n    let hh = this.headerHeight;\n\n    // Get the last visible cell of the grid.\n    let r2 = this._rowSections.indexOf(sy + ph);\n    let c2 = this._columnSections.indexOf(sx + pw);\n\n    // Fetch the max row and column.\n    let maxRow = this._rowSections.count - 1;\n    let maxColumn = this._columnSections.count - 1;\n\n    // Clamp the last cell if the void space is visible.\n    r2 = r2 < 0 ? maxRow : r2;\n    c2 = c2 < 0 ? maxColumn : c2;\n\n    // Fetch the overlay gc.\n    let gc = this._overlayGC;\n\n    // Save the gc state.\n    gc.save();\n\n    // Set up the body clipping rect.\n    gc.beginPath();\n    gc.rect(hw, hh, pw, ph);\n    gc.clip();\n\n    // Set up the gc style.\n    if (fill) {\n      gc.fillStyle = fill;\n    }\n    if (stroke) {\n      gc.strokeStyle = stroke;\n      gc.lineWidth = 1;\n    }\n\n    // Iterate over the selections.\n    let it = model.selections();\n    let s: SelectionModel.Selection | undefined;\n    while ((s = it.next()) !== undefined) {\n      // Skip the section if it's not visible.\n      if (s.r1 < r1 && s.r2 < r1) {\n        continue;\n      }\n      if (s.r1 > r2 && s.r2 > r2) {\n        continue\n      }\n      if (s.c1 < c1 && s.c2 < c1) {\n        continue;\n      }\n      if (s.c1 > c2 && s.c2 > c2) {\n        continue\n      }\n\n      // Clamp the cell to the model bounds.\n      let sr1 = Math.max(0, Math.min(s.r1, maxRow));\n      let sc1 = Math.max(0, Math.min(s.c1, maxColumn));\n      let sr2 = Math.max(0, Math.min(s.r2, maxRow));\n      let sc2 = Math.max(0, Math.min(s.c2, maxColumn));\n\n      // Swap index order if needed.\n      let tmp: number;\n      if (sr1 > sr2) {\n        tmp = sr1;\n        sr1 = sr2;\n        sr2 = tmp;\n      }\n      if (sc1 > sc2) {\n        tmp = sc1;\n        sc1 = sc2;\n        sc2 = tmp;\n      }\n\n      // Convert to pixel coordinates.\n      let x1 = this._columnSections.offsetOf(sc1) - sx + hw;\n      let y1 = this._rowSections.offsetOf(sr1) - sy + hh;\n      let x2 = this._columnSections.extentOf(sc2) - sx + hw;\n      let y2 = this._rowSections.extentOf(sr2) - sy + hh;\n\n      // Adjust the trailing X coordinate for column stretch.\n      if (this._stretchLastColumn && pw > bw && sc2 === maxColumn) {\n        x2 = hw + pw - 1;\n      }\n\n      // Adjust the trailing Y coordinate for row stretch.\n      if (this._stretchLastRow && ph > bh && sr2 === maxRow) {\n        y2 = hh + ph - 1;\n      }\n\n      // Clamp the bounds to just outside of the clipping rect.\n      x1 = Math.max(hw - 1, x1);\n      y1 = Math.max(hh - 1, y1);\n      x2 = Math.min(hw + pw + 1, x2);\n      y2 = Math.min(hh + ph + 1, y2);\n\n      // Skip zero sized ranges.\n      if (x2 < x1 || y2 < y1) {\n        continue;\n      }\n\n      // Fill the rect if needed.\n      if (fill) {\n        gc.fillRect(x1, y1, x2 - x1 + 1, y2 - y1 + 1);\n      }\n\n      // Stroke the rect if needed.\n      if (stroke) {\n        gc.strokeRect(x1 - .5, y1 - .5, x2 - x1 + 1, y2 - y1 + 1);\n      }\n    }\n\n    // Restore the gc state.\n    gc.restore();\n  }\n\n  /**\n   * Draw the row header selections for the data grid.\n   */\n  private _drawRowHeaderSelections(): void {\n    // Fetch the selection model.\n    let model = this._selectionModel;\n\n    // Bail early if there are no selections or if the selectionMode is the entire column.\n    if (!model || model.isEmpty || model.selectionMode == 'column') {\n      return;\n    }\n\n    // Bail early if the row headers are not visible.\n    if (this.headerWidth === 0 || this.pageHeight === 0) {\n      return;\n    }\n\n    // Fetch the selection colors.\n    let fill = this._style.headerSelectionFillColor;\n    let stroke = this._style.headerSelectionBorderColor;\n\n    // Bail early if there is nothing to draw.\n    if (!fill && !stroke) {\n      return;\n    }\n\n    // Fetch common geometry.\n    let sy = this._scrollY;\n    let bh = this.bodyHeight;\n    let ph = this.pageHeight;\n    let hw = this.headerWidth;\n    let hh = this.headerHeight;\n    let rs = this._rowSections;\n\n    // Fetch the overlay gc.\n    let gc = this._overlayGC;\n\n    // Save the gc state.\n    gc.save();\n\n    // Set up the header clipping rect.\n    gc.beginPath();\n    gc.rect(0, hh, hw, ph);\n    gc.clip();\n\n    // Set up the gc style.\n    if (fill) {\n      gc.fillStyle = fill;\n    }\n    if (stroke) {\n      gc.strokeStyle = stroke;\n      gc.lineWidth = 1;\n    }\n\n    // Fetch the max row.\n    let maxRow = rs.count - 1;\n\n    // Fetch the visible rows.\n    let r1 = rs.indexOf(sy);\n    let r2 = rs.indexOf(sy + ph - 1);\n    r2 = r2 < 0 ? maxRow : r2;\n\n    // Iterate over the visible rows.\n    for (let j = r1; j <= r2; ++j) {\n      // Skip rows which aren't selected.\n      if (!model.isRowSelected(j)) {\n        continue;\n      }\n\n      // Get the dimensions of the row.\n      let y = rs.offsetOf(j) - sy + hh;\n      let h = rs.sizeOf(j);\n\n      // Adjust the height for row stretch.\n      if (this._stretchLastRow && ph > bh && j === maxRow) {\n        h = hh + ph - y;\n      }\n\n      // Skip zero sized rows.\n      if (h === 0) {\n        continue;\n      }\n\n      // Fill the rect if needed.\n      if (fill) {\n        gc.fillRect(0, y, hw, h);\n      }\n\n      // Draw the border if needed.\n      if (stroke) {\n        gc.beginPath();\n        gc.moveTo(hw - .5, y - 1);\n        gc.lineTo(hw - .5, y + h);\n        gc.stroke();\n      }\n    }\n\n    // Restore the gc state.\n    gc.restore();\n  }\n\n  /**\n   * Draw the column header selections for the data grid.\n   */\n  private _drawColumnHeaderSelections(): void {\n    // Fetch the selection model.\n    let model = this._selectionModel;\n\n    // Bail early if there are no selections or if the selectionMode is the entire row\n    if (!model || model.isEmpty || model.selectionMode == 'row') {\n      return;\n    }\n\n    // Bail early if the column headers are not visible.\n    if (this.headerHeight === 0 || this.pageWidth === 0) {\n      return;\n    }\n\n    // Fetch the selection colors.\n    let fill = this._style.headerSelectionFillColor;\n    let stroke = this._style.headerSelectionBorderColor;\n\n    // Bail early if there is nothing to draw.\n    if (!fill && !stroke) {\n      return;\n    }\n\n    // Fetch common geometry.\n    let sx = this._scrollX;\n    let bw = this.bodyWidth;\n    let pw = this.pageWidth;\n    let hw = this.headerWidth;\n    let hh = this.headerHeight;\n    let cs = this._columnSections;\n\n    // Fetch the overlay gc.\n    let gc = this._overlayGC;\n\n    // Save the gc state.\n    gc.save();\n\n    // Set up the header clipping rect.\n    gc.beginPath();\n    gc.rect(hw, 0, pw, hh);\n    gc.clip();\n\n    // Set up the gc style.\n    if (fill) {\n      gc.fillStyle = fill;\n    }\n    if (stroke) {\n      gc.strokeStyle = stroke;\n      gc.lineWidth = 1;\n    }\n\n    // Fetch the max column.\n    let maxCol = cs.count - 1;\n\n    // Fetch the visible columns.\n    let c1 = cs.indexOf(sx);\n    let c2 = cs.indexOf(sx + pw - 1);\n    c2 = c2 < 0 ? maxCol : c2;\n\n    // Iterate over the visible columns.\n    for (let i = c1; i <= c2; ++i) {\n      // Skip columns which aren't selected.\n      if (!model.isColumnSelected(i)) {\n        continue;\n      }\n\n      // Get the dimensions of the column.\n      let x = cs.offsetOf(i) - sx + hw;\n      let w = cs.sizeOf(i);\n\n      // Adjust the width for column stretch.\n      if (this._stretchLastColumn && pw > bw && i === maxCol) {\n        w = hw + pw - x;\n      }\n\n      // Skip zero sized columns.\n      if (w === 0) {\n        continue;\n      }\n\n      // Fill the rect if needed.\n      if (fill) {\n        gc.fillRect(x, 0, w, hh);\n      }\n\n      // Draw the border if needed.\n      if (stroke) {\n        gc.beginPath();\n        gc.moveTo(x - 1, hh - .5);\n        gc.lineTo(x + w, hh - .5);\n        gc.stroke();\n      }\n    }\n\n    // Restore the gc state.\n    gc.restore();\n  }\n\n  /**\n   * Draw the overlay cursor for the data grid.\n   */\n  private _drawCursor(): void {\n    // Fetch the selection model.\n    let model = this._selectionModel;\n\n    // Bail early if there is no cursor.\n    if (!model || model.isEmpty || model.selectionMode !== 'cell') {\n      return;\n    }\n\n    // Extract the style information.\n    let fill = this._style.cursorFillColor;\n    let stroke = this._style.cursorBorderColor;\n\n    // Bail early if there is nothing to draw.\n    if (!fill && !stroke) {\n      return;\n    }\n\n    // Fetch the cursor location.\n    let row = model.cursorRow;\n    let column = model.cursorColumn;\n\n    // Fetch the max row and column.\n    let maxRow = this._rowSections.count - 1;\n    let maxColumn = this._columnSections.count - 1;\n\n    // Bail early if the cursor is out of bounds.\n    if (row < 0 || row > maxRow) {\n      return;\n    }\n    if (column < 0 || column > maxColumn) {\n      return;\n    }\n\n    // Fetch geometry.\n    let sx = this._scrollX;\n    let sy = this._scrollY;\n    let bw = this.bodyWidth;\n    let bh = this.bodyHeight;\n    let pw = this.pageWidth;\n    let ph = this.pageHeight;\n    let hw = this.headerWidth;\n    let hh = this.headerHeight;\n    let vw = this._viewportWidth;\n    let vh = this._viewportHeight;\n\n    // Get the cursor bounds in viewport coordinates.\n    let x1 = this._columnSections.offsetOf(column) - sx + hw;\n    let x2 = this._columnSections.extentOf(column) - sx + hw;\n    let y1 = this._rowSections.offsetOf(row) - sy + hh;\n    let y2 = this._rowSections.extentOf(row) - sy + hh;\n\n    // Adjust the trailing X coordinate for column stretch.\n    if (this._stretchLastColumn && pw > bw && column === maxColumn) {\n      x2 = vw - 1;\n    }\n\n    // Adjust the trailing Y coordinate for row stretch.\n    if (this._stretchLastRow && ph > bh && row === maxRow) {\n      y2 = vh - 1;\n    }\n\n    // Skip zero sized cursors.\n    if (x2 < x1 || y2 < y1) {\n      return;\n    }\n\n    // Bail early if the cursor is off the screen.\n    if ((x1 - 1) >= vw || (y1 - 1) >= vh || (x2 + 1) < hw || (y2 + 1) < hh) {\n      return;\n    }\n\n    // Fetch the overlay gc.\n    let gc = this._overlayGC;\n\n    // Save the gc state.\n    gc.save();\n\n    // Set up the body clipping rect.\n    gc.beginPath();\n    gc.rect(hw, hh, pw, ph);\n    gc.clip();\n\n    // Clear any existing overlay content.\n    gc.clearRect(x1, y1, x2 - x1 + 1, y2 - y1 + 1);\n\n    // Fill the cursor rect if needed.\n    if (fill) {\n      // Set up the fill style.\n      gc.fillStyle = fill;\n\n      // Fill the cursor rect.\n      gc.fillRect(x1, y1, x2 - x1 + 1, y2 - y1 + 1)\n    }\n\n    // Stroke the cursor border if needed.\n    if (stroke) {\n      // Set up the stroke style.\n      gc.strokeStyle = stroke;\n      gc.lineWidth = 2;\n\n      // Stroke the cursor rect.\n      gc.strokeRect(x1, y1, x2 - x1, y2 - y1);\n    }\n\n    // Restore the gc state.\n    gc.restore();\n  }\n\n  /**\n   * Draw the overlay shadows for the data grid.\n   */\n  private _drawShadows(): void {\n    // Fetch the scroll shadow from the style.\n    let shadow = this._style.scrollShadow;\n\n    // Bail early if there is no shadow to draw.\n    if (!shadow) {\n      return;\n    }\n\n    // Fetch the scroll position.\n    let sx = this._scrollX;\n    let sy = this._scrollY;\n\n    // Fetch maximum scroll position.\n    let sxMax = this.maxScrollX;\n    let syMax = this.maxScrollY;\n\n    // Fetch the header width and height.\n    let hw = this.headerWidth;\n    let hh = this.headerHeight;\n\n    // Fetch the page width and height.\n    let pw = this.pageWidth;\n    let ph = this.pageHeight;\n\n    // Fetch the viewport width and height.\n    let vw = this._viewportWidth;\n    let vh = this._viewportHeight;\n\n    // Fetch the body width and height.\n    let bw = this.bodyWidth;\n    let bh = this.bodyHeight;\n\n    // Adjust the body size for row and column stretch.\n    if (this._stretchLastRow && ph > bh) {\n      bh = ph;\n    }\n    if (this._stretchLastColumn && pw > bw) {\n      bw = pw;\n    }\n\n    // Fetch the gc object.\n    let gc = this._overlayGC;\n\n    // Save the gc state.\n    gc.save();\n\n    // Draw the column header shadow if needed.\n    if (sy > 0) {\n      // Set up the gradient coordinates.\n      let x0 = 0;\n      let y0 = hh;\n      let x1 = 0;\n      let y1 = y0 + shadow.size;\n\n      // Create the gradient object.\n      let grad = gc.createLinearGradient(x0, y0, x1, y1);\n\n      // Set the gradient stops.\n      grad.addColorStop(0, shadow.color1);\n      grad.addColorStop(0.5, shadow.color2);\n      grad.addColorStop(1, shadow.color3);\n\n      // Set up the rect coordinates.\n      let x = 0;\n      let y = hh;\n      let w = hw + Math.min(pw, bw - sx);\n      let h = shadow.size;\n\n      // Fill the shadow rect with the fill style.\n      gc.fillStyle = grad;\n      gc.fillRect(x, y, w, h);\n    }\n\n    // Draw the row header shadow if needed.\n    if (sx > 0) {\n      // Set up the gradient coordinates.\n      let x0 = hw;\n      let y0 = 0;\n      let x1 = x0 + shadow.size;\n      let y1 = 0;\n\n      // Create the gradient object.\n      let grad = gc.createLinearGradient(x0, y0, x1, y1);\n\n      // Set the gradient stops.\n      grad.addColorStop(0, shadow.color1);\n      grad.addColorStop(0.5, shadow.color2);\n      grad.addColorStop(1, shadow.color3);\n\n      // Set up the rect coordinates.\n      let x = hw;\n      let y = 0;\n      let w = shadow.size;\n      let h = hh + Math.min(ph, bh - sy);\n\n      // Fill the shadow rect with the fill style.\n      gc.fillStyle = grad;\n      gc.fillRect(x, y, w, h);\n    }\n\n    // Draw the column footer shadow if needed.\n    if (sy < syMax) {\n      // Set up the gradient coordinates.\n      let x0 = 0;\n      let y0 = vh;\n      let x1 = 0;\n      let y1 = vh - shadow.size;\n\n      // Create the gradient object.\n      let grad = gc.createLinearGradient(x0, y0, x1, y1);\n\n      // Set the gradient stops.\n      grad.addColorStop(0, shadow.color1);\n      grad.addColorStop(0.5, shadow.color2);\n      grad.addColorStop(1, shadow.color3);\n\n      // Set up the rect coordinates.\n      let x = 0;\n      let y = vh - shadow.size;\n      let w = hw + Math.min(pw, bw - sx);\n      let h = shadow.size;\n\n      // Fill the shadow rect with the fill style.\n      gc.fillStyle = grad;\n      gc.fillRect(x, y, w, h);\n    }\n\n    // Draw the row footer shadow if needed.\n    if (sx < sxMax) {\n      // Set up the gradient coordinates.\n      let x0 = vw;\n      let y0 = 0;\n      let x1 = vw - shadow.size;\n      let y1 = 0;\n\n      // Create the gradient object.\n      let grad = gc.createLinearGradient(x0, y0, x1, y1);\n\n      // Set the gradient stops.\n      grad.addColorStop(0, shadow.color1);\n      grad.addColorStop(0.5, shadow.color2);\n      grad.addColorStop(1, shadow.color3);\n\n      // Set up the rect coordinates.\n      let x = vw - shadow.size;\n      let y = 0;\n      let w = shadow.size;\n      let h = hh + Math.min(ph, bh - sy);\n\n      // Fill the shadow rect with the fill style.\n      gc.fillStyle = grad;\n      gc.fillRect(x, y, w, h);\n    }\n\n    // Restore the gc state.\n    gc.restore();\n  }\n\n  private _viewport: Widget;\n  private _vScrollBar: ScrollBar;\n  private _hScrollBar: ScrollBar;\n  private _scrollCorner: Widget;\n\n  private _scrollX = 0;\n  private _scrollY = 0;\n  private _viewportWidth = 0;\n  private _viewportHeight = 0;\n\n  private _mousedown = false;\n  private _keyHandler: DataGrid.IKeyHandler | null = null;\n  private _mouseHandler: DataGrid.IMouseHandler | null = null;\n\n  private _vScrollBarMinWidth = 0;\n  private _hScrollBarMinHeight = 0;\n  private _dpiRatio = Math.ceil(window.devicePixelRatio);\n\n  private _canvas: HTMLCanvasElement;\n  private _buffer: HTMLCanvasElement;\n  private _overlay: HTMLCanvasElement;\n  private _canvasGC: CanvasRenderingContext2D;\n  private _bufferGC: CanvasRenderingContext2D;\n  private _overlayGC: CanvasRenderingContext2D;\n\n  private _rowSections: SectionList;\n  private _columnSections: SectionList;\n  private _rowHeaderSections: SectionList;\n  private _columnHeaderSections: SectionList;\n\n  private _dataModel: DataModel | null = null;\n  private _selectionModel: SelectionModel | null = null;\n\n  private _stretchLastRow: boolean;\n  private _stretchLastColumn: boolean;\n\n  private _style: DataGrid.Style;\n  private _cellRenderers: RendererMap;\n  private _copyConfig: DataGrid.CopyConfig;\n  private _headerVisibility: DataGrid.HeaderVisibility;\n  private _editorController: ICellEditorController | null;\n  private _editingEnabled: boolean = false;\n}\n\n\n/**\n * The namespace for the `DataGrid` class statics.\n */\nexport\nnamespace DataGrid {\n  /**\n   * An object which defines the style for a data grid.\n   *\n   * #### Notes\n   * All style colors support the full CSS color syntax.\n   */\n  export\n  type Style = {\n    /**\n     * The void color for the data grid.\n     *\n     * This is the base fill color for the entire data grid.\n     */\n    readonly voidColor?: string;\n\n    /**\n     * The background color for the body cells.\n     *\n     * This color is layered on top of the `voidColor`.\n     */\n    readonly backgroundColor?: string;\n\n    /**\n     * A function which returns the background color for a row.\n     *\n     * This color is layered on top of the `backgroundColor` and can\n     * be used to implement \"zebra striping\" of the grid rows.\n     */\n    readonly rowBackgroundColor?: (index: number) => string;\n\n    /**\n     * A function which returns the background color for a column.\n     *\n     * This color is layered on top of the `backgroundColor` and can\n     * be used to implement \"zebra striping\" of the grid columns.\n     */\n    readonly columnBackgroundColor?: (index: number) => string;\n\n    /**\n     * The color for the grid lines of the body cells.\n     *\n     * The grid lines are draw on top of the cell contents.\n     */\n    readonly gridLineColor?: string;\n\n    /**\n     * The color for the vertical grid lines of the body cells.\n     *\n     * This overrides the `gridLineColor` option.\n     */\n    readonly verticalGridLineColor?: string;\n\n    /**\n     * The color for the horizontal grid lines of the body cells.\n     *\n     * This overrides the `gridLineColor` option.\n     */\n    readonly horizontalGridLineColor?: string;\n\n    /**\n     * The background color for the header cells.\n     *\n     * This color is layered on top of the `voidColor`.\n     */\n    readonly headerBackgroundColor?: string;\n\n    /**\n     * The color for the grid lines of the header cells.\n     *\n     * The grid lines are draw on top of the cell contents.\n     */\n    readonly headerGridLineColor?: string;\n\n    /**\n     * The color for the vertical grid lines of the header cells.\n     *\n     * This overrides the `headerGridLineColor` option.\n     */\n    readonly headerVerticalGridLineColor?: string;\n\n    /**\n     * The color for the horizontal grid lines of the header cells.\n     *\n     * This overrides the `headerGridLineColor` option.\n     */\n    readonly headerHorizontalGridLineColor?: string;\n\n    /**\n     * The fill color for a selection.\n     */\n    readonly selectionFillColor?: string;\n\n    /**\n     * The border color for a selection.\n     */\n    readonly selectionBorderColor?: string;\n\n    /**\n     * The fill color for the cursor.\n     */\n    readonly cursorFillColor?: string;\n\n    /**\n     * The border color for the cursor.\n     */\n    readonly cursorBorderColor?: string;\n\n    /**\n     * The fill color for a header selection.\n     */\n    readonly headerSelectionFillColor?: string;\n\n    /**\n     * The border color for a header selection.\n     */\n    readonly headerSelectionBorderColor?: string;\n\n    /**\n     * The drop shadow effect when the grid is scrolled.\n     */\n    readonly scrollShadow?: {\n      /**\n       * The size of the shadow, in pixels.\n       */\n      readonly size: number;\n\n      /**\n       * The first color stop for the shadow.\n       */\n      readonly color1: string;\n\n      /**\n       * The second color stop for the shadow.\n       */\n      readonly color2: string;\n\n      /**\n       * The third color stop for the shadow.\n       */\n      readonly color3: string;\n    };\n  };\n\n  /**\n   * An object which defines the default sizes for a data grid.\n   */\n  export\n  type DefaultSizes = {\n    /**\n     * The default height of a row.\n     */\n    readonly rowHeight: number;\n\n    /**\n     * The default width of a column.\n     */\n    readonly columnWidth: number;\n\n    /**\n     * The default width of a row header.\n     */\n    readonly rowHeaderWidth: number;\n\n    /**\n     * The default height of a column header.\n     */\n    readonly columnHeaderHeight: number;\n  };\n\n  /**\n   * An object which defines the minimum sizes for a data grid.\n   */\n  export\n  type MinimumSizes = {\n    /**\n     * The minimum height of a row.\n     */\n    readonly rowHeight: number;\n\n    /**\n     * The minimum width of a column.\n     */\n    readonly columnWidth: number;\n\n    /**\n     * The minimum width of a row header.\n     */\n    readonly rowHeaderWidth: number;\n\n    /**\n     * The minimum height of a column header.\n     */\n    readonly columnHeaderHeight: number;\n  };\n\n  /**\n   * A type alias for the supported header visibility modes.\n   */\n  export\n  type HeaderVisibility = 'all' | 'row' | 'column' | 'none';\n\n  /**\n   * A type alias for the arguments to a copy format function.\n   */\n  export\n  type CopyFormatArgs = {\n    /**\n     * The cell region for the value.\n     */\n    region: DataModel.CellRegion;\n\n    /**\n     * The row index of the value.\n     */\n    row: number;\n\n    /**\n     * The column index of the value.\n     */\n    column: number;\n\n    /**\n     * The value for the cell.\n     */\n    value: any;\n\n    /**\n     * The metadata for the cell.\n     */\n    metadata: DataModel.Metadata;\n  };\n\n  /**\n   * A type alias for a copy format function.\n   */\n  export\n  type CopyFormatFunc = (args: CopyFormatArgs) => string;\n\n  /**\n   * A type alias for the data grid copy config.\n   */\n  export\n  type CopyConfig = {\n    /**\n     * The separator to use between values.\n     */\n    readonly separator: string;\n\n    /**\n     * The headers to included in the copied output.\n     */\n    readonly headers: 'none' | 'row' | 'column' | 'all';\n\n    /**\n     * The function for formatting the data values.\n     */\n    readonly format: CopyFormatFunc;\n\n    /**\n     * The cell count threshold for a copy to be considered \"large\".\n     */\n    readonly warningThreshold: number;\n  };\n\n  /**\n   * An options object for initializing a data grid.\n   */\n  export\n  interface IOptions {\n    /**\n     * The style for the data grid.\n     *\n     * The default is `DataGrid.defaultStyle`.\n     */\n    style?: Style;\n\n    /**\n     * The default sizes for the data grid.\n     *\n     * The default is `DataGrid.defaultSizes`.\n     */\n    defaultSizes?: DefaultSizes;\n\n    /**\n     * The minimum sizes for the data grid.\n     *\n     * The default is `DataGrid.minimumSizes`.\n     */\n    minimumSizes?: MinimumSizes;\n\n    /**\n     * The header visibility for the data grid.\n     *\n     * The default is `'all'`.\n     */\n    headerVisibility?: HeaderVisibility;\n\n    /**\n     * The cell renderer map for the data grid.\n     *\n     * The default is an empty renderer map.\n     */\n    cellRenderers?: RendererMap;\n\n    /**\n     * The default cell renderer for the data grid.\n     *\n     * The default is a new `TextRenderer`.\n     */\n    defaultRenderer?: CellRenderer;\n\n    /**\n     * The copy configuration data for the grid.\n     *\n     * The default is `DataGrid.defaultCopyConfig`.\n     */\n    copyConfig?: CopyConfig;\n\n    /**\n     * Whether to stretch the last row of the grid.\n     *\n     * The default is `false`.\n     */\n    stretchLastRow?: boolean;\n\n    /**\n     * Whether to stretch the last column of the grid.\n     *\n     * The default is `false`.\n     */\n    stretchLastColumn?: boolean;\n  }\n\n  /**\n   * An object which handles keydown events for the data grid.\n   */\n  export\n  interface IKeyHandler extends IDisposable {\n    /**\n     * Handle the key down event for the data grid.\n     *\n     * @param grid - The data grid of interest.\n     *\n     * @param event - The keydown event of interest.\n     *\n     * #### Notes\n     * This will not be called if the mouse button is pressed.\n     */\n    onKeyDown(grid: DataGrid, event: KeyboardEvent): void;\n  }\n\n  /**\n   * An object which handles mouse events for the data grid.\n   */\n  export\n  interface IMouseHandler extends IDisposable {\n    /**\n     * Release any resources acquired during a mouse press.\n     *\n     * #### Notes\n     * This method is called when the mouse should be released\n     * independent of a mouseup event, such as an early detach.\n     */\n    release(): void;\n\n    /**\n     * Handle the mouse hover event for the data grid.\n     *\n     * @param grid - The data grid of interest.\n     *\n     * @param event - The mouse hover event of interest.\n     */\n    onMouseHover(grid: DataGrid, event: MouseEvent): void;\n\n    /**\n     * Handle the mouse leave event for the data grid.\n     *\n     * @param grid - The data grid of interest.\n     *\n     * @param event - The mouse hover event of interest.\n     */\n    onMouseLeave(grid: DataGrid, event: MouseEvent): void;\n\n    /**\n     * Handle the mouse down event for the data grid.\n     *\n     * @param grid - The data grid of interest.\n     *\n     * @param event - The mouse down event of interest.\n     */\n    onMouseDown(grid: DataGrid, event: MouseEvent): void;\n\n    /**\n     * Handle the mouse move event for the data grid.\n     *\n     * @param grid - The data grid of interest.\n     *\n     * @param event - The mouse move event of interest.\n     */\n    onMouseMove(grid: DataGrid, event: MouseEvent): void;\n\n    /**\n     * Handle the mouse up event for the data grid.\n     *\n     * @param grid - The data grid of interest.\n     *\n     * @param event - The mouse up event of interest.\n     */\n    onMouseUp(grid: DataGrid, event: MouseEvent): void;\n\n    /**\n     * Handle the mouse double click event for the data grid.\n     *\n     * @param grid - The data grid of interest.\n     *\n     * @param event - The mouse double click event of interest.\n     */\n    onMouseDoubleClick(grid: DataGrid, event: MouseEvent): void;\n\n    /**\n     * Handle the context menu event for the data grid.\n     *\n     * @param grid - The data grid of interest.\n     *\n     * @param event - The context menu event of interest.\n     */\n    onContextMenu(grid: DataGrid, event: MouseEvent): void;\n\n    /**\n     * Handle the wheel event for the data grid.\n     *\n     * @param grid - The data grid of interest.\n     *\n     * @param event - The wheel event of interest.\n     */\n    onWheel(grid: DataGrid, event: WheelEvent): void;\n  }\n\n  /**\n   * An object which holds the result of a grid hit test.\n   */\n  export\n  type HitTestResult = {\n    /**\n     * The region of the data grid that was hit.\n     */\n    readonly region: DataModel.CellRegion | 'void';\n\n    /**\n     * The row index of the cell that was hit.\n     *\n     * This is `-1` for the `void` region.\n     */\n    readonly row: number;\n\n    /**\n     * The column index of the cell that was hit.\n     *\n     * This is `-1` for the `void` region.\n     */\n    readonly column: number;\n\n    /**\n     * The X coordinate of the mouse in cell coordinates.\n     *\n     * This is `-1` for the `void` region.\n     */\n    readonly x: number;\n\n    /**\n     * The Y coordinate of the mouse in cell coordinates.\n     *\n     * This is `-1` for the `void` region.\n     */\n    readonly y: number;\n\n    /**\n     * The width of the cell.\n     *\n     * This is `-1` for the `void` region.\n     */\n    readonly width: number;\n\n    /**\n     * The height of the cell.\n     *\n     * This is `-1` for the `void` region.\n     */\n    readonly height: number;\n  };\n\n  /**\n   * A generic format function for the copy handler.\n   *\n   * @param args - The format args for the function.\n   *\n   * @returns The string representation of the value.\n   *\n   * #### Notes\n   * This function uses `String()` to coerce a value to a string.\n   */\n  export\n  function copyFormatGeneric(args: CopyFormatArgs): string {\n    if (args.value === null || args.value === undefined) {\n      return '';\n    }\n    return String(args.value);\n  }\n\n  /**\n   * The default theme for a data grid.\n   */\n  export\n  const defaultStyle: Style = {\n    voidColor: '#F3F3F3',\n    backgroundColor: '#FFFFFF',\n    gridLineColor: 'rgba(20, 20, 20, 0.15)',\n    headerBackgroundColor: '#F3F3F3',\n    headerGridLineColor: 'rgba(20, 20, 20, 0.25)',\n    selectionFillColor: 'rgba(49, 119, 229, 0.2)',\n    selectionBorderColor: 'rgba(0, 107, 247, 1.0)',\n    cursorBorderColor: 'rgba(0, 107, 247, 1.0)',\n    headerSelectionFillColor: 'rgba(20, 20, 20, 0.1)',\n    headerSelectionBorderColor: 'rgba(0, 107, 247, 1.0)',\n    scrollShadow: {\n      size: 10,\n      color1: 'rgba(0, 0, 0, 0.20)',\n      color2: 'rgba(0, 0, 0, 0.05)',\n      color3: 'rgba(0, 0, 0, 0.00)' }\n  };\n\n  /**\n   * The default sizes for a data grid.\n   */\n  export\n  const defaultSizes: DefaultSizes = {\n    rowHeight: 20,\n    columnWidth: 64,\n    rowHeaderWidth: 64,\n    columnHeaderHeight: 20\n  };\n\n  /**\n   * The default minimum sizes for a data grid.\n   */\n  export\n  const minimumSizes: MinimumSizes = {\n    rowHeight: 20,\n    columnWidth: 10,\n    rowHeaderWidth: 10,\n    columnHeaderHeight: 20\n  };\n\n  /**\n   * The default copy config for a data grid.\n   */\n  export\n  const defaultCopyConfig: CopyConfig = {\n    separator: '\\t',\n    format: copyFormatGeneric,\n    headers: 'none',\n    warningThreshold: 1e6\n  };\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A singleton `scroll-request` conflatable message.\n   */\n  export\n  const ScrollRequest = new ConflatableMessage('scroll-request');\n\n  /**\n   * A singleton `section-resize-request` conflatable message.\n   */\n  export\n  const SectionResizeRequest = new ConflatableMessage('section-resize-request');\n\n  /**\n   * A singleton `overlay-paint-request` conflatable message.\n   */\n  export\n  const OverlayPaintRequest = new ConflatableMessage('overlay-paint-request');\n\n  /**\n   * Create a new zero-sized canvas element.\n   */\n  export\n  function createCanvas(): HTMLCanvasElement {\n    let canvas = document.createElement('canvas');\n    canvas.width = 0;\n    canvas.height = 0;\n    return canvas;\n  }\n\n  /**\n   * An object which represents a region to be painted.\n   */\n  export\n  type PaintRegion = {\n    /**\n     * The min X coordinate the of the dirty viewport rect.\n     *\n     * #### Notes\n     * The data grid must not draw outside of this boundary.\n     */\n    xMin: number;\n\n    /**\n     * The min Y coordinate the of the dirty viewport rect.\n     *\n     * #### Notes\n     * The data grid must not draw outside of this boundary.\n     */\n    yMin: number;\n\n    /**\n     * The max X coordinate the of the dirty viewport rect.\n     *\n     * #### Notes\n     * The data grid must not draw outside of this boundary.\n     */\n    xMax: number;\n\n    /**\n     * The max Y coordinate the of the dirty viewport rect.\n     *\n     * #### Notes\n     * The data grid must not draw outside of this boundary.\n     */\n    yMax: number;\n\n    /**\n     * The X coordinate the of the region, in viewport coordinates.\n     *\n     * #### Notes\n     * This is aligned to the first cell boundary.\n     */\n    x: number;\n\n    /**\n     * The Y coordinate the of the region, in viewport coordinates.\n     *\n     * #### Notes\n     * This is aligned to the first cell boundary.\n     */\n    y: number;\n\n    /**\n     * The total width of the region.\n     *\n     * #### Notes\n     * This is aligned to the cell boundaries.\n     */\n    width: number;\n\n    /**\n     * The total height of the region.\n     *\n     * #### Notes\n     * This is aligned to the cell boundaries.\n     */\n    height: number;\n\n    /**\n     * The cell region being painted.\n     */\n    region: DataModel.CellRegion;\n\n    /**\n     * The row index of the first cell in the region.\n     */\n    row: number;\n\n    /**\n     * The column index of the first cell in the region.\n     */\n    column: number;\n\n    /**\n     * The row sizes for the rows in the region.\n     */\n    rowSizes: number[];\n\n    /**\n     * The column sizes for the columns in the region.\n     */\n    columnSizes: number[];\n  };\n\n  /**\n   * A conflatable message which merges dirty paint regions.\n   */\n  export\n  class PaintRequest extends ConflatableMessage {\n    /**\n     * Construct a new paint request messages.\n     *\n     * @param region - The cell region for the paint.\n     *\n     * @param r1 - The top-left row of the dirty region.\n     *\n     * @param c1 - The top-left column of the dirty region.\n     *\n     * @param r2 - The bottom-right row of the dirty region.\n     *\n     * @param c2 - The bottom-right column of the dirty region.\n     */\n    constructor(region: DataModel.CellRegion | 'all', r1: number, c1: number, r2: number, c2: number) {\n      super('paint-request');\n      this._region = region;\n      this._r1 = r1;\n      this._c1 = c1;\n      this._r2 = r2;\n      this._c2 = c2;\n    }\n\n    /**\n     * The cell region for the paint.\n     */\n    get region(): DataModel.CellRegion | 'all' {\n      return this._region;\n    }\n\n    /**\n     * The top-left row of the dirty region.\n     */\n    get r1(): number {\n      return this._r1;\n    }\n\n    /**\n     * The top-left column of the dirty region.\n     */\n    get c1(): number {\n      return this._c1;\n    }\n\n    /**\n     * The bottom-right row of the dirty region.\n     */\n    get r2(): number {\n      return this._r2;\n    }\n\n    /**\n     * The bottom-right column of the dirty region.\n     */\n    get c2(): number {\n      return this._c2;\n    }\n\n    /**\n     * Conflate this message with another paint request.\n     */\n    conflate(other: PaintRequest): boolean {\n      // Bail early if the request is already painting everything.\n      if (this._region === 'all') {\n        return true;\n      }\n\n      // Any region can conflate with the `'all'` region.\n      if (other._region === 'all') {\n        this._region = 'all';\n        return true;\n      }\n\n      // Otherwise, do not conflate with a different region.\n      if (this._region !== other._region) {\n        return false;\n      }\n\n      // Conflate the region to the total boundary.\n      this._r1 = Math.min(this._r1, other._r1);\n      this._c1 = Math.min(this._c1, other._c1);\n      this._r2 = Math.max(this._r2, other._r2);\n      this._c2 = Math.max(this._c2, other._c2);\n      return true;\n    }\n\n    private _region: DataModel.CellRegion | 'all';\n    private _r1: number;\n    private _c1: number;\n    private _r2: number;\n    private _c2: number;\n  }\n\n  /**\n   * A conflatable message for resizing rows.\n   */\n  export\n  class RowResizeRequest extends ConflatableMessage {\n    /**\n     * Construct a new row resize request.\n     *\n     * @param region - The row region which holds the section.\n     *\n     * @param index - The index of row in the region.\n     *\n     * @param size - The target size of the section.\n     */\n    constructor(region: DataModel.RowRegion, index: number, size: number) {\n      super('row-resize-request');\n      this._region = region;\n      this._index = index;\n      this._size = size;\n    }\n\n    /**\n     * The row region which holds the section.\n     */\n    get region(): DataModel.RowRegion {\n      return this._region;\n    }\n\n    /**\n     * The index of the row in the region.\n     */\n    get index(): number {\n      return this._index;\n    }\n\n    /**\n     * The target size of the section.\n     */\n    get size(): number {\n      return this._size;\n    }\n\n    /**\n     * Conflate this message with another row resize request.\n     */\n    conflate(other: RowResizeRequest): boolean {\n      if (this._region !== other._region || this._index !== other._index) {\n        return false;\n      }\n      this._size = other._size;\n      return true;\n    }\n\n    private _region: DataModel.RowRegion;\n    private _index: number;\n    private _size: number;\n  }\n\n  /**\n   * A conflatable message for resizing columns.\n   */\n  export\n  class ColumnResizeRequest extends ConflatableMessage {\n    /**\n     * Construct a new column resize request.\n     *\n     * @param region - The column region which holds the section.\n     *\n     * @param index - The index of column in the region.\n     *\n     * @param size - The target size of the section.\n     */\n    constructor(region: DataModel.ColumnRegion, index: number, size: number) {\n      super('column-resize-request');\n      this._region = region;\n      this._index = index;\n      this._size = size;\n    }\n\n    /**\n     * The column region which holds the section.\n     */\n    get region(): DataModel.ColumnRegion {\n      return this._region;\n    }\n\n    /**\n     * The index of the column in the region.\n     */\n    get index(): number {\n      return this._index;\n    }\n\n    /**\n     * The target size of the section.\n     */\n    get size(): number {\n      return this._size;\n    }\n\n    /**\n     * Conflate this message with another column resize request.\n     */\n    conflate(other: ColumnResizeRequest): boolean {\n      if (this._region !== other._region || this._index !== other._index) {\n        return false;\n      }\n      this._size = other._size;\n      return true;\n    }\n\n    private _region: DataModel.ColumnRegion;\n    private _index: number;\n    private _size: number;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ReadonlyJSONObject\n} from '@lumino/coreutils';\n\nimport {\n  DataModel\n} from './datamodel';\n\n\n/**\n * A data model implementation for in-memory JSON data.\n */\nexport\nclass JSONModel extends DataModel {\n  /**\n   * Create a data model with static JSON data.\n   *\n   * @param options - The options for initializing the data model.\n   */\n  constructor(options: JSONModel.IOptions) {\n    super();\n    let split = Private.splitFields(options.schema);\n    this._data = options.data;\n    this._bodyFields = split.bodyFields;\n    this._headerFields = split.headerFields;\n    this._missingValues = Private.createMissingMap(options.schema);\n  }\n\n  /**\n   * Get the row count for a region in the data model.\n   *\n   * @param region - The row region of interest.\n   *\n   * @returns - The row count for the region.\n   */\n  rowCount(region: DataModel.RowRegion): number {\n    if (region === 'body') {\n      return this._data.length;\n    }\n    return 1;  // TODO multiple column-header rows?\n  }\n\n  /**\n   * Get the column count for a region in the data model.\n   *\n   * @param region - The column region of interest.\n   *\n   * @returns - The column count for the region.\n   */\n  columnCount(region: DataModel.ColumnRegion): number {\n    if (region === 'body') {\n      return this._bodyFields.length;\n    }\n    return this._headerFields.length;\n  }\n\n  /**\n   * Get the data value for a cell in the data model.\n   *\n   * @param region - The cell region of interest.\n   *\n   * @param row - The row index of the cell of interest.\n   *\n   * @param column - The column index of the cell of interest.\n   *\n   * @returns - The data value for the specified cell.\n   *\n   * #### Notes\n   * A `missingValue` as defined by the schema is converted to `null`.\n   */\n  data(region: DataModel.CellRegion, row: number, column: number): any {\n    // Set up the field and value variables.\n    let field: JSONModel.Field;\n    let value: any;\n\n    // Look up the field and value for the region.\n    switch (region) {\n    case 'body':\n      field = this._bodyFields[column];\n      value = this._data[row][field.name];\n      break;\n    case 'column-header':\n      field = this._bodyFields[column];\n      value = field.title || field.name;\n      break;\n    case 'row-header':\n      field = this._headerFields[column];\n      value = this._data[row][field.name];\n      break;\n    case 'corner-header':\n      field = this._headerFields[column];\n      value = field.title || field.name;\n      break;\n    default:\n      throw 'unreachable';\n    }\n\n    // Test whether the value is a missing value.\n    let missing = (\n      this._missingValues !== null &&\n      typeof value === 'string' &&\n      this._missingValues[value] === true\n    );\n\n    // Return the final value.\n    return missing ? null : value;\n  }\n\n  /**\n   * Get the metadata for a cell in the data model.\n   *\n   * @param region - The cell region of interest.\n   *\n   * @param row - The row index of the cell of of interest.\n   *\n   * @param column - The column index of the cell of interest.\n   *\n   * @returns The metadata for the cell.\n   */\n  metadata(region: DataModel.CellRegion, row: number, column: number): DataModel.Metadata {\n    if (region === 'body' || region === 'column-header') {\n      return this._bodyFields[column];\n    }\n    return this._headerFields[column];\n  }\n\n  private _data: JSONModel.DataSource;\n  private _bodyFields: JSONModel.Field[];\n  private _headerFields: JSONModel.Field[];\n  private _missingValues: Private.MissingValuesMap | null;\n}\n\n\n/**\n * The namespace for the `JSONModel` class statics.\n */\nexport\nnamespace JSONModel {\n  /**\n   * An object which describes a column of data in the model.\n   *\n   * #### Notes\n   * This is based on the JSON Table Schema specification:\n   * https://specs.frictionlessdata.io/table-schema/\n   */\n  export\n  type Field = {\n    /**\n     * The name of the column.\n     *\n     * This is used as the key to extract a value from a data record.\n     * It is also used as the column header label, unless the `title`\n     * property is provided.\n     */\n    readonly name: string;\n\n    /**\n     * The type of data held in the column.\n     */\n    readonly type?: string;\n\n    /**\n     * The format of the data in the column.\n     */\n    readonly format?: string;\n\n    /**\n     * The human readable name for the column.\n     *\n     * This is used as the label for the column header.\n     */\n    readonly title?: string;\n\n    // TODO want/need support for any these?\n    // description?: string;\n    // constraints?: IConstraints;\n    // rdfType?: string;\n  };\n\n  /**\n   * An object when specifies the schema for a data model.\n   *\n   * #### Notes\n   * This is based on the JSON Table Schema specification:\n   * https://specs.frictionlessdata.io/table-schema/\n   */\n  export\n  type Schema = {\n    /**\n     * The fields which describe the data model columns.\n     *\n     * Primary key fields are rendered as row header columns.\n     */\n    readonly fields: Field[];\n\n    /**\n     * The values to treat as \"missing\" data.\n     *\n     * Missing values are automatically converted to `null`.\n     */\n    readonly missingValues?: string[];\n\n    /**\n     * The field names which act as primary keys.\n     *\n     * Primary key fields are rendered as row header columns.\n     */\n    readonly primaryKey?: string | string[];\n\n    // TODO want/need support for this?\n    // foreignKeys?: IForeignKey[];\n  };\n\n  /**\n   * A type alias for a data source for a JSON data model.\n   *\n   * A data source is an array of JSON object records which represent\n   * the rows of the table. The keys of the records correspond to the\n   * field names of the columns.\n   */\n  export\n  type DataSource = ReadonlyArray<ReadonlyJSONObject>;\n\n  /**\n   * An options object for initializing a JSON data model.\n   */\n  export\n  interface IOptions {\n    /**\n     * The schema for the for the data model.\n     *\n     * The schema should be treated as an immutable object.\n     */\n    schema: Schema;\n\n    /**\n     * The data source for the data model.\n     *\n     * The data model takes full ownership of the data source.\n     */\n    data: DataSource;\n  }\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * An object which holds the results of splitting schema fields.\n   */\n  export\n  type SplitFieldsResult = {\n    /**\n     * The non-primary key fields to use for the grid body.\n     */\n    bodyFields: JSONModel.Field[];\n\n    /**\n     * The primary key fields to use for the grid headers.\n     */\n    headerFields: JSONModel.Field[];\n  };\n\n  /**\n   * Split the schema fields into header and body fields.\n   */\n  export\n  function splitFields(schema: JSONModel.Schema): SplitFieldsResult {\n    // Normalize the primary keys.\n    let primaryKeys: string[];\n    if (schema.primaryKey === undefined) {\n      primaryKeys = [];\n    } else if (typeof schema.primaryKey === 'string') {\n      primaryKeys = [schema.primaryKey];\n    } else {\n      primaryKeys = schema.primaryKey;\n    }\n\n    // Separate the fields for the body and header.\n    let bodyFields: JSONModel.Field[] = [];\n    let headerFields: JSONModel.Field[] = [];\n    for (let field of schema.fields) {\n      if (primaryKeys.indexOf(field.name) === -1) {\n        bodyFields.push(field);\n      } else {\n        headerFields.push(field);\n      }\n    }\n\n    // Return the separated fields.\n    return { bodyFields, headerFields };\n  }\n\n  /**\n   * A type alias for a missing value map.\n   */\n  export\n  type MissingValuesMap = { [key: string]: boolean };\n\n  /**\n   * Create a missing values map for a schema.\n   *\n   * This returns `null` if there are no missing values.\n   */\n  export\n  function createMissingMap(schema: JSONModel.Schema): MissingValuesMap | null {\n    // Bail early if there are no missing values.\n    if (!schema.missingValues || schema.missingValues.length === 0) {\n      return null;\n    }\n\n    // Collect the missing values into a map.\n    let result: MissingValuesMap = Object.create(null);\n    for (let value of schema.missingValues) {\n      result[value] = true;\n    }\n\n    // Return the populated map.\n    return result;\n  }\n}\n"],"names":["Private"],"mappings":"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"}